{"version":3,"sources":["assets/Nanotech/Logo.png","assets/Nanotech/SmallLogo.png","assets/sign-in-background-6.jpg","assets/Pattern-Developing-Page.svg","services/api.ts","context/auth.tsx","context/sales-filtered-report.tsx","components/ToastContainer/styles.ts","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/index.tsx","context/toast.tsx","context/index.tsx","styles/theme.ts","context/theme/ThemeContainer.tsx","components/Breadcrumb/styles.ts","components/Breadcrumb/index.tsx","components/Button/index.tsx","components/Header/styles.ts","components/Header/index.tsx","components/Menu/index.tsx","utils/getValidationError.ts","components/ToolTip/styles.ts","components/ToolTip/index.tsx","components/FormattedInput/styles.ts","components/FormattedInput/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Modals/UpdateCompany/index.tsx","components/Modals/UpdateUnit/index.tsx","pages/Companies/styles.ts","pages/Companies/index.tsx","utils/CpfCnpjUtils.ts","pages/CompaniesRegister/styles.ts","pages/CompaniesRegister/index.tsx","pages/FirstLogin/styles.ts","pages/FirstLogin/index.tsx","pages/Login/styles.ts","pages/Login/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","components/DatePicker/styles.ts","components/DatePicker/utils/formatWeekDay.ts","components/DatePicker/index.tsx","components/Select/styles.ts","components/Select/index.tsx","components/Separator/styles.ts","components/Separator/index.tsx","pages/Reports/styles.ts","pages/Reports/index.tsx","components/Pagination/styles.ts","components/Pagination/index.tsx","utils/formatMoney.ts","pages/Sales/styles.ts","pages/Sales/index.tsx","utils/getSaleStatusTranslated.ts","components/Datetime/styles.ts","components/Datetime/index.tsx","components/Textarea/index.tsx","utils/masks.ts","pages/SalesRegister/styles.ts","pages/SalesRegister/index.tsx","pages/Sellers/styles.ts","pages/Sellers/index.tsx","pages/SellersRegister/styles.ts","pages/SellersRegister/index.tsx","pages/Services/styles.ts","pages/Services/index.tsx","pages/Services/Vitrificação/styles.ts","pages/Services/Vitrificação/index.tsx","components/Modals/UpdateService/index.tsx","pages/ServicesAdmin/styles.ts","pages/ServicesAdmin/index.tsx","pages/ServicesRegister/styles.ts","pages/ServicesRegister/index.tsx","pages/SetCompanyFirstPrices/styles.ts","pages/SetCompanyFirstPrices/index.tsx","pages/UnitiesRegister/styles.ts","pages/UnitiesRegister/index.tsx","pages/UpdateCompanyPrices/styles.ts","pages/UpdateCompanyPrices/index.tsx","components/Modals/UpdateUserData/index.tsx","pages/UsersByCompanies/styles.ts","pages/UsersByCompanies/index.tsx","utils/getUserRoleTranslated.ts","pages/UsersRegister/styles.ts","pages/UsersRegister/index.tsx","routes/Permission.tsx","routes/Route.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx","assets/sign-in-background-3.jpg"],"names":["module","exports","api","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","url","endsWith","originalRequest","status","removeItem","_retry","post","then","res","setItem","data","accessToken","defaults","common","AuthContext","createContext","AuthProvider","children","history","useHistory","location","useLocation","useState","access_token","refresh_token","user","userData","JSON","parse","buttons","role","name","enable","route","icon","color","setData","signIn","useCallback","a","username","password","colorRendering","stringify","signOut","useEffect","pathname","replace","get","catch","Provider","value","useAuth","context","useContext","Error","SalesFilteredReportContext","SalesFilteredReportProvider","sales","setSales","filters","setFilters","setSalesFilteredReport","newSales","setReportFilters","newFilters","Container","styled","div","toastTypeVariations","info","css","success","animated","props","type","hasdescription","icons","size","Toast","message","style","removeToast","useToast","timer","setTimeout","id","clearTimeout","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","oldMessages","state","filter","AppProvider","customTheme","theme","fonts","body","heading","mono","fontWeights","normal","medium","bold","radii","sm","md","fontSizes","colors","gray","700","800","900","zIndices","tooltip","ThemeContainer","ColorModeProvider","CSSReset","ChakraBox","Breadcrumb","text","backgroundColor","width","maxWidth","xs","lg","xl","display","marginLeft","marginRight","padding","borderRadius","fontWeight","Button","skipButton","rest","height","border","fontSize","marginTop","_hover","bg","_focusWithin","_disabled","cursor","background","Box","Buttons","Flex","shade","Header","disableButtons","initialSelectedButton","selected","setSelected","React","anchorEl","setAnchorEl","Image","src","Logo","minDeviceWidth","direction","to","button","className","maxDeviceWidth","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Sidebar","disableButton","handleClickMenuButon","push","handleSignout","position","left","top","paddingTop","alignItems","justifyContent","borderBottom","Tooltip","label","aria-label","isDisabled","marginBottom","borderTop","getValidationErrors","err","validationErrors","inner","forEach","path","ToolTip","isErrored","FormattedInput","Icon","defaultValue","inputRef","useRef","floatValue","undefined","String","formattedValue","setValue","useField","fieldName","registerField","ref","clearValue","onValueChange","values","Input","current","UpdateCompanyModal","isOpen","onSave","company","formRef","handleSubmit","setErrors","telephone","cnpj","client_identifier","schema","Yup","shape","max","min","length","nullable","validate","abortEarly","put","duration","errors","Modal","onSubmit","paddingBottom","placeholder","MdBusiness","format","mask","FiPhone","AiOutlineIdcard","variant","UpdateUnitDataModal","unit","submitData","Content","Separator","List","Companies","companies","setCompanies","openedCompanies","setOpenedCompanies","companyToUpdate","setCompanyToUpdate","unitToUpdate","setUnitToUpdate","loading","setLoading","newCompanies","getCompanies","handleOpenUpdateCompanyModal","handleCloseUpdateCompanyModal","handleOpenCompanies","handleCloseCompanies","newOpenedCompanies","companyId","handleOpenUpdateUnitData","handleCloseUpdateUnitData","formattedCompanies","useMemo","units","unities","Stack","Skeleton","colorStart","colorEnd","includes","alignContent","alignSelf","hidden","UpdateUnit","UpdateCompany","CpfCnpjUtils","cpf","this","isValid","digits","correctDigitsLength","firstDotPosition","secondDotPosition","slashPosition","dashPosition","getOnlyNumbers","slice","split","reduce","acc","digit","idx","result","weights","cleanDigits","isAllTheSameDigits","digitsWithoutChecker","substring","calcChecker","some","digitsLength","digitsLengthWithoutChecker","sumDivisionRemainder","checker","InputContainer","CompaniesRegister","reset","companyName","required","companyTelephone","companyCnpj","companyIdentifier","isCnpjValid","getValidationsErrors","ButtonsContainer","FirstLogin","comingFromLogin","updatePassword","confirmPassword","oneOf","patch","newPassword","paddingY","paddingX","flexDirection","w","h","Text","FiLock","Background","signInBackgroundImg","Login","first_login","FiUser","backgroundPattern","NotFound","transparentize","red","formatWeekDay","originalWeekDay","DatePicker","containerProps","initialDate","datePickerRef","showPopperArrow","dateFormat","placeholderText","onChange","date","isFocused","isFilled","ReactSelect","selectRef","setIsFocused","setIsFilled","handleInputFocus","handleInputBlur","paddingLeft","focus","focusBorderColor","onFocus","onBlur","Reports","services","setServices","isReportLoading","setIsReportLoading","newServices","handleGetReport","reqData","finalDate","service","Object","assign","params","file","window","url_to_download","borderColor","IPagination","total_pages","page","setPage","Pagination","count","_e","j","formatMoney","Number","toLocaleString","currency","e","toString","Sales","searchFormRef","openedServices","setOpenedServices","selectedSales","setSelectedSales","deleteLoading","setDeleteLoading","currentPage","setCurrentPage","totalPages","setTotalPages","items","formattedSales","sale","services_sales","price","cost_value","company_value","client_id","seller","customer","person","comments","car","brand","model","carPlate","plate","availability_date","delivery_date","request_date","handleOpenServices","handleCloseServices","newopenedServices","serviceId","handleSelectSale","newSelectedSaless","handleUpdateSale","statusSale","handleSearchSale","query","handleRemoveFilters","salesWithoutFilter","current_page","handleDeleteSales","delete","ids","notDeletedSales","Date","locale","ptBR","getSaleStatusTranslated","stopPropagation","wordBreak","flexShrink","textAlign","lineHeight","DateTime","dateTimeRef","dateValue","setDateValue","handleAvailabilityChange","target","TextField","InputLabelProps","shrink","ITextarea","textareaRef","Textarea","borderWidth","resize","_focus","currencyMasker","documentMask","docValue","Inputs","ChakraFlex","ServiceBox","Services","ChakraGrid","SalesRegister","document","setDocument","loadingButton","setLoadingButton","selectedServices","setSelectedServices","unitSelectOptions","setUnitSelectOptions","responseServices","profile","company_id","unitiesOptions","handleSelectService","findIndex","filteredItems","responseCompanyBudget","companyPrice","responseCostBudget","costPrice","cpfWithoutPoint","formattedCpf","unitId","carColor","carModel","matches","sourceCar","deliveryDate","availabilityDate","createSaleData","toISOString","source","responseCreatedSale","createServiceSaleData","saleId","serviceIds","responseCreatedServiceSale","msg","serv","index","wppMessage","urlToSendMessage","opt","flex","Datetime","templateColumns","Sellers","rows","setRows","sellers","row","email","RegsiterSellers","requestData","enabled","servicesAmount","companyservices","Grid","gap","paddingRight","alt","margin","Service","UpdateServicePriceModal","handleKeyUp","preventDefault","onKeyUp","FiDollarSign","AdminServices","openUpdateService","setOpenUpdateService","getService","handleOpenUpdateServiceModal","handleCloseUpdateServiceModal","rowsFormatted","UpdateService","ServicesRegister","serviceName","serviceValue","formData","PriceBox","SetCompanyPrices","existingServices","companyServicesIds","companyService","service_id","keys","parseFloat","voidValues","isNaN","voidInputsClassesNames","gridTemplateColumns","toUpperCase","UnitiesRegister","setCompany","search","parsedQuery","queryString","parseNumbers","newCompany","unitName","unitIdentifier","unitTelephone","requestDataSubmit","UpdateCompanyPrices","companyServices","setCompanyServices","editionMode","setEditionMode","companyServiceSelected","setCompanyServiceSelected","loadCompanyServices","handleEditClick","handleCancelEdition","newValue","dataToSubmit","companyServiceId","UpdateUserDataModal","UsersByUnits","setOpenedCommpanies","userToUpdate","setUserToUpdate","getCompaniesByUsers","handleOpenUnities","handleCloseUnities","newOpenedUnities","handleOpenUpdateUserData","handleCloseUpdateUserModal","formattedUsersByCompanies","users","profiles","update_button","getUserRoleTranslated","UsersRegister","setRole","isUuid","handleChangeRoleSelect","formDataToCreateSeller","formDataToCreateManager","Permission","permissions","Component","component","render","Route","isPrivate","Routes","exact","ServicesAdmin","SetCompanyFirstPrices","SellersRegister","Users","GlobalStyle","createGlobalStyle","App","ReactDOM","StrictMode","getElementById"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oPCErCC,EAAMC,IAAMC,OAAO,CACvBC,QAAS,iCAIXH,EAAII,aAAaC,QAAQC,KACvB,SAAAC,GACE,IAAMC,EAAQC,aAAaC,QAAQ,4BAKnC,OAJIF,IACFD,EAAOI,QAAP,+BAA4CH,IAGvCD,KAET,SAAAK,GACEC,QAAQC,OAAOF,MAInBZ,EAAII,aAAaW,SAAST,KACxB,SAAAS,GAAQ,OAAIA,KACZ,SAAAH,GACE,IAAKA,EAAML,OAAOS,IAChB,OAAOJ,EAAML,OAGf,IACGK,EAAML,OAAOS,IAAIC,SAAS,WAC1BL,EAAML,OAAOS,IAAIC,SAAS,WAC3B,CAAC,IAAD,EACMC,EAAkBN,EAAML,OAE9B,GAC6B,OAA3B,UAAAK,EAAMG,gBAAN,eAAgBI,SACQ,kBAAxBD,EAAgBF,IAMhB,OAJAP,aAAaW,WAAW,4BACxBX,aAAaW,WAAW,6BACxBX,aAAaW,WAAW,oBAEjBP,QAAQC,OAAOF,GAGxB,GAC4B,MAA1BA,EAAMG,SAASI,QACS,kBAAxBD,EAAgBF,IAMhB,OAJAP,aAAaW,WAAW,4BACxBX,aAAaW,WAAW,6BACxBX,aAAaW,WAAW,oBAEjBP,QAAQC,OAAOF,GAGxB,GAA8B,MAA1BA,EAAMG,SAASI,SAAmBD,EAAgBG,OAEpD,OADAH,EAAgBG,QAAS,EAClBrB,EACJsB,KAAK,gBAAiB,CACrBd,MAAOC,aAAaC,QAAQ,+BAE7Ba,MAAK,SAAAC,GAQJ,OAPAf,aAAagB,QACX,2BACAD,EAAIE,KAAKC,aAEX3B,EAAI4B,SAASjB,QAAQkB,OAArB,+BAEcpB,aAAaC,QAAQ,6BAC5BV,EAAIkB,MAIjB,GAA8B,MAA1BN,EAAMG,SAASI,SAAmBD,EAAgBG,OAEpD,OADAH,EAAgBG,QAAS,EAClBrB,EACJsB,KAAK,gBAAiB,CACrBd,MAAOC,aAAaC,QAAQ,+BAE7Ba,MAAK,SAAAC,GAQJ,OAPAf,aAAagB,QACX,2BACAD,EAAIE,KAAKC,aAEX3B,EAAI4B,SAASjB,QAAQkB,OAArB,+BAEcpB,aAAaC,QAAQ,6BAC5BV,EAAIkB,MAInB,OAAOL,QAAQC,OAAOF,MAIXZ,QClCF8B,EAAcC,wBACzB,IAGWC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjCC,EAAUC,cACVC,EAAWC,cAFqC,EAG9BC,oBACtB,WACE,IAAMC,EAAe9B,aAAaC,QAAQ,4BACpC8B,EAAgB/B,aAAaC,QAAQ,6BACrC+B,EAAOhC,aAAaC,QAAQ,oBAElC,GAAI6B,GAAgBC,GAAiBC,EAAM,CACzC,IAAMC,EAAWC,KAAKC,MAAMH,GAExBI,EAAqB,GA2GzB,MAzGsB,YAAlBH,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,aACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAASC,MAAM,UAEvB,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,YACNC,QAAQ,EACRC,MAAO,UACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,YAKH,UAAlBT,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,qBACNC,QAAQ,EACRC,MAAO,aACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAASC,MAAM,UAEvB,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,0BACNC,QAAQ,EACRC,MAAO,2BACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,UAErB,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,YAKR,WAAlBT,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,YAKnB,CAAEZ,eAAcC,gBAAeC,KAAME,KAAKC,MAAMH,GAAOI,WAGhE,MAAO,MA1H2C,mBAG/CnB,EAH+C,KAGzC0B,EAHyC,KA8HhDC,EAASC,sBAAW,uCAAC,2CAAAC,EAAA,6DAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,SACFzD,EAAIsB,KAAK,eAAgB,CAAEkC,WAAUC,aADnC,cACnB1C,EADmB,OAGjB0B,EAAS1B,EAASW,KAAlBe,KAHiB,EAIe1B,EAASW,KAAzCa,EAJiB,EAIjBA,aAAcC,EAJG,EAIHA,cAClBK,EAAqB,GAEP,YAAdJ,EAAKK,OACPD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,aACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAASQ,eAAe,OAAOP,MAAM,UAE7C,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,YACNC,QAAQ,EACRC,MAAO,UACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,YAKP,UAAdV,EAAKK,OACPD,EAAU,CACR,CACEE,KAAM,qBACNC,QAAQ,EACRC,MAAO,aACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAASC,MAAM,UAEvB,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,0BACNC,QAAQ,EACRC,MAAO,2BACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,UAErB,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,YAKZ,WAAdV,EAAKK,OACPD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,YAK1B1C,aAAagB,QAAQ,2BAA4Bc,GACjD9B,aAAagB,QAAQ,4BAA6Be,GAClD/B,aAAagB,QAAQ,mBAAoBkB,KAAKgB,UAAUlB,IAExDW,EAAQ,CAAEb,eAAcC,gBAAeC,OAAMI,YApHpB,kBAqHlB9B,EAASW,MArHS,4CAAD,sDAsHvB,IAEGkC,EAAUN,uBAAY,WAC1B7C,aAAaW,WAAW,4BACxBX,aAAaW,WAAW,6BACxBX,aAAaW,WAAW,oBAExBgC,EAAQ,MACP,IA6JH,OA3JAS,qBAAU,WACR,IAAMtB,EAAe9B,aAAaC,QAAQ,4BACpC8B,EAAgB/B,aAAaC,QAAQ,6BACrC+B,EAAOhC,aAAaC,QAAQ,oBAElC,GAAK6B,GAAiBC,GAAkBC,EAAxC,CAeA,GAPwB,MAAtBL,EAAS0B,UACa,WAAtB1B,EAAS0B,UACa,SAAtB1B,EAAS0B,UAET5B,EAAQ6B,QAAQ,cAGbxB,IAAiBC,IAAkBC,EAItC,OAHAP,EAAQ6B,QAAQ,UAEhBH,IAIF5D,EACGgE,IAAI,sBACJzC,MAAK,SAAAR,GACJ,IAEI8B,EAFEH,EAAW3B,EAASW,KAIJ,YAAlBgB,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,aACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAASC,MAAM,UAEvB,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,YACNC,QAAQ,EACRC,MAAO,UACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,YAKH,UAAlBT,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,qBACNC,QAAQ,EACRC,MAAO,aACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,UAE1B,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAASC,MAAM,UAEvB,CACEJ,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,0BACNC,QAAQ,EACRC,MAAO,2BACPC,KAAM,kBAAC,IAAD,CAAOC,MAAM,UAErB,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,UAEtB,CACEJ,KAAM,gBACNC,QAAQ,EACRC,MAAO,WACPC,KAAM,kBAAC,IAAD,CAAYC,MAAM,YAKR,WAAlBT,EAASI,OACXD,EAAU,CACR,CACEE,KAAM,cACNC,QAAQ,EACRC,MAAO,YACPC,KAAM,kBAAC,IAAD,CAAeC,MAAM,UAE7B,CACEJ,KAAM,qBACNC,QAAQ,EACRC,MAAO,kBACPC,KAAM,kBAAC,IAAD,CAAcC,MAAM,UAE5B,CACEJ,KAAM,SACNC,QAAQ,EACRC,MAAO,SACPC,KAAM,kBAAC,IAAD,CAAQC,MAAM,YAKrBN,IAILpC,aAAagB,QAAQ,mBAAoBkB,KAAKgB,UAAUjB,IAExDU,EAAQ,CACNb,eACAC,gBACAC,KAAMC,EACNG,gBAGHoB,OAAM,kBAAML,WAlJa,MAAtBxB,EAAS0B,UACX5B,EAAQ6B,QAAQ,OAkJnB,CAACH,EAASxB,EAAUF,IAGrB,kBAACJ,EAAYoC,SAAb,CACEC,MAAO,CAAE1B,KAAMf,EAAKe,KAAMI,QAASnB,EAAKmB,QAASQ,SAAQO,YAExD3B,IAKA,SAASmC,IACd,IAAMC,EAAUC,qBAAWxC,GAE3B,IAAKuC,EACH,MAAM,IAAIE,MAAM,gDAGlB,OAAOF,EC1bT,IAAMG,EAA6BzC,wBACjC,IAGW0C,EAAwC,SAAC,GAAkB,IAAhBxC,EAAe,EAAfA,SAAe,EAC3CK,mBAAmB,IADwB,mBAC9DoC,EAD8D,KACvDC,EADuD,OAEvCrC,mBAAmB,IAFoB,mBAE9DsC,EAF8D,KAErDC,EAFqD,KAI/DC,EAAyBxB,uBAAY,SAACyB,GAC1CJ,EAASI,KACR,IAEGC,EAAmB1B,uBAAY,SAAC2B,GACpCJ,EAAWI,KACV,IAEH,OACE,kBAACT,EAA2BN,SAA5B,CACEC,MAAO,CACLO,QACAE,UACAE,yBACAE,qBAGD/C,I,2NCxEA,IAAMiD,EAAYC,IAAOC,IAAV,K,woCCOtB,IAAMC,EAAsB,CAC1BC,KAAMC,YAAF,KAKJC,QAASD,YAAF,KAKP3E,MAAO2E,YAAF,MAMML,EAAYC,YAAOM,IAASL,IAAhBD,CAAH,KAclB,SAAAO,GAAK,OAAIL,EAAoBK,EAAMC,MAAQ,WA2B3C,SAAAD,GAAK,OACJA,EAAME,gBACPL,YADA,QCpDEM,EAAQ,CACZP,KAAM,kBAAC,IAAD,CAAQQ,KAAM,KACpBlF,MAAO,kBAAC,IAAD,CAAekF,KAAM,KAC5BN,QAAS,kBAAC,IAAD,CAAeM,KAAM,MAoCjBC,EAjCsB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACvCC,EAAgBC,IAAhBD,YAYR,OAVArC,qBAAU,WACR,IAAMuC,EAAQC,YAAW,WACvBH,EAAYF,EAAQM,MACnB,KAEH,OAAO,WACLC,aAAaH,MAEd,CAACJ,EAAQM,GAAIJ,IAGd,kBAAC,EAAD,CACEP,KAAMK,EAAQL,KACdC,iBAAkBI,EAAQQ,YAC1BP,MAAOA,GAENJ,EAAMG,EAAQL,MAAQ,QAEvB,6BACE,gCAASK,EAAQS,OAChBT,EAAQQ,aAAe,2BAAIR,EAAQQ,cAGtC,4BAAQb,KAAK,SAASe,QAAS,kBAAMR,EAAYF,EAAQM,MACvD,kBAAC,IAAD,CAAWR,KAAM,QClBVa,EApBwC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClDC,EAA0BC,YAC9BF,GACA,SAAAZ,GAAO,OAAIA,EAAQM,KACnB,CACES,KAAM,CAAEC,MAAO,QAASC,QAAS,GACjCC,MAAO,CAAEF,MAAO,KAAMC,QAAS,GAC/BE,MAAO,CAAEH,MAAO,QAASC,QAAS,KAItC,OACE,kBAAC/B,EAAD,KACG2B,EAAwBO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAK5B,EAAd,EAAcA,MAAd,OAC3B,kBAAC,EAAD,CAAO4B,IAAKA,EAAKtB,QAASqB,EAAMpB,MAAOP,SCPzC6B,EAAexF,wBAAiC,IAEhDyF,EAA0B,SAAC,GAAkB,IAAhBvF,EAAe,EAAfA,SAAe,EAChBK,mBAA0B,IADV,mBACzCsE,EADyC,KAC/Ba,EAD+B,KAG1CC,EAAWpE,uBACf,YAA8D,IAA3DqC,EAA0D,EAA1DA,KAAMc,EAAoD,EAApDA,MAAOD,EAA6C,EAA7CA,YAERmB,EAAQ,CACZrB,GAFSsB,iBAGTnB,QACAd,OACAa,eAGFiB,GAAY,SAAAI,GAAW,4BAAQA,GAAR,CAAqBF,SAE9C,IAGIzB,EAAc5C,uBAAY,SAACgD,GAC/BmB,GAAY,SAAAK,GAAK,OAAIA,EAAMC,QAAO,SAAA/B,GAAO,OAAIA,EAAQM,KAAOA,UAC3D,IAEH,OACE,kBAACiB,EAAarD,SAAd,CAAuBC,MAAO,CAAEuD,WAAUxB,gBACvCjE,EACD,kBAAC,EAAD,CAAgB2E,SAAUA,MAKhC,SAAST,IACP,IAAM9B,EAAUC,qBAAWiD,GAE3B,IAAKlD,EACH,MAAM,IAAIE,MAAM,gDAGlB,OAAOF,ECnDT,IAQe2D,EARe,SAAC,GAAD,IAAG/F,EAAH,EAAGA,SAAH,OAC5B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAgBA,M,mDC6BPgG,EApCgB,2BAC1BC,KAD0B,IAE7BC,MAAO,CACLC,KAAM,gCACNC,QAAS,gCACTC,KAAM,oBAERC,YAAY,2BACPL,IAAMK,aADA,IAETC,OAAQ,IACRC,OAAQ,IACRC,KAAM,MAERC,MAAM,2BACDT,IAAMS,OADN,IAEHC,GAAI,MACJC,GAAI,QAENC,UAAU,eACLZ,IAAMY,WAEXC,OAAO,2BACFb,IAAMa,QADL,IAEJC,KAAK,2BACAd,IAAMa,OAAOC,MADd,IAEFC,IAAK,UACLC,IAAK,UACLC,IAAK,cAGTC,SAAS,2BACJlB,IAAMkB,UADH,IAENC,QAAS,SCZEC,EAXkB,SAAC,GAAD,IAAGrH,EAAH,EAAGA,SAAH,OAC/B,kBAAC,IAAD,CAAqBiG,MAAOD,GAC1B,kBAACsB,EAAA,EAAD,CAAmBpF,MAAM,SACvB,kBAAC,IAAD,CAAsB+D,MAAO,IAC3B,kBAACsB,EAAA,EAAD,MACCvH,M,gTCbF,IAAMiD,GAAYC,YAAOsE,KAAPtE,CAAH,MC4BPuE,GAvBiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC9C,kBAAC,GAAD,CACEC,gBAAgB,UAChBC,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,QAEN9G,MAAM,OACN+G,QAAQ,OACRC,WAAW,OACXC,YAAY,OACZC,QAAQ,YACRC,aAAa,KACbC,WAAW,QAEX,8BAAOZ,K,SCkBIa,GArCwB,SAAC,GAAD,IACrC9D,EADqC,EACrCA,QACA+D,EAFqC,EAErCA,WACA9E,EAHqC,EAGrCA,KACA1D,EAJqC,EAIrCA,SACGyI,EALkC,kEAOrC,kBAAC,KAAD,eACEd,gBAAiBa,EAAa,UAAY,UAC1CtH,MAAoB,OACpBwH,OAAO,OACPL,aAAa,KACbM,OAAQ,EACRP,QAAQ,SACRQ,SAAS,OACThB,MAAM,OACNU,WAAW,OACXO,UAAU,OACVC,OAAQ,CACNC,GAAI,WAENC,aAAc,CACZL,OAAQ,GAEVM,UAAW,CACTC,OAAQ,cACRC,WAAY,UACZjI,MAAO,QAETuD,QAASA,EACTf,KAAMA,GACF+E,GAEHzI,I,45CCrCE,IAAMiD,GAAYC,YAAOkG,KAAPlG,CAAH,MAWTmG,GAAUnG,YAAOoG,KAAPpG,CAAH,KA0BLqG,aAAM,GAAK,YCyDXC,ID5CKtG,IAAOC,IAAV,MCnCqB,SAAC,GAAgC,IAAD,IAA7BsG,sBAA6B,SAE9DC,EADUxJ,cACsBC,SAAS0B,SAFqB,EAGpCxB,mBAASqJ,GAH2B,mBAG7DC,EAH6D,KAGnDC,EAHmD,OAIvCzH,IAArBvB,EAJ4D,EAI5DA,QAASe,EAJmD,EAInDA,QAJmD,EAMpCkI,IAAMxJ,SAA6B,MANC,mBAM7DyJ,EAN6D,KAMnDC,EANmD,KAgBpE,OACE,kBAAC,GAAD,KACE,kBAACC,GAAA,EAAD,CAAOpC,MAAO,GAAIqC,IAAKC,OACvB,kBAAC,KAAD,CAAYC,eAAgB,MAC1B,kBAACd,GAAD,CAASe,UAAU,eACjB,kBAAC,IAAD,CAAMC,GAAG,IAAI5F,QAAS9C,GACpB,kBAAC,KAAD,CAAUkC,KAAM,KADlB,QADF,OAKGjD,QALH,IAKGA,OALH,EAKGA,EAASuE,KAAI,SAAAmF,GAAM,OAClB,kBAAC,IAAD,CACEjF,IAAKiF,EAAOtJ,MACZuJ,UACEZ,IAAaW,EAAOtJ,MAChB,yBACA,gBAENqJ,GAAIZ,EAAiB,IAAH,UAAYa,EAAOtJ,OACrCyD,QAAS,kBAAMmF,EAAYU,EAAOtJ,SAEjCsJ,EAAOxJ,WAMhB,kBAAC,KAAD,CAAY0J,eAAgB,MAC1B,kBAACnB,GAAD,CAASe,UAAU,eACjB,kBAAC,KAAD,CACEK,gBAAc,cACdC,gBAAc,OACdjG,QAvCU,SAACkG,GACnBZ,EAAYY,EAAMC,iBAwCV,kBAAC,IAAD,CAAQ/G,KAAM,GAAI3C,MAAM,UAE1B,kBAAC2J,GAAA,EAAD,CACExG,GAAG,cACHyF,SAAUA,EACVgB,aAAW,EACXC,KAAMC,QAAQlB,GACdmB,QA5CU,WAClBlB,EAAY,QAsCN,OAOGnJ,QAPH,IAOGA,OAPH,EAOGA,EAASuE,KAAI,SAAAmF,GAAM,OAClB,kBAAC,IAAD,CACEjF,IAAKiF,EAAOtJ,MACZqJ,GAAIZ,EAAiB,IAAH,UAAYa,EAAOtJ,OACrCyD,QAAS,kBAAMmF,EAAYU,EAAOtJ,SAElC,kBAACkK,GAAA,EAAD,CAAUzG,QAAS,kBAAMmF,EAAYU,EAAOtJ,SACzCsJ,EAAOxJ,UAId,kBAAC,IAAD,CAAMuJ,GAAG,IAAI5F,QAAS9C,GACpB,kBAACuJ,GAAA,EAAD,CAAUzG,QAAS9C,GAAnB,eCkCCwJ,GApG0B,SAAC,GAA+B,IAAD,IAA5BC,qBAA4B,SAChEnL,EAAUC,cACVwJ,EAAwBzJ,EAAQE,SAAS0B,SAFuB,EAGtCxB,mBAASqJ,GAH6B,mBAG/DC,EAH+D,KAGrDC,EAHqD,OAIzCzH,IAArBR,EAJ8D,EAI9DA,QAASf,EAJqD,EAIrDA,QAEXyK,EAAuBhK,uBAC3B,SAACiJ,GACCrK,EAAQqL,KAAKhB,EAAOtJ,OAEpB4I,EAAYU,EAAOtJ,SAErB,CAACf,IAGGsL,EAAgBlK,uBAAY,WAChCpB,EAAQqL,KAAK,KAEb3J,MACC,CAAC1B,EAAS0B,IAEb,OACE,oCACE,kBAAC,KAAD,CAAY6I,eAAgB,MAC1B,kBAAC,GAAD,CAAQf,eAAgB2B,KAG1B,kBAAC,KAAD,CAAYjB,eAAgB,MAC1B,kBAACb,GAAA,EAAD,CAAMkC,SAAS,QAAQC,KAAM,EAAGC,IAAK,EAAGtB,UAAU,SAASxC,MAAM,QAC/D,kBAAC0B,GAAA,EAAD,CACEqC,WAAY,EACZ/D,MAAM,OACNgE,WAAW,SACXC,eAAe,SACfnD,OAAO,QACPS,WAAW,UACX2C,aAAa,qBAEb,kBAAC9B,GAAA,EAAD,CAAOpC,MAAO,GAAIqC,IAAKC,QAEzB,kBAACZ,GAAA,EAAD,CACEH,WAAW,UACXiB,UAAU,SACVxC,MAAM,OACNiE,eAAe,SACfD,WAAW,SACXlD,OAAO,UAEN9H,EAAQuE,KAAI,SAAAmF,GAAM,OACjB,kBAACyB,GAAA,EAAD,CACE1G,IAAKiF,EAAOxJ,KACZkL,MAAO1B,EAAOxJ,KACdmL,aAAY3B,EAAOxJ,MAEnB,kBAAC,KAAD,CACEoL,WAAYd,EACZ/C,aAAa,MACbD,QAAS,EACT+D,aAAc,EACdhD,WAAW,UACXL,OAAQ,CACNK,WAAY,WAEd2C,aACEnC,IAAaW,EAAOtJ,MAAQ,oBAAsB,UAEpDyD,QAAS,WACP4G,EAAqBf,KAbzB,OAgBGA,QAhBH,IAgBGA,OAhBH,EAgBGA,EAAQrJ,WAMjB,kBAACqI,GAAA,EAAD,CACE8C,UAAU,oBACVjD,WAAW,UACXvB,MAAM,OACNc,OAAO,QACPkD,WAAW,SACXC,eAAe,UAEf,kBAACE,GAAA,EAAD,CAASC,MAAM,OAAOC,aAAW,QAC/B,kBAAC,KAAD,CACExH,QAAS8G,EACTpC,WAAW,cACXL,OAAQ,CAAEK,WAAY,gBAEtB,kBAAC,IAAD,CAAStF,KAAM,GAAI3C,MAAM,gB,qCC3G1B,SAASmL,GAAoBC,GAC1C,IAAMC,EAA4B,GAMlC,OAJAD,EAAIE,MAAMC,SAAQ,SAAA9N,GAChB4N,EAAiB5N,EAAM+N,MAAQ/N,EAAMoF,WAGhCwI,E,2xBCXF,IAAMtJ,GAAYC,IAAOC,IAAV,MCcPwJ,GAPyB,SAAC,GAAD,IAAGpC,EAAH,EAAGA,UAAW/F,EAAd,EAAcA,MAAOxE,EAArB,EAAqBA,SAArB,OACtC,kBAAC,GAAD,CAAWuK,UAAWA,GACnBvK,EACD,8BAAOwE,K,ukCCHJ,IAAMvB,GAAYC,IAAOC,IAAV,KAINoG,aAAM,GAAK,YAgBvB,SAAA9F,GAAK,OACLA,EAAMmJ,WACNtJ,YADA,SAqBShB,GAAQY,YAAOyJ,GAAPzJ,CAAH,MCeH2J,GAjDwC,SAAC,GAKjD,IAJL/L,EAII,EAJJA,KACMgM,EAGF,EAHJ7L,KACA8L,EAEI,EAFJA,aACGtE,EACC,+CACEuE,EAAWC,iBAAqB,MADlC,EAEsB5M,mBAA6B,CACrD6M,gBAAYC,EACZjL,MAAO6K,EAAeK,OAAOL,GAAgB,GAC7CM,eAAgB,KALd,mBAEGnL,EAFH,KAEUoL,EAFV,OAQwCC,aAASzM,GAA7C0M,EARJ,EAQIA,UAAW7O,EARf,EAQeA,MAAO8O,EARtB,EAQsBA,cAgB1B,OAdA7L,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAKxL,EACLwK,KAAM,QACNiB,WAAY,kBACVL,EAAS,CACPJ,gBAAYC,EACZjL,MAAO,GACPmL,eAAgB,UAGrB,CAACG,EAAWtL,EAAOuL,IAGpB,kBAAC,GAAD,CAAWb,YAAajO,GACrBmO,GAAQ,kBAACA,EAAD,CAAMjJ,KAAM,KACrB,kBAAC,KAAD,iBACM4E,EADN,CAEEiF,IAAKV,EACLY,cAAe,SAACC,GACdP,EAASO,IAEX3L,MAAOA,EAAMA,SAEdvD,GACC,kBAAC,GAAD,CAAO6F,MAAO7F,GACZ,kBAAC,IAAD,CAAeuC,MAAM,UAAU2C,KAAM,Q,ukCClDxC,IAAMZ,GAAYC,IAAOC,IAAV,KAINoG,aAAM,GAAK,YAgBvB,SAAA9F,GAAK,OACLA,EAAMmJ,WACNtJ,YADA,SAqBShB,GAAQY,YAAOyJ,GAAPzJ,CAAH,MCXH4K,GA3BsB,SAAC,GAAmC,IAAjChN,EAAgC,EAAhCA,KAAYgM,EAAoB,EAA1B7L,KAAewH,EAAW,gCAChEuE,EAAWC,iBAAyB,MAD4B,EAG1BM,aAASzM,GAA7C0M,EAH8D,EAG9DA,UAAW7O,EAHmD,EAGnDA,MAAO8O,EAH4C,EAG5CA,cAU1B,OARA7L,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAKV,EAASe,QACdrB,KAAM,YAEP,CAACc,EAAWC,IAGb,kBAAC,GAAD,CAAWb,YAAajO,GACrBmO,GAAQ,kBAACA,EAAD,CAAMjJ,KAAM,KACrB,yCAAO6J,IAAKV,GAAcvE,IAEzB9J,GACC,kBAAC,GAAD,CAAO6F,MAAO7F,GACZ,kBAAC,IAAD,CAAeuC,MAAM,UAAU2C,KAAM,QCsLhCmK,GA3KgD,SAAC,GAKzD,IAJLC,EAII,EAJJA,OACAhD,EAGI,EAHJA,QACAiD,EAEI,EAFJA,OACAC,EACI,EADJA,QAEMC,EAAUnB,iBAAoB,MAC9BvH,EAAQxB,eAORmK,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAiBkL,GAAxB,uBAAArJ,EAAA,kEAEI,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAGxB7O,EAAKqB,MACLrB,EAAK8O,WACL9O,EAAK+O,MACL/O,EAAKgP,kBARZ,uBAUM,UAAAL,EAAQL,eAAR,SAAiBO,UAAU,CACzBxN,KAAM,6CACNyN,UAAW,6CACXC,KAAM,6CACNC,kBAAmB,+CAd3B,iCAoBUC,EAASC,OAAaC,MAAM,CAChC9N,KAAM6N,OACNJ,UAAW9O,EAAK8O,UACZI,OACGE,IACC,GACA,mEAEDC,IAAI,EAAG,kEACVH,OACJH,KAAM/O,EAAK+O,KACPG,OACGI,OAAO,GAAI,qCACXC,WACHL,OACJF,kBAAmBhP,EAAKgP,kBACpBE,OACGI,OAAO,EAAG,6CACVC,WACHL,SAvCV,SA0CUD,EAAOO,SAASxP,EAAM,CAAEyP,YAAY,IA1C9C,wBA4CUnR,EAAIoR,IAAJ,2BAAqBhB,QAArB,IAAqBA,OAArB,EAAqBA,EAAS9J,IAAM5E,GA5C9C,QA8CIiG,EAAM,CACJxG,OAAQ,UACRsF,MAAO,mDACPgH,SAAU,MACV4D,SAAU,MAGZnE,EAAQN,GAERuD,IAvDJ,uDAyDQ,gBAAeS,MAzDvB,wBA0DYU,EAAShD,GAAoB,EAAD,IAElC,UAAA+B,EAAQL,eAAR,SAAiBO,UAAUe,GA5DjC,2BAiEI3J,EAAM,CACJxG,OAAQ,QACRsF,MAAO,kDACPD,YACE,+EACFiH,SAAU,MACV4D,SAAU,MAvEhB,0DAD8B,wDA4E9B,CAACnE,EAASiD,EAAQxI,EAAOyI,IAG3B,OACE,oCACE,kBAACmB,GAAA,EAAD,CAAOrB,OAAQA,EAAQhD,QAASA,GAC9B,kBAACqE,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,CACE3H,gBAAgB,UAChBE,SAAU,IACVQ,aAAa,MAEb,kBAACiH,GAAA,EAAD,yDACsCnB,QADtC,IACsCA,OADtC,EACsCA,EAASrN,OAE/C,kBAACwO,GAAA,EAAD,MAEA,kBAAC,KAAD,CAAM5B,IAAKU,EAASmB,SAAUlB,GAC5B,kBAACiB,GAAA,EAAD,CAAWE,cAAe,GACxB,kBAAClG,GAAA,EAAD,CAAMc,UAAU,UACd,kBAAC,GAAD,CACE2C,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAASrN,KACvB2O,YAAY,OACZ3O,KAAK,OACLG,KAAMyO,MAER,kBAAC,GAAD,CACEnF,UAAU,QACVlG,GAAG,YACHoL,YAAY,WACZ3O,KAAK,YACL6O,OAAO,gBACPC,KAAK,IACL7C,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAASI,UACvBtN,KAAM4O,MAGR,kBAAC,GAAD,CACE9C,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAASK,KACvBiB,YAAY,OACZG,KAAK,IACL9O,KAAK,OACLG,KAAM6O,IACNH,OAAO,uBAGT,kBAAC,GAAD,CACE5C,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAASM,kBACvBgB,YAAY,gBACZ3O,KAAK,wBAKX,kBAACwO,GAAA,EAAD,KACE,kBAAC,KAAD,CACES,QAAQ,QACRtL,QAASwG,EACTnC,OAAQ,CAAEK,WAAY,WACtBhB,YAAa,GAJf,YASA,kBAAC,KAAD,CACEzE,KAAK,SACLiE,gBAAgB,UAChBmB,OAAQ,CACNnB,gBAAiB,YAJrB,gBCMCqI,GAlKkD,SAAC,GAK3D,IAJL/B,EAII,EAJJA,OACAhD,EAGI,EAHJA,QACAiD,EAEI,EAFJA,OACA+B,EACI,EADJA,KAEM7B,EAAUnB,iBAAoB,MAC9BvH,EAAQxB,eAERmK,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAiBkL,GAAxB,yBAAArJ,EAAA,kEAEI,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAEtB7O,EAAKqB,MAASrB,EAAK8O,WAAc9O,EAAKoB,KAJ/C,uBAKM,UAAAuN,EAAQL,eAAR,SAAiBO,UAAU,CACzBxN,KAAM,6CACNyN,UAAW,6CACX1N,KAAM,6CACN4N,kBAAmB,+CAT3B,iCAeUC,EAASC,OAAaC,MAAM,CAChC9N,KAAM6N,OACNJ,UAAW9O,EAAK8O,UACZI,OACGE,IACC,GACA,mEAEDC,IAAI,EAAG,kEACVH,OACJF,kBAAmBhP,EAAKgP,kBACpBE,OACGI,OAAO,EAAG,6CACVC,WACHL,SA7BV,SAgCUD,EAAOO,SAASxP,EAAM,CAAEyP,YAAY,IAhC9C,cAkCQgB,EAAa,GAEbzQ,EAAKqB,OACPoP,EAAU,2BAAQA,GAAR,IAAoBpP,KAAMrB,EAAKqB,QAGvCrB,EAAK8O,YACP2B,EAAU,2BAAQA,GAAR,IAAoB3B,UAAW9O,EAAK8O,aAG5C9O,EAAKgP,oBACPyB,EAAU,2BACLA,GADK,IAERzB,kBAAmBhP,EAAKgP,qBA/ChC,UAmDU1Q,EAAIoR,IAAJ,uBAAiBc,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM5L,IAAM6L,GAnDvC,QAqDIxK,EAAM,CACJxG,OAAQ,UACRsF,MAAO,yCACPgH,SAAU,MACV4D,SAAU,MAGZnE,EAAQN,GAERuD,IA9DJ,uDAgEQ,gBAAeS,MAhEvB,wBAiEYU,EAAShD,GAAoB,EAAD,IAElC,UAAA+B,EAAQL,eAAR,SAAiBO,UAAUe,GAnEjC,2BAwEI3J,EAAM,CACJxG,OAAQ,QACRsF,MAAO,wCACPD,YACE,qEACFiH,SAAU,MACV4D,SAAU,MA9EhB,0DAD8B,wDAmF9B,CAACa,EAAMhF,EAASiD,EAAQxI,IAG1B,OACE,oCACE,kBAAC4J,GAAA,EAAD,CAAOrB,OAAQA,EAAQhD,QAASA,GAC9B,kBAACqE,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,CACE3H,gBAAgB,UAChBE,SAAU,IACVQ,aAAa,MAEb,kBAACiH,GAAA,EAAD,+CAA0CW,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMnP,OAChD,kBAACwO,GAAA,EAAD,MAEA,kBAAC,KAAD,CAAM5B,IAAKU,EAASmB,SAAUlB,GAC5B,kBAACiB,GAAA,EAAD,CAAWE,cAAe,GACxB,kBAAClG,GAAA,EAAD,CAAMc,UAAU,UACd,kBAAC,GAAD,CACE2C,aAAY,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAMnP,KACpB2O,YAAY,OACZ3O,KAAK,SAGP,kBAAC,GAAD,CACEyJ,UAAU,QACVlG,GAAG,YACHoL,YAAY,UACZ3O,KAAK,YACL6O,OAAO,gBACPC,KAAK,IACL7C,aAAY,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAM1B,UACpBtN,KAAM4O,MAGR,kBAAC,GAAD,CACE9C,aAAY,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAMxB,kBACpBgB,YAAY,gBACZ3O,KAAK,wBAKX,kBAACwO,GAAA,EAAD,KACE,kBAAC,KAAD,CACES,QAAQ,QACRtL,QAASwG,EACTnC,OAAQ,CAAEK,WAAY,WACtBhB,YAAa,GAJf,YASA,kBAAC,KAAD,CACEzE,KAAK,SACLiE,gBAAgB,UAChBmB,OAAQ,CACNnB,gBAAiB,YAJrB,gB,izGCxLP,IAAM1E,GAAYC,YAAOsE,KAAPtE,CAAH,MAWTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MA0BPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MAgBJkG,GAAMlG,IAAOC,IAAV,MCwPDmN,GA9SG,WAAO,IAAD,EACYjQ,mBAAqB,IADjC,mBACfkQ,EADe,KACJC,EADI,OAEwBnQ,mBAAmB,IAF3C,mBAEfoQ,EAFe,KAEEC,EAFF,OAIwBrQ,wBAC5C8M,GALoB,mBAIfwD,EAJe,KAIEC,EAJF,OAQkBvQ,wBACtC8M,GAToB,mBAQf0D,EARe,KAQDC,EARC,KAYhB7Q,EAAUC,cAZM,EAaQG,oBAAkB,GAb1B,mBAaf0Q,EAbe,KAaNC,EAbM,KAetBpP,qBAAU,WACRoP,GAAW,GACXjT,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxB,IAAMmS,EAA2BnS,EAASW,KAE1C+Q,EAAaS,GACbD,GAAW,QAEZ,IAEH,IAAME,EAAe7P,uBAAY,WAC/B2P,GAAW,GAEXjT,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxB,IAAMmS,EAA2BnS,EAASW,KAE1C+Q,EAAaS,GACbD,GAAW,QAEZ,IAEGG,EAA+B9P,uBAAY,SAAC8M,GAChDyC,EAAmBzC,KAClB,IAEGiD,EAAgC/P,uBAAY,WAChDuP,OAAmBzD,KAClB,IAEGkE,EAAsBhQ,uBAC1B,SAACgD,GACCqM,EAAmB,GAAD,mBAAKD,GAAL,CAAsBpM,OAE1C,CAACoM,IAGGa,EAAuBjQ,uBAC3B,SAACgD,GACC,IAAMkN,EAAqBd,EAAgB3K,QACzC,SAAA0L,GAAS,OAAIA,IAAcnN,KAG7BqM,EAAmBa,KAErB,CAACd,IAGGgB,EAA2BpQ,uBAAY,SAAC4O,GAC5Ca,EAAgBb,KACf,IAEGyB,EAA4BrQ,uBAAY,WAC5CyP,OAAgB3D,KACf,IAEGwE,EAA0CC,mBAC9C,kBACErB,EAAUpL,KAAuB,SAAAgJ,GAAO,MAAK,CAC3C9J,GAAI8J,EAAQ9J,GACZvD,KAAMqN,EAAQrN,KACdyN,UAAWJ,EAAQI,UACnBC,KAAML,EAAQK,KACdC,kBAAmBN,EAAQM,kBAC3BnE,OACE,kBAACyB,GAAA,EAAD,CACEE,aAAW,qCACXD,MAAM,sCAEN,kBAAC,KAAD,CACEvH,QAAS,kBAAM0M,EAA6BhD,IAC5CrF,OAAQ,CAAEK,WAAY,UAAWR,OAAQ,GACzCK,aAAc,CAAEL,OAAQ,GACxBQ,WAAW,WAEX,kBAAC,IAAD,QAIN0I,MAAO1D,EAAQ2D,QAAQ3M,KAAI,SAAA8K,GAAI,MAAK,CAClC5L,GAAI4L,EAAK5L,GACTvD,KAAMmP,EAAKnP,KACXyN,UAAW0B,EAAK1B,UAChBE,kBAAmBwB,EAAKxB,kBACxBnE,OACE,kBAACyB,GAAA,EAAD,CACEE,aAAW,2BACXD,MAAM,4BAEN,kBAAC,KAAD,CACEvH,QAAS,kBAAMgN,EAAyBxB,IACxCnH,OAAQ,CACNnB,gBAAiB,UACjBzG,MAAO,OACPyH,OAAQ,GAEVK,aAAc,CAAEL,OAAQ,GACxBQ,WAAW,WAEX,kBAAC,IAAD,kBAMZ,CAACoH,EAAWkB,EAA0BN,IAGxC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYzJ,KAAK,mCACjB,kBAACyI,GAAD,CACEjI,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACVhB,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,oDACA,+BAGF,yBAAKuC,UAAU,YACb,sCACA,yCACA,sCACA,gDAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAACwH,GAAD,CAAM3H,OAAQ,CAAEX,GAAI,OAAQC,GAAI,SAC7B2J,EAAmBxM,KAAI,SAAAgJ,GAAO,OAC7B,kBAAC,GAAD,CAAK9I,IAAK8I,EAAQ9J,IAChB,yBACEkG,UAAU,SACVvG,MACEyM,EAAgB0B,SAAShE,EAAQ9J,IAC7B,CAAEgE,aAAc,iBAChB,CAAEA,aAAc,KAGtB,8BAAO8F,EAAQrN,MACf,8BAAOqN,EAAQI,WACf,8BAAOJ,EAAQK,MACf,8BAAOL,EAAQM,mBACdN,EAAQ7D,OAET,kBAAC,KAAD,CAAYnC,YAAa,EAAG0D,eAAe,YACxC4E,EAAgB0B,SAAShE,EAAQ9J,IAChC,kBAAC,KAAD,CACEI,QAAS,kBAAM6M,EAAqBnD,EAAQ9J,KAC5CL,MAAO,CAAEkF,OAAQ,UAAWkJ,aAAc,SAC1CvO,KAAM,KAGR,kBAAC,KAAD,CACEY,QAAS,kBAAM4M,EAAoBlD,EAAQ9J,KAC3CL,MAAO,CAAEkF,OAAQ,UAAWmJ,UAAW,SACvCxO,KAAM,OAMd,yBACE0G,UAAU,WACV+H,QAAS7B,EAAgB0B,SAAShE,EAAQ9J,KAE1C,kBAAC,GAAD,CAAWkG,UAAU,aACnB,0CACA,+BAGF,yBAAKA,UAAU,SACb,sCACA,0CACA,gDAGD4D,EAAQ0D,MAAM1M,KAAI,SAAA8K,GAAI,OACrB,yBAAK1F,UAAU,OAAOlF,IAAK4K,EAAK5L,IAC9B,8BAAO4L,EAAKnP,MACZ,8BAAOmP,EAAK1B,WACZ,8BAAO0B,EAAKxB,mBACXwB,EAAK3F,WAGV,kBAAC,IAAD,CACEC,UAAU,uBACVF,GAAE,oCAA+B8D,EAAQ9J,KAEzC,kBAAC,KAAD,CAAWR,KAAM,KAJnB,kCAYZ,kBAAC0O,GAAD,CACEtE,SAAU4C,EACV5F,QAASyG,EACTxD,OAAQgD,EACRjB,KAAMY,IAGR,kBAAC2B,GAAD,CACEvE,SAAU0C,EACV1F,QAASmG,EACTlD,OAAQgD,EACR/C,QAASwC,IAGX,yBAAKpG,UAAU,UACb,kBAAC,GAAD,CACE9F,QAAS,WACPxE,EAAQqL,KAAK,wBAFjB,wC,kBCzTWmH,G,0GACDC,GAGhB,OAAOC,KAAKC,QAAQF,EAFF,GACF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,O,kCAI5BlE,GAGjB,OAAOmE,KAAKC,QAAQpE,EAFF,GACF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,M,gCAItCkE,GAMf,OAAOC,KAAKhD,OACV+C,EAN0B,GACH,EACC,GACH,EACF,K,iCAWLlE,GAMhB,OAAOmE,KAAKhD,OACVnB,EAN0B,GACH,EACC,EACJ,EACD,M,6BAYrBqE,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,OADoBP,KAAKQ,eAAeN,GAErCO,MAAM,EAAGN,GACTO,MAAM,IACNC,QAAO,SAACC,EAAKC,EAAOC,GACnB,IAAMC,EAAM,UAAMH,GAAN,OAAYC,GACxB,GAAIC,IAAQZ,EAAO9D,OAAS,EAAG,CAC7B,GAAI0E,IAAQV,GAAoBU,IAAQT,EACtC,MAAM,GAAN,OAAUU,EAAV,KAEF,GAAID,IAAQR,EACV,MAAM,GAAN,OAAUS,EAAV,KAEF,GAAID,IAAQP,EACV,MAAM,GAAN,OAAUQ,EAAV,KAGJ,OAAOA,IACN,M,8BAILb,EACAC,EACAa,GAEA,IAAMC,EAAcjB,KAAKQ,eAAeN,GACxC,GACEe,EAAY7E,SAAW+D,GACvBH,KAAKkB,mBAAmBD,GAExB,OAAO,EAET,IAAME,EAAuBF,EAAYG,UACvC,EACAjB,EAAsB,GAOxB,OALsBc,EAAYG,UAChCjB,EAAsB,EACtBA,KAEwBH,KAAKqB,YAAYF,EAAsBH,K,qCAIrCd,GAC5B,OAAOA,EAAO/Q,QAAQ,MAAO,M,yCAGG+Q,GAChC,OAAQA,EAAOQ,MAAM,IAAIY,MAAK,SAAAT,GAAK,OAAIA,IAAUX,EAAO,Q,kCAG/BA,EAAgBc,GACzC,IAAMO,EAAerB,EAAO9D,OACtBoF,EAA6BR,EAAQ5E,OAAS,EAQ9CqF,EANMvB,EACTQ,MAAM,IACNC,QACC,SAACC,EAAKC,EAAOC,GAAb,OAAqBF,IAAOC,EAAQG,EAAQO,EAAe,EAAIT,KAC/D,GAE+B,GAC7BY,EAAUD,EAAuB,EAAI,EAAI,GAAKA,EAEpD,OAAIF,IAAiBC,EACZxB,KAAKqB,YAAL,UAAoBnB,GAApB,OAA6BwB,GAAWV,GAG3C,GAAN,OAAUd,EAAOqB,EAAe,IAAhC,OAAqCG,O,u8CCxHlC,IAAMpR,GAAYC,IAAOC,IAAV,MAUTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAaPkN,GAAYlN,IAAOC,IAAV,MAsBTmR,GAAiBpR,IAAOC,IAAV,MC0IZoR,GAlKW,WACxB,IAAMnG,EAAUnB,iBAAoB,MAE5BxH,EAAavB,IAAbuB,SAEF4I,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,4BAAA6B,EAAA,6DAA0BkT,EAA1B,EAA0BA,MAA1B,SAEI,UAAApG,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChC6F,YAAa9F,OAAa+F,SACxB,4CAEFC,iBAAkBhG,OACf+F,SAAS,gDACT5F,IAAI,EAAG,iDACPD,IAAI,GAAI,kDACX+F,YAAajG,OACV+F,SAAS,4CACT3F,OAAO,GAAI,kCACd8F,kBAAmBlG,OAChB+F,SAAS,qDACT3F,OAAO,EAAG,+DAjBnB,SAoBUL,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IArBlB,WA0BwB,IAFAuD,GAAaqC,YAAYrV,EAAKmV,aAxBtD,wBA2BM,UAAAxG,EAAQL,eAAR,SAAiBO,UAAU,CAAEsG,YAAa,sBA3BhD,4CA+B2B7W,EAAIsB,KAAK,YAAa,CAC3CyB,KAAMrB,EAAKgV,YACXlG,UAAW9O,EAAKkV,iBAChBnG,KAAM/O,EAAKmV,YACXnG,kBAAmBhP,EAAKoV,oBAnC9B,QAsC4B,MAtC5B,OAsCiB3V,SACXuG,EAAS,CACPjB,MAAO,kCACPd,KAAM,UACNa,YACE,iGAGJiQ,KA9CN,uDAiDQ,gBAAe7F,MAjDvB,wBAkDYU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GApDjC,2BAwDI5J,EAAS,CACPjB,MAAO,+CACPD,YACE,+EACFb,KAAM,UA5DZ,0DAD8B,wDAiE9B,CAAC+B,IAGH,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYiC,KAAK,uCACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,gEACA,+BAGF,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,yBAAK9D,UAAU,UACb,kBAAC+J,GAAD,KACE,yBAAK/J,UAAU,UACb,4DACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,cACHX,KAAK,cACL5C,KAAK,cACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC0M,GAAD,KACE,yBAAK/J,UAAU,UACb,gEACA,oCAGF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,mBACHvD,KAAK,mBACL6O,OAAO,gBACPC,KAAK,OAIT,kBAAC0E,GAAD,KACE,yBAAK/J,UAAU,UACb,4DACA,oCAGF,kBAAC,GAAD,CACEA,UAAU,QACVvG,MAAO,CAAE4D,MAAO,QAChBvD,GAAG,cACHvD,KAAK,cACL8O,KAAK,IACLD,OAAO,wBAIX,kBAAC2E,GAAD,KACE,yBAAK/J,UAAU,UACb,qEACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,oBACHX,KAAK,oBACL5C,KAAK,oBACLkD,MAAO,CAAE4D,MAAO,YAItB,kBAAC,GAAD,CAAQlE,KAAK,UAAb,iB,g/BChLH,IAAM4Q,GAAiBpR,YAAOoG,KAAPpG,CAAH,MAWdiN,GAAUjN,YAAOoG,KAAPpG,CAAH,MAUP8R,GAAmB9R,YAAOoG,KAAPpG,CAAH,MAgBhBD,GAAYC,YAAOsE,KAAPtE,CAAH,MCyHP+R,GAvIc,WAC3B,IAAMhV,EAAUC,cACVC,EAAWC,cACXgO,EAAUnB,iBAAoB,MAC5BxH,EAAavB,IAAbuB,SAER7D,qBAAU,WAAO,IAAD,GACV,OAACzB,QAAD,IAACA,GAAD,UAACA,EAAU0F,aAAX,aAAC,EAAiBqP,kBACpBjV,EAAQqL,KAAK,eAEd,CAACrL,EAASE,IAEb,IAAMgV,EAAc,uCAAG,WAAO1V,GAAP,qBAAA6B,EAAA,sEAEnB,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChCpN,SAAUmN,OACPG,IAAI,EAAG,kDACP4F,SAAS,wBACZU,gBAAiBzG,OACdG,IAAI,EAAG,kDACP4F,WACAW,MACC,CAAC1G,KAAQ,aACT,2CAba,SAiBbD,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAlBK,uBAqBbnR,EAAIuX,MAAM,yBAA0B,CACxCC,YAAa9V,EAAK2V,kBAtBD,OAyBnBnV,EAAQqL,KAAK,YAEb7F,EAAS,CAAEjB,MAAO,gCAAiCd,KAAM,YA3BtC,kDA6Bf,gBAAeiL,OACXU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,IAhCV,0DAAH,sDAqCpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEzH,MAAO,CACLE,GAAI,MACJnB,GAAI,MACJC,GAAI,MACJmB,GAAI,MACJC,GAAI,OAENU,OAAO,QACPf,gBAAgB,UAChBU,aAAc,GACdmN,SAAU,CACR1N,GAAI,GACJnB,GAAI,GACJC,GAAI,GACJmB,GAAI,GACJC,GAAI,IAENyN,SAAU,CACR3N,GAAI,EACJnB,GAAI,EACJC,GAAI,GACJmB,GAAI,GACJC,GAAI,IAEN4D,WAAW,SACXC,eAAe,SACf6J,cAAc,UAEd,kBAACpM,GAAA,EAAD,CACE6C,aAAc,EACdwJ,EAAG,GACHC,EAAG,GACH7M,GAAG,UACHV,aAAa,OACbuD,WAAW,SACXC,eAAe,UAEf,kBAAC,IAAD,CAAQhI,KAAM,MAGhB,kBAACgS,GAAA,EAAD,CAAM1J,aAAc,EAAGvD,SAAU,IAAjC,qBAIA,kBAACiN,GAAA,EAAD,CAAM1J,aAAc,EAAGjL,MAAM,UAAU0H,SAAU,IAAjD,6DAIA,kBAAC,KAAD,CAAM8E,IAAKU,EAASmB,SAAU4F,GAC5B,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE5K,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACL2O,YAAY,aACZxO,KAAM6U,OAIV,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEvL,UAAU,QACVlG,GAAG,kBACHX,KAAK,WACL5C,KAAK,kBACL2O,YAAY,uBACZxO,KAAM6U,OAIV,kBAACd,GAAD,CAAkBnJ,eAAe,iBAC/B,kBAAC,GAAD,CAAQrD,YAAU,EAAC/D,QAAS,kBAAMxE,EAAQqL,KAAK,eAA/C,sBAGA,kBAAC,GAAD,CAAQ5H,KAAK,UAAb,gB,quBCrJL,IAAMT,GAAYC,IAAOC,IAAV,MAOTgN,GAAUjN,IAAOC,IAAV,MAyBP4S,GAAa7S,IAAOC,IAAV,KAEH6S,MCuELC,GAvFD,WACZ,IAAMhW,EAAUC,cACVkO,EAAUnB,iBAAoB,MAE5B7L,EAAWe,IAAXf,OACAqE,EAAavB,IAAbuB,SAEF4I,EAAehN,sBAAW,uCAC9B,WAAO5B,GAAP,uBAAA6B,EAAA,sEAEI,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChCrN,SAAUoN,OAAa+F,SAAS,6BAChClT,SAAUmN,OAAa+F,SAAS,0BANtC,SASUhG,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAVlB,uBAasB9N,EAAO,CACvBG,SAAU9B,EAAK8B,SACfC,SAAU/B,EAAK+B,WAfrB,UAaUjC,EAbV,OAkBIkG,EAAS,CAAEjB,MAAO,kBAAmBd,KAAM,aAEvCnE,EAAIiB,KAAK0V,YApBjB,wBAqBMjW,EAAQqL,KAAK,CACXzJ,SAAU,eACVgE,MAAO,CACLqP,iBAAiB,KAxB3B,2BA+BIjV,EAAQqL,KAAK,aA/BjB,uDAiCQ,gBAAeqD,MAjCvB,wBAkCYU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GApCjC,2BAuCI5J,EAAS,CACPjB,MAAO,sBACPd,KAAM,QACNa,YAAa,4DA1CnB,0DAD8B,sDA+C9B,CAACkB,EAAUxF,EAASmB,IAGtB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC4I,GAAA,EAAD,CAAOC,IAAKC,OACZ,kBAAC,KAAD,CAAMwD,IAAKU,EAASmB,SAAUlB,GAC5B,kBAAC,GAAD,CACE9D,UAAU,QACVlG,GAAG,WACHX,KAAK,OACL5C,KAAK,WACL2O,YAAY,aACZxO,KAAMkV,MAGR,kBAAC,GAAD,CACE5L,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACL2O,YAAY,QACZxO,KAAM6U,MAER,kBAAC,GAAD,CAAQpS,KAAK,UAAb,YAGJ,kBAACqS,GAAD,Q,6xBCpGC,IAAM9S,GAAYC,IAAOC,IAAV,KAOFiT,MCYLC,GAhBE,WACf,IAAMpW,EAAUC,cAChB,OACE,kBAAC,GAAD,KACE,yBAAKqK,UAAU,OACb,kBAAC,KAAD,CAAYrJ,MAAM,UAAU2C,KAAM,MAClC,0CACA,2DACA,kBAAC,GAAD,CAAQ2E,YAAU,EAAC/D,QAAS,kBAAMxE,EAAQqL,KAAK,cAA/C,0B,8RCLD,IAAMrI,GAAYC,aAAOkG,KAAPlG,CAAH,MAEhB,SAAAO,GAAK,OAAI6S,aAAe,GAAK7S,EAAMwC,MAAMa,OAAOyP,IAAI,SACtD,SAAA9S,GAAK,OACLA,EAAMmJ,WACNtJ,aADA,SCdW,SAASkT,GAAcC,GACpC,OAAQA,GACN,IAAK,SACH,MAAO,MACT,IAAK,SACH,MAAO,MACT,IAAK,UACH,MAAO,MACT,IAAK,WACH,MAAO,OACT,IAAK,YACH,MAAO,MACT,IAAK,SACH,MAAO,MACT,IAAK,WACH,MAAO,SACT,QACE,MAAO,OCCb,IAgDeC,GAhDgC,SAAC,GAKzC,IAJL5V,EAII,EAJJA,KACA6V,EAGI,EAHJA,eACAC,EAEI,EAFJA,YACGnO,EACC,wDACEoO,EAAgB5J,iBAAwB,MAD1C,EAGsDM,aAASzM,GAA3D0M,EAHJ,EAGIA,UAAWT,EAHf,EAGeA,aAAcpO,EAH7B,EAG6BA,MAAO8O,EAHpC,EAGoCA,cAHpC,EAK4BpN,mBAAS0M,GALrC,mBAKGpD,EALH,KAKaC,EALb,KAyBJ,OAlBAhI,qBAAU,WACRgI,EAAYgN,KACX,CAACA,IAEJhV,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAKmJ,EAAc9I,QACnBrB,KAAM,iBACNiB,WAJY,WAKV/D,EAAY,KAEd0D,SAPY,SAOHI,EAAKxL,GACZ0H,EAAY1H,QAGf,CAACsL,EAAWC,IAGb,kBAAC,GAAD,eAAWpF,aAAa,KAAKuE,YAAajO,GAAWgY,GACnD,kBAAC,KAAD,eACEjJ,IAAKmJ,EACLlN,SAAUA,EACVmN,iBAAiB,EACjBC,WAAW,aACXP,cAAeA,GACfQ,gBAAgB,OAChBC,SAAU,SAAAC,GACRtN,EAAYsN,KAEVzO,M,klCCjDL,IAAMxF,GAAYC,aAAOkG,KAAPlG,CAAH,MAclB,SAAAO,GAAK,OACLA,EAAMmJ,WACNtJ,aADA,SAMA,SAAAG,GAAK,OACLA,EAAM0T,WACN7T,aADA,SAMA,SAAAG,GAAK,OACLA,EAAM2T,UACN9T,aADA,SCsCW+T,GA9D6B,SAAC,GAKtC,IAJLvW,EAII,EAJJA,KACAd,EAGI,EAHJA,SACA2W,EAEI,EAFJA,eACGlO,EACC,qDACE6O,EAAYrK,iBAA0B,MADxC,EAG8B5M,oBAAS,GAHvC,mBAGG8W,EAHH,KAGcI,EAHd,OAI4BlX,oBAAS,GAJrC,mBAIG+W,EAJH,KAIaI,EAJb,OAMsDjK,aAASzM,GAA3D0M,EANJ,EAMIA,UAAWT,EANf,EAMeA,aAAcpO,EAN7B,EAM6BA,MAAO8O,EANpC,EAMoCA,cAElCgK,EAAmBpW,uBAAY,WACnCkW,GAAa,KACZ,IAEGG,EAAkBrW,uBAAY,WAAO,IAAD,EACxCkW,GAAa,GAEbC,KAAa,UAACF,EAAUvJ,eAAX,aAAC,EAAmB7L,UAChC,IAUH,OARAN,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAK4J,EAAUvJ,QACfrB,KAAM,YAEP,CAACc,EAAWC,IAGb,kBAAC,GAAD,eACE0J,UAAWA,EACXC,SAAUA,EACVxK,YAAajO,EACbiJ,MAAM,OACNc,OAAQ,GACRL,aAAa,KACbsP,YAAa,GACThB,EARN,CASElS,QAAS,WAAO,IAAD,EACb,UAAA6S,EAAUvJ,eAAV,SAAmB6J,WAGrB,kBAAC,KAAD,eACE7K,aAAcA,EACdhE,GAAG,WACHJ,OAAQ,EACRkP,iBAAiB,OACjBF,YAAa,EACbG,QAASL,EACTM,OAAQL,EACRhK,IAAK4J,GACD7O,GAEHzI,K,qXCrEF,IAAMiD,GAAYC,YAAOkG,KAAPlG,CAAH,MCoBPkN,GAf8B,SAAC,GAAD,IAAG1I,EAAH,EAAGA,KAAH,OAC3C,kBAAC,GAAD,CACEG,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,8BAAON,GACP,gC,4QChBG,IAAMzE,GAAYC,YAAOsE,KAAPtE,CAAH,MC6OP8U,GAlMW,WACxB,IAAM/X,EAAUC,cAEVkO,EAAUnB,iBAAoB,MAC5BzM,EAAS2B,IAAT3B,KACAiF,EAAavB,IAAbuB,SALsB,EAOIpF,mBAAmC,IAPvC,mBAOvBkQ,EAPuB,KAOZC,EAPY,OAQEnQ,mBAAqB,IARvB,mBAQvB4X,EARuB,KAQbC,EARa,OASgB7X,oBAAS,GATzB,mBASvB8X,EATuB,KASNC,EATM,KAW9BxW,qBAAU,WACU,UAAdpB,EAAKK,MACP9C,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxB,IAAMmS,EAAyCnS,EAASW,KAExD+Q,EAAaS,MAIjBlT,EAAIgE,IAAI,YAAYzC,MAAK,SAAAR,GACvB,IAAMuZ,EAA0BvZ,EAASW,KAEzCyY,EAAYG,QAEb,CAAC7X,EAAKK,OAET,IAAMyX,EAAkBjX,sBAAW,uCACjC,WAAO5B,GAAP,iBAAA6B,EAAA,6DACE8W,GAAmB,GAEbG,EAHR,aAII3B,YAAanX,EAAKmX,YAClB4B,UAAW/Y,EAAK+Y,WACZ/Y,EAAKP,QAAU,CAAEA,OAAQO,EAAKP,SAGpCO,EAAKgZ,QAAQpF,MAAM,IAAItE,QAAU,GAC/B2J,OAAOC,OAAOJ,EAAS,CACrBE,QAAShZ,EAAKgZ,UAXpB,SAcqB1a,EAAIgE,IACrB,sBACA,CACE6W,OAAQL,IAjBd,OAcQM,EAdR,OAqBEzU,YAAW,WAAO,IAAD,EACfgU,GAAmB,GACnB,UAAAhK,EAAQL,eAAR,SAAiByG,QAEjBsE,OAAO/N,KAAK8N,EAAKpZ,KAAKsZ,gBAAiB,SAAU,uBAEjD9Y,EAAQqL,KAAK,YAEb7F,EAAS,CACPjB,MAAO,sCACPD,YAAa,4CACbb,KAAM,cAEP,KAlCL,2CADiC,sDAqCjC,CAAC+B,EAAUxF,IAGb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYyH,KAAK,kBACjB,kBAAC4B,GAAA,EAAD,CACEc,UAAU,SACVwB,WAAW,SACXC,eAAe,SACfjE,MAAM,QAEN,kBAACwB,GAAA,EAAD,CACElB,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,CAAWN,KAAK,YAChB,kBAAC,KAAD,CAAMgG,IAAKU,EAASmB,SAAU+I,GAC5B,kBAAChP,GAAA,EAAD,CAAM6C,aAAc,GACH,UAAd3L,EAAKK,MACJ,kBAAC,GAAD,CACEC,KAAK,UACL4H,OAAQ,EACRf,gBAAgB,UAChBzG,MAAM,QACNuO,YAAY,qBACZkH,eAAgB,CACd9N,UAAW,EACXV,YAAa,EACbP,MAAO,IACPc,OAAQ,GACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGlB4I,EAAUpL,KAAI,SAAAgJ,GAAO,OACpB,4BAAQjM,MAAOiM,EAAQ9J,GAAIgB,IAAK8I,EAAQ9J,IACrC8J,EAAQrN,UAMjB,kBAAC,GAAD,CACEA,KAAK,UACL4H,OAAQ,EACRf,gBAAgB,UAChBzG,MAAM,QACNuO,YAAY,cACZkH,eAAgB,CACd9N,UAAW,EACXV,YAAa,EACbP,MAAO,IACPc,OAAQ,GACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGlBsQ,EAAS9S,KAAI,SAAAsT,GAAO,OACnB,4BAAQvW,MAAOuW,EAAQpU,GAAIgB,IAAKoT,EAAQpU,IACrCoU,EAAQ3X,UAKf,kBAACwI,GAAA,EAAD,CAAMT,UAAW,GACf,kBAAC,GAAD,CACEmO,gBAAgB,eAChBlW,KAAK,cACL6V,eAAgB,CACdxO,YAAa,KAGjB,kBAAC,GAAD,CAAY6O,gBAAgB,aAAalW,KAAK,eAGhD,kBAAC,GAAD,CACEA,KAAK,SACL4H,OAAQ,EACRf,gBAAgB,UAChBzG,MAAM,QACNuO,YAAY,SACZkH,eAAgB,CACd9N,UAAW,EACXX,WAAY,EACZN,MAAO,IACPc,OAAQ,GACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGnB,4BAAQzF,MAAM,WAAd,YACA,4BAAQA,MAAM,aAAd,cACA,4BAAQA,MAAM,YAAd,aACA,4BAAQA,MAAM,YAAd,gBAIJ,kBAACoH,GAAA,EAAD,KACE,kBAAC,KAAD,CACE4C,WAAYiM,EACZvQ,MAAM,OACND,gBAAgB,UAChBmB,OAAQ,CACNnB,gBAAiB,WAEnBjE,KAAK,UAEJyU,EAAkB,kBAAC,IAAD,MAAe,uB,2aCnO3C,IAAMlV,GAAYC,YAAOsE,KAAPtE,CAAH,MCmCP+V,GAzBiC,SAAC,GAAD,IAC9CC,EAD8C,EAC9CA,YACAC,EAF8C,EAE9CA,KACAC,EAH8C,EAG9CA,QAH8C,OAK9C,kBAAC,GAAD,CACEzR,gBAAgB,UAChBC,MAAM,OACN1G,MAAM,OACN+G,QAAQ,OACRG,QAAQ,OACRM,OAAO,OACPL,aAAa,OACbC,WAAW,OACXuD,eAAe,SACfD,WAAW,UAEX,kBAACyN,GAAA,EAAD,CACEC,MAAOJ,EAAc,EACrBC,KAAMA,EAAO,EACblC,SAAU,SAACsC,EAAIC,GAAL,OAAWJ,EAAQI,EAAI,QCjCxB,SAASC,GAAYvX,GAClC,IACE,OAAOwX,OAAOxX,GAAOyX,eAAe,QAAS,CAC3C3V,MAAO,WACP4V,SAAU,QAEZ,MAAOC,GACP,OAAO3X,EAAM4X,Y,mtJCJV,IAAM7W,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MA4DPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MAYJkG,GAAMlG,YAAOsE,KAAPtE,CAAH,MC4mBD6W,GA5nBD,WAAO,IACXvZ,EAAS2B,IAAT3B,KACAiF,EAAavB,IAAbuB,SACF2I,EAAUnB,iBAAoB,MAC9B+M,EAAgB/M,iBAAoB,MAJxB,EAMQ5M,mBAAqC,IAN7C,mBAMXoC,EANW,KAMJC,EANI,OAO0BrC,mBAAmB,IAP7C,mBAOX4Z,EAPW,KAOKC,EAPL,OAQwB7Z,mBAAmB,IAR3C,mBAQX8Z,EARW,KAQIC,EARJ,OAUwB/Z,oBAAkB,GAV1C,mBAUXga,EAVW,KAUIC,EAVJ,OAYoBja,mBAAiB,GAZrC,mBAYXka,EAZW,KAYEC,EAZF,OAakBna,mBAAiB,GAbnC,mBAaXoa,EAbW,KAaCC,EAbD,OAeYra,mBAAmB,IAf/B,mBAeXsC,EAfW,KAeFC,EAfE,OAgBYvC,oBAAkB,GAhB9B,mBAgBX0Q,EAhBW,KAgBFC,EAhBE,KAkBlBpP,qBAAU,WACRoP,GAAW,GACXjT,EACGgE,IAAI,QAAS,CACZ6W,OAAO,aACLO,KAAMoB,GACH5X,KAGNrD,MAAK,SAAAR,GAAa,IACTW,EAASX,EAATW,KAERiD,EAAQ,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAMkb,OACfD,EAAa,OAACjb,QAAD,IAACA,OAAD,EAACA,EAAMyZ,aACpBlI,GAAW,QAEd,CAACxQ,EAAM+Z,EAAa5X,IAEvB,IAAMiY,EAAiBhJ,mBACrB,yBACEnP,QADF,IACEA,OADF,EACEA,EAAO0C,KAAI,SAAA0V,GACT,IAAM5C,EAID,GAoBL,MAnBmB,WAAX,OAAJzX,QAAI,IAAJA,OAAA,EAAAA,EAAMK,MACRga,EAAKC,eAAerO,SAAQ,SAAAgM,GAM1B,OALAR,EAAS3M,KAAK,CACZjH,GAAIoU,EAAQA,QAAQpU,GACpBvD,KAAM2X,EAAQA,QAAQ3X,KACtBia,MAAOtB,GAAYhB,EAAQuC,cAEtB/C,KAGT4C,EAAKC,eAAerO,SAAQ,SAAAgM,GAC1BR,EAAS3M,KAAK,CACZjH,GAAIoU,EAAQA,QAAQpU,GACpBvD,KAAM2X,EAAQA,QAAQ3X,KACtBia,MAAOtB,GAAYhB,EAAQwC,oBAK1B,CACL5W,GAAIwW,EAAKxW,GACT6W,UAAU,GAAD,OAAKL,EAAKM,OAAOhN,QAAQM,mBAAzB,OAA6CoM,EAAK5K,KAAKxB,mBAAvD,OAA2EoM,EAAKpM,mBACzF0M,OAAQN,EAAKM,OAAOra,KACpBsa,SAAUP,EAAKQ,OAAOva,KACtBwa,SAAUT,EAAKS,SACfC,IAAI,GAAD,OAAKV,EAAKU,IAAIC,MAAd,YAAuBX,EAAKU,IAAIE,OACnCC,SAAUb,EAAKU,IAAII,MACnBV,cAAeJ,EAAKI,cACpBD,WAAYH,EAAKG,WACjBY,kBAAmBf,EAAKe,kBACxBC,cAAehB,EAAKgB,cACpB3c,OAAQ2b,EAAK3b,OACb+Y,WACAhI,KAAM4K,EAAK5K,KAAKnP,KAChBgb,aAAcjB,EAAKiB,mBAGzB,CAACrZ,EAAOjC,IAGJub,EAAqB1a,uBACzB,SAACgD,GACC6V,EAAkB,GAAD,mBAAKD,GAAL,CAAqB5V,OAExC,CAAC4V,IAGG+B,EAAsB3a,uBAC1B,SAACgD,GACC,IAAM4X,EAAoBhC,EAAenU,QACvC,SAAAoW,GAAS,OAAIA,IAAc7X,KAG7B6V,EAAkB+B,KAEpB,CAAChC,IAGGkC,EAAmB9a,uBACvB,SAACgD,GACC,UAAI8V,QAAJ,IAAIA,OAAJ,EAAIA,EAAehI,SAAS9N,GAA5B,CACE,GAA6B,IAAzB8V,EAAcpL,OAGhB,YAFAqL,EAAiB,IAKnB,IAAMgC,EAAoBjC,EAAcrU,QAAO,SAAA+U,GAAI,OAAIA,IAASxW,KAEhE+V,EAAiBgC,QAMjBhC,EADED,EACe,GAAD,mBAAKA,GAAL,CAAoB9V,IAIrB,CAACA,MAEpB,CAAC8V,IAGGkC,EAAmBhb,sBAAW,uCAClC,WAAM5B,GAAN,eAAA6B,EAAA,2DACM6Y,EAAcpL,OAAS,GAD7B,uBAEItJ,EAAS,CACPjB,MAAO,6DACPD,YAAa,oCACbb,KAAM,UALZ,6BAWOjE,EAAK6c,WAXZ,uBAYI7W,EAAS,CAAEjB,MAAO,0CAAqCd,KAAM,UAZjE,0CAgByB3F,EAAIuX,MAAM,gBAAiB,CAChDpW,OAAQO,EAAK6c,WACb7Z,MAAO0X,IAlBX,UAqB0B,MArB1B,OAqBejb,OArBf,wBAsBIkb,EAAiB,IACjB3U,EAAS,CACPjB,MAAO,UACPD,YAAa,+CACbb,KAAM,YA1BZ,UA6BsB3F,EAAIgE,IAAI,QAAS,CACjC6W,OAAQ,CAAEO,KAAMoB,KA9BtB,QA6BUhb,EA7BV,OAiCImD,EAASnD,EAAIE,KAAKkb,OAjCtB,4CADkC,sDAqClC,CAAClV,EAAU8U,EAAaJ,IAGpBoC,EAAmBlb,sBAAW,uCAClC,iCAAAC,EAAA,yDAAS4V,EAAT,EAASA,KAAMhY,EAAf,EAAeA,OACTsd,EAAQ,GAEPtF,GAAShY,EAHhB,uBAIIuG,EAAS,CACPjB,MAAO,2DACPd,KAAM,UANZ,0BAYMwT,GAAQhY,IAERsd,EADa,QAAXtd,EACM,CAAEgY,QAEF,CAAEA,OAAMhY,WAIhBgY,IAAShY,IACXsd,EAAQ,CAAEtF,SAGRhY,IAAWgY,GAAmB,QAAXhY,IACrBsd,EAAQ,CAAEtd,WAGZ0D,EAAW4Z,GACXhC,EAAe,GA7BjB,4CADkC,sDAgClC,CAAC/U,IAGGgX,EAAsBpb,sBAAW,sBAAC,gCAAAC,EAAA,sEACLvD,EAAIgE,IAAI,QAAS,CAChD6W,OAAQ,CAAEO,KAAMoB,KAFoB,OAChCmC,EADgC,OAKtChC,EAAcgC,EAAmBjd,KAAKyZ,aAC9ByB,EAAU+B,EAAmBjd,KAA7Bkb,MAER,UAAAX,EAAcjM,eAAd,SAAuByG,QAEvB9R,EAASiY,GACTD,EAAcgC,EAAmBjd,KAAKyZ,aACtCsB,EAAekC,EAAmBjd,KAAKkd,cAEvC/Z,EAAW,IAd2B,4CAerC,CAAC2X,IAEEqC,GAAoBvb,sBAAW,sBAAC,gCAAAC,EAAA,6DACpCgZ,GAAiB,GADmB,kBAGXvc,EAAI8e,OAGxB,SAAU,CACXpd,KAAM,CACJqd,IAAK3C,KARyB,cAG5Brb,EAH4B,QAYzBW,KAAK4P,OAAO5C,SAAQ,SAAA9N,GAC3B8G,EAAS,CACP/B,KAAM,QACNc,MAAM,gDAAD,OAAyC7F,EAAM0F,SAIlD0Y,EAAkBje,EAASW,KAAK4P,OAAOlK,KAAI,SAAAmH,GAAG,OAAIA,EAAIjI,MAE5D+V,EAAiB2C,GArBiB,UAuBhBhf,EAAIgE,IAAI,QAAS,CAAE6W,OAAQ,CAAEO,KAAMoB,KAvBnB,QAuB5Bhb,EAvB4B,OAyBlCmD,EAASnD,EAAIE,KAAKkb,OAClBD,EAAcnb,EAAIE,KAAKyZ,aACvBsB,EAAejb,EAAIE,KAAKkd,cAExBlX,EAAS,CAAE/B,KAAM,UAAWc,MAAO,wCA7BD,kDA+BlCiB,EAAS,CAAE/B,KAAM,QAASc,MAAO,SA/BC,QAkCpC8V,GAAiB,GAlCmB,0DAmCnC,CAACH,EAAe1U,EAAU8U,IAE7B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAY7S,KAAK,sBACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACV2G,cAAc,OACd3H,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,KAAD,CACE0F,IAAKsM,EACLzK,SAAUgN,EACVvY,MAAO,CAAEiE,QAAS,OAAQkE,aAAc,SAExC,kBAAC,GAAD,CACErL,KAAK,OACLkW,gBAAgB,sCAChBL,eAAgB,CACd/O,MAAO,IACPc,OAAQ,MAIZ,kBAAC,GAAD,CACE+G,YAAY,6BACZ/G,OAAQ,EACRf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,SACL6V,eAAgB,CACdzO,WAAY,EACZN,MAAO,IACPc,OAAQ,GACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGnB,4BAAQzF,MAAM,OAAd,SACA,4BAAQA,MAAM,WAAd,YACA,4BAAQA,MAAM,aAAd,cACA,4BAAQA,MAAM,YAAd,aACA,4BAAQA,MAAM,YAAd,eAGF,kBAAC6J,GAAA,EAAD,CAASC,MAAM,iBAAiBC,aAAW,kBACzC,kBAAC,KAAD,CACEnD,OAAQ,CACNC,GAAI,UACJ7H,MAAO,QAET8H,aAAc,CACZL,OAAQ,GAEVD,OAAO,OACPf,gBAAgB,UAChBO,WAAY,EACZxE,KAAK,UAEL,kBAAC,IAAD,QAIJ,kBAACqI,GAAA,EAAD,CAASC,MAAM,iBAAiBC,aAAW,kBACzC,kBAAC,KAAD,CACEnD,OAAQ,CACNC,GAAI,WAENC,aAAc,CACZL,OAAQ,GAEVD,OAAO,OACPf,gBAAgB,UAChBO,WAAY,EACZzD,QAASgY,GAVX,oBAiBJ,kBAAC,GAAD,KACE,wCACA,+BAGF,yBAAKlS,UAAU,YACb,uCACA,0CACA,uCACA,uCACA,yDACA,iDACA,iDAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAAC,GAAD,CAAMjB,MAAM,OAAOiB,UAAW,EAAG2G,cAAe,IAC7CoL,EAAezV,KAAI,SAAA0V,GAAI,OACtB,kBAAC,GAAD,CACExV,IAAKwV,EAAKxW,GACVI,QACiB,WAAX,OAAJjE,QAAI,IAAJA,OAAA,EAAAA,EAAMK,MACF,kBAAMsb,EAAiBtB,EAAKxW,UAC5B8I,GAGN,yBACE5C,UACE4P,EAAchI,SAAS0I,EAAKxW,IACxB,kBACA,SAENL,MACEiW,EAAe9H,SAAS0I,EAAKxW,IACzB,CACEgE,aAAc,gBACdyD,aAAc,EACd5C,OAAQ,WAEV,CAAEb,aAAc,OAAQa,OAAQ,YAGtC,8BAAO2R,EAAKK,WACZ,8BAAOL,EAAKM,QACZ,8BAAON,EAAKU,KACZ,8BAAOV,EAAKa,UACZ,8BACG/L,mBACC,IAAIqN,KAAKnC,EAAKe,mBACd,8BACA,CAAEqB,OAAQC,QAGd,8BACGvN,mBACC,IAAIqN,KAAKnC,EAAKgB,eACd,8BACA,CAAEoB,OAAQC,QAGd,yBAAK3S,UAAU,UACb,8BACE,yBAAKA,UAAWsQ,EAAK3b,SCziB9B,SAAiCA,GAC9C,OAAQA,GACN,IAAK,UACH,MAAO,WACT,IAAK,WACH,MAAO,YACT,IAAK,YACH,MAAO,aACT,IAAK,WACH,MAAO,aACT,QACE,MAAO,cD+hBYie,CAAwBtC,EAAK3b,UAIjC+a,EAAe9H,SAAS0I,EAAKxW,IAC5B,kBAAC,KAAD,CACEI,QAAS,SAAAoV,GACPA,EAAEuD,kBACFpB,EAAoBnB,EAAKxW,KAE3BL,MAAO,CAAEkF,OAAQ,WACjBrF,KAAM,KAGR,kBAAC,KAAD,CACEY,QAAS,SAAAoV,GACPA,EAAEuD,kBACFrB,EAAmBlB,EAAKxW,KAE1BL,MAAO,CAAEkF,OAAQ,WACjBrF,KAAM,MAKZ,yBACE0G,UAAU,WACV+H,QAAS2H,EAAe9H,SAAS0I,EAAKxW,IACtCL,MACEmW,EAAchI,SAAS0I,EAAKxW,IACxB,CAAEsE,OAAQ,oBAAqByD,UAAW,GAC1C,CAAEzD,OAAQ,IAGhB,kBAAC,GAAD,CAAW4B,UAAU,aACnB,0CACA,+BAEF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAW3C,MAAM,OACf,yBAAK2C,UAAU,WACb,8BACE,4CADF,eACiCsQ,EAAK5K,OAEtC,8BACE,oDACCN,mBACC,IAAIqN,KAAKnC,EAAKiB,cACd,8BACA,CAAEmB,OAAQC,SAIhB,kBAAC,GAAD,CAAW3S,UAAU,aACnB,0BAAMvG,MAAO,CAAE4E,SAAU,SAAzB,eACA,+BAEDiS,EAAK5C,SAAS9S,KAAI,SAAAsT,GAAO,OACxB,yBAAKlO,UAAU,UAAUlF,IAAKoT,EAAQpU,IACpC,8BAAOoU,EAAQ3X,MACf,qCAAO2X,QAAP,IAAOA,OAAP,EAAOA,EAASsC,WAGpB,yBAAKxQ,UAAU,SACb,uCACA,8BACkB,WAAX,OAAJ/J,QAAI,IAAJA,OAAA,EAAAA,EAAMK,MACH6Y,OAAOmB,EAAKG,YAAYrB,eACtB,QACA,CACE3V,MAAO,WACP4V,SAAU,QAGdF,OAAOmB,EAAKI,eAAetB,eACzB,QACA,CACE3V,MAAO,WACP4V,SAAU,WAMxB,kBAAC,KAAD,CACEyD,UAAU,YACVxU,UAAU,OACVX,WAAY,EACZG,aAAa,KACbT,MAAM,MACNQ,QAAS,EACTkV,WAAW,UACXnU,WAAW,WAEX,kBAAC0M,GAAA,EAAD,CACEjO,MAAM,OACN2V,UAAU,SACVC,WAAY,EACZ5U,SAAU,IAEV,sDACA,6BACCiS,EAAKS,iBAQlB,kBAAC,GAAD,CACElC,QAASoB,EACTrB,KAAMoB,EACNrB,YAAauB,MAML,WAAX,OAAJja,QAAI,IAAJA,OAAA,EAAAA,EAAMK,OACL,yBACE0J,UACE4P,EAAcpL,OAAS,EACnB,2BACA,sBAENuD,OAAQ6H,EAAcpL,OAAS,EAC/B/K,MAAO,CAAE6E,UAAW,OAAQsD,aAAc,SAE1C,kBAAC,KAAD,CACEuB,IAAKU,EACLmB,SAAU8M,EACVrY,MAAO,CAAEiE,QAAS,OAAQ2D,WAAY,WAEtC,kBAAC,GAAD,CACElD,OAAQ,EACRf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,aACL6V,eAAgB,CACdxO,YAAa,EACbP,MAAO,IACPc,OAAQ,GACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGnB,4BAAQzF,MAAM,WAAd,YACA,4BAAQA,MAAM,aAAd,cACA,4BAAQA,MAAM,YAAd,aACA,4BAAQA,MAAM,YAAd,eAEF,kBAAC,GAAD,CAAQ8B,MAAO,CAAE6E,UAAW,OAASnF,KAAK,UAA1C,0BAGA,kBAACqI,GAAA,EAAD,CAASC,MAAM,gBAAgBC,aAAW,iBACxC,kBAAC,GAAD,CACEjI,MAAO,CAAE6E,UAAW,OACpBpE,QAASmY,GACT1Q,WAAYmO,GAEZ,kBAAC,IAAD,a,gvDEnsBX,IAAMpX,GAAYC,aAAOkG,KAAPlG,CAAH,MAelB,SAAAO,GAAK,OACLA,EAAMmJ,WACNtJ,aADA,SAsCE,SAAAG,GAAK,OACLA,EAAMmJ,WACNtJ,aADA,SCVSma,GArC4B,SAAC,GAAc,IAAZ3c,EAAW,EAAXA,KACtC4c,EAAczQ,iBAAuB,MADY,EAEXM,aAASzM,GAA7C0M,EAF+C,EAE/CA,UAAW7O,EAFoC,EAEpCA,MAAO8O,EAF6B,EAE7BA,cAF6B,EAGrBpN,mBAA4B,CAAE6B,MAAO,KAHhB,mBAGhDyb,EAHgD,KAGrCC,EAHqC,KAKvDhc,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAKiQ,EACLjR,KAAM,YAEP,CAACc,EAAWmQ,EAAWlQ,IAE1B,IAAMoQ,EAA2Bxc,uBAC/B,SAACsJ,GACCiT,EAAa,CAAE1b,MAAOyI,EAAMmT,OAAO5b,UAErC,CAAC0b,IAGH,OACE,kBAAC,GAAD,CAAWhR,YAAajO,GACtB,kBAACof,GAAA,EAAD,CACErQ,IAAKgQ,EACLzG,SAAU4G,EACVxZ,GAAG,aACHX,KAAK,iBACL6G,UAAU,aACVrI,MAAOyb,EAAUzb,MACjB8b,gBAAiB,CACfC,QAAQ,O,UCNHC,GAhC6B,SAAC,GAAuB,IAArBpd,EAAoB,EAApBA,KAAS2H,EAAW,yBAC3D0V,EAAclR,iBAA4B,MADiB,EAGrBM,aAASzM,GAA7C0M,EAHyD,EAGzDA,UAAW7O,EAH8C,EAG9CA,MAAO8O,EAHuC,EAGvCA,cAU1B,OARA7L,qBAAU,WACR6L,EAAc,CACZ3M,KAAM0M,EACNE,IAAKyQ,EAAYpQ,QACjBrB,KAAM,YAEP,CAACc,EAAWC,IAGb,kBAAC2Q,GAAA,EAAD,eACE1Q,IAAKyQ,EACLhV,WAAW,UACXkV,YAAY,MACZrF,YAAara,EAAQ,UAAY,UACjCuC,MAAM,OACNJ,KAAMA,EACNwd,OAAO,OACPxV,OAAQ,CAAEuV,YAAa,MAAOrF,YAAa,WAC3CuF,OAAQ,CACNF,YAAa,MACbrF,YAAa,YAEXvQ,KCpCH,SAAS+V,GAAe3E,GAAuC,IAC9D3X,EAAU2X,EAAEjP,cAAZ1I,MAQN,OAHAA,GADAA,GADAA,GADAA,EAAQA,EAAMJ,QAAQ,MAAO,KACfA,QAAQ,eAAgB,UACxBA,QAAQ,eAAgB,UACxBA,QAAQ,sBAAuB,IAE7C+X,EAAEjP,cAAc1I,MAAQA,EACjB2X,EAGF,SAAS4E,GAAavc,GAC3B,IACE,GAAIA,GAASA,EAAM6M,OAAQ,CACzB,IAAM2P,EAAWxc,EAAMJ,QAAQ,WAAY,IAE3C,GAAI4c,EAAS3P,QAAU,GAAI,CACzB,GAAI2P,EAAS3P,OAAS,GAAI,CAGxB,OAAO2P,EAAS5c,QADH,6DACiB,kBAKhC,OAAO4c,EAAS5c,QAFJ,+CAEiB,eAG/B,OAAOI,EAGT,OAAOA,EACP,SACA,OAAOA,G,+9HC1BwBgB,IAAOC,IAAV,MAAzB,IAgCMF,GAAYC,IAAOC,IAAV,MAaTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAgDPkN,GAAYlN,IAAOC,IAAV,MAsBTwb,GAASzb,YAAO0b,KAAP1b,CAAH,MA+BNoR,GAAiBpR,YAAOsE,KAAPtE,CAAH,MAoCd2b,GAAa3b,YAAO0b,KAAP1b,CAAH,KAaLqG,aAAM,GAAK,YAUhBuV,GAAW5b,YAAO6b,KAAP7b,CAAH,MC+UN8b,GAzeO,WACpB,IAAM/e,EAAUC,cACRM,EAAS2B,IAAT3B,KACAiF,EAAavB,IAAbuB,SAEF2I,EAAUnB,iBAAoB,MALV,EAOM5M,mBAAS,IAPf,mBAOnB4e,EAPmB,KAOTC,EAPS,OAQgB7e,oBAAS,GARzB,mBAQnB8e,EARmB,KAQJC,EARI,OAUM/e,mBAAsB,IAV5B,mBAUnB4X,EAVmB,KAUTC,EAVS,OAWsB7X,mBAAmB,IAXzC,mBAWnBgf,EAXmB,KAWDC,EAXC,OAkBwBjf,mBAEhD,IApBwB,mBAkBnBkf,EAlBmB,KAkBAC,EAlBA,KAsB1B5d,qBAAU,WACR7D,EAAIgE,IAAI,YAAYzC,MAAK,SAAAR,GACvB,IAAM2gB,EAAgC3gB,EAASW,KAE/CyY,EAAYuH,MAGd1hB,EACGgE,IADH,uBACgBvB,QADhB,IACgBA,OADhB,EACgBA,EAAMkf,QAAQC,aAC3BrgB,MAAK,SAAAR,GACJ,IAEM8gB,EAFmB9gB,EAASW,KAKrB0F,KAAI,SAAA8K,GAAI,MAAK,CAAE/N,MAAO+N,EAAK5L,GAAI2H,MAAOiE,EAAKnP,SAExD0e,EAAqBI,MAEtB5d,OAAM,WACL/B,EAAQqL,KAAK,kBAEhB,CAACrL,EAASO,IAEb,IAAMqf,EAAsBxe,uBAC1B,SAACgD,GAGC,GAFwBgb,EAAiBS,WAAU,SAAA1a,GAAI,OAAIA,IAASf,MAE7C,EAAG,CACxB,IAAM0b,EAAgBV,EAAiBvZ,QAAO,SAAAV,GAAI,OAAIA,IAASf,KAE/Dib,EAAoBS,QAEpBT,EAAoB,GAAD,mBAAKD,GAAL,CAAuBhb,OAG9C,CAACgb,IAGGhR,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,sDAAA6B,EAAA,6DAA0BkT,EAA1B,EAA0BA,MACxB4K,GAAiB,GADnB,SAGsCrhB,EAAIsB,KACtC,8BACA,CAAEmS,UAAS,OAAEhR,QAAF,IAAEA,OAAF,EAAEA,EAAMkf,QAAQC,WAAY1H,SAAUoH,IALrD,cAGQW,EAHR,OAQUC,EAAiBD,EAAsBvgB,KAAvCwgB,aARV,SAUmCliB,EAAIsB,KAAK,uBAAwB,CAChE4Y,SAAUoH,IAXd,cAUQa,EAVR,OAcUC,EAAcD,EAAmBzgB,KAAjC0gB,UAdV,UAiBI,UAAA/R,EAAQL,eAAR,SAAiBO,UAAU,IAErB8R,EAAkB3gB,EAAKiT,IAAI5Q,QAAQ,IAAK,IAExCue,EAAeD,EAAgBte,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAE7D4M,EAASC,OAAaC,MAAM,CAChC0R,OAAQ3R,OAAa+F,SAAS,kCAC9B6G,IAAK5M,OAAa+F,SAAS,wBAC3B6L,SAAU5R,OAAa+F,SAAS,+BAChC8L,SAAU7R,OAAa+F,SAAS,kCAChCgH,SAAU/M,OACP+F,SAAS,iCACT5F,IAAI,EAAG,6BACPD,IAAI,EAAG,6BACV6D,IAAK/D,OACF+F,SAAS,sBACT+L,QACC,mGACA,6CAEJ3f,KAAM6N,OAAa+F,SAAS,uBAC5BgM,UAAW/R,OAAa+F,SAAS,kCACjCiM,aAAchS,OAAa+F,SAAS,kCACpC4G,SAAU3M,OACViS,iBAAkBjS,OAAa+F,SAC7B,4CA3CR,UA+CUhG,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAhDlB,aAmDQmQ,EAAiBtQ,QAAU,GAnDnC,uBAoDMtJ,EAAS,CAAEjB,MAAO,iCAA+Bd,KAAM,UACjD,IAAIpB,MAAM,0BArDtB,eA2DMue,EADEphB,EAAK6b,SACU,CACfgF,OAAQ7gB,EAAK6gB,OACbK,aAAc,IAAI3D,KAAKvd,EAAKkhB,cAAcG,cAC1CF,iBAAkB,IAAI5D,KAAKvd,EAAKmhB,kBAAkBE,cAClDb,eACAE,YACAY,OAAQthB,EAAKihB,UACb5f,KAAMrB,EAAKqB,KACX4R,IAAK2N,EACL/E,SAAU7b,EAAK6b,SACfC,IAAK9b,EAAK8b,IACViF,SAAU/gB,EAAK+gB,SACf9E,SAAUjc,EAAKic,SACf6E,SAAU9gB,EAAK8gB,UAGA,CACfD,OAAQ7gB,EAAK6gB,OACbK,aAAc,IAAI3D,KAAKvd,EAAKkhB,cAAcG,cAC1CF,iBAAkB,IAAI5D,KAAKvd,EAAKmhB,kBAAkBE,cAClDb,eACAE,YACAY,OAAQthB,EAAKihB,UACb5f,KAAMrB,EAAKqB,KACX4R,IAAK2N,EACL9E,IAAK9b,EAAK8b,IACViF,SAAU/gB,EAAK+gB,SACf9E,SAAUjc,EAAKic,SACf6E,SAAU9gB,EAAK8gB,UAvFvB,UA2FsCxiB,EAAIsB,KAAK,QAASwhB,GA3FxD,WA6FuC,OAF7BG,EA3FV,QA6F4B9hB,OA7F5B,wBA8FY+hB,EAAwB,CAC5BC,OAAQF,EAAoBvhB,KAAK4E,GACjC8c,WAAY9B,GAhGpB,UAmG+CthB,EAAIsB,KAC3C,gBACA4hB,GArGR,QAwGgD,OALpCG,EAnGZ,QAwGqCliB,QAC7BuG,EAAS,CACPjB,MAAO,UACPd,KAAM,UACNa,YAAa,mCAEf6a,GAAiB,GACjBE,EAAoB,IAEpB9K,IACA0K,EAAY,IACO,gBACJ,SAEXmC,EAAM,GAEVD,EAA2B3hB,KAAKgN,SAC9B,SAAC6U,EAAqCC,GAElCF,GADY,IAAVE,EACC,UAAOD,EAAK7I,QAAQ3X,MAEpB,aAAUwgB,EAAK7I,QAAQ3X,SAK1B0gB,EA1BuC,iEA0BsBR,EAAoBvhB,KAAK0b,OAAOhN,QAAQM,mBA1B9D,OA0BkFuS,EAAoBvhB,KAAKwQ,KAAKxB,mBA1BhH,OA0BoIuS,EAAoBvhB,KAAKgP,mBA1B7J,0CA0B0NkB,mBACrQ,IAAIqN,KAAKgE,EAAoBvhB,KAAKmc,mBAClC,8BACA,CAAEqB,OAAQC,OA7BiC,0CA8BVvN,mBACjC,IAAIqN,KAAKgE,EAAoBvhB,KAAKoc,eAClC,8BACA,CAAEoB,OAAQC,OAjCiC,wDAkCIvN,mBAC/C,IAAIqN,KAAKgE,EAAoBvhB,KAAKqc,cAClC,8BACA,CAAEmB,OAAQC,OArCiC,kCAuC3C8D,EAAoBvhB,KAAK0b,OAAOra,KAvCW,wCAyC3CkgB,EAAoBvhB,KAAK0b,OAAOhN,QAAQrN,KAzCG,wCA2C3CkgB,EAAoBvhB,KAAKwQ,YA3CkB,aA2C3C,EAA+BnP,KA3CY,4BA4CzBkgB,EAAoBvhB,KAAK8b,IAAIC,MA5CJ,cA6C3CwF,EAAoBvhB,KAAK8b,IAAIE,MA7Cc,cA8CvCuF,EAAoBvhB,KAAK8b,IAAIra,MA9CU,uBA+C3C8f,EAAoBvhB,KAAK8b,IAAII,MA/Cc,kCAgDtB0F,EAhDsB,wCAiD3CL,EAAoBvhB,KAAK6b,UAGrBmG,EApDuC,uDAW1B,gBAX0B,iBAoD+CD,EApD/C,mBAY9B,UA0CfxjB,IAAM+D,IAAI0f,KAEVhc,EAAS,CACPjB,MAAO,OACPd,KAAM,QACNa,YACE,mEAGJ6a,GAAiB,IAvKzB,gEA2KQ,gBAAezQ,MA3KvB,wBA4KU0Q,EAAiBtQ,QAAU,GAC7BtJ,EAAS,CAAEjB,MAAO,iCAA+Bd,KAAM,UAGnD2L,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GAC3B+P,GAAiB,GAnLvB,2BAuLI3Z,EAAS,CACPjB,MAAO,OACPD,YACE,gEACFb,KAAM,UAER0b,GAAiB,GA7LrB,2DAD8B,wDAiM9B,CAAC3Z,EAAU4Z,EAAkB7e,IAG/B,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYkH,KAAK,uBACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACVhB,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,kBAAC,GAAD,CACE3F,OAAO,OACPf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,SACL2O,YAAY,sBACZkH,eAAgB,CACd9N,UAAW,OACXV,YAAa,EACbP,MAAO,OACPc,OAAQ,OACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGlB4X,EAAkBpa,KAAI,SAAAuc,GAAG,OACxB,4BAAQrc,IAAKqc,EAAIxf,MAAOA,MAAOwf,EAAIxf,OAChCwf,EAAI1V,WAKX,kBAAC,GAAD,KACE,kDACA,+BAGF,kBAAC2S,GAAD,CAAQ9V,UAAU,QAChB,kBAAC,GAAD,KACE,yBAAK0B,UAAU,UACb,uCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,OACHX,KAAK,OACL5C,KAAK,OACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,KACE,yBAAK2C,UAAU,UACb,sCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,MACHX,KAAK,MACL5C,KAAK,MACLkD,MAAO,CAAE4D,MAAO,QAChBqP,SAAU,SAAA4C,GAAC,OAAIqF,EAAYrF,EAAEiE,OAAO5b,QACpCA,MAAOuc,GAAaQ,MAIxB,kBAAC,GAAD,KACE,yBAAK1U,UAAU,UACb,wCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,MACHX,KAAK,MACL5C,KAAK,MACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,KACE,yBAAK2C,UAAU,UACb,yCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,YAKtB,kBAAC+W,GAAD,CAAQ3a,MAAO,CAAE6E,UAAW,SAC1B,kBAAC,GAAD,KACE,yBAAK0B,UAAU,UACb,wCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,KACE,yBAAK2C,UAAU,UACb,+CACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,WAIpB,yBAAK2C,UAAU,mBACb,yBAAKA,UAAU,UACb,kDACA,oCAEF,kBAAC,GAAD,CACE7B,OAAO,OACPf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,YACL2O,YAAY,kBACZkH,eAAgB,CACd9N,UAAW,OACXV,YAAa,EACbP,MAAO,OACPc,OAAQ,OACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YA9Y4B,CAC7D,CAAEzF,MAAO,MAAO8J,MAAO,QACvB,CAAE9J,MAAO,OAAQ8J,MAAO,aACxB,CAAE9J,MAAO,WAAY8J,MAAO,YA8YC7G,KAAI,SAAAuc,GAAG,OACpB,4BAAQrc,IAAKqc,EAAIxf,MAAOA,MAAOwf,EAAIxf,OAChCwf,EAAI1V,YAMb,kBAAC5C,GAAA,EAAD,CAAKuY,KAAM,EAAG/Y,SAAS,OAAOT,YAAY,QACxC,0BAAMnE,MAAO,CAAEmI,aAAc,QAA7B,sBACA,kBAAC,GAAD,CAAUrL,KAAK,WAAWkD,MAAO,CAAE6E,UAAW,YAIlD,kBAAC,GAAD,KACE,wCACA,+BAGF,yBAAK0B,UAAU,sBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,UACb,iEACA,oCAEF,kBAACqX,GAAD,CAAU9gB,KAAK,sBAGjB,yBAAKyJ,UAAU,qBACb,yBAAKA,UAAU,UACb,yDACA,oCAEF,kBAACqX,GAAD,CAAU9gB,KAAK,mBAInB,kBAAC,GAAD,KACE,8CACA,+BAEF,kBAAC,GAAD,CACE+gB,gBAAiB,CACf/Z,GAAI,cACJnB,GAAI,kBACJC,GAAI,sBACJmB,GAAI,sBACJC,GAAI,wCAGLiQ,EAAS9S,KAAI,SAAAsT,GAAO,OACnB,kBAACoG,GAAD,CACEpa,QAAS,kBAAMob,EAAoBpH,EAAQpU,KAC3CkG,UACE8U,EAAiBlN,SAASsG,EAAQpU,IAAM,WAAa,GAEvDgB,IAAKoT,EAAQpU,IAEb,8BAAOoU,EAAQ3X,WAKrB,yBAAKyJ,UAAU,qBACb,kBAAC,GAAD,CAAQ2B,aAAciT,EAAezb,KAAK,UAA1C,gB,osDCthBP,IAAMT,GAAYC,IAAOC,IAAV,MAUTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAqBPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MC+GF4e,GA3IC,WAAO,IAAD,EACIzhB,mBAAuB,IAD3B,mBACb0hB,EADa,KACPC,EADO,OAGU3hB,oBAAkB,GAH5B,mBAGb0Q,EAHa,KAGJC,EAHI,KAKd/Q,EAAUC,cAYhB,OAVA0B,qBAAU,WACRoP,GAAW,GACXjT,EAAIgE,IAAI,iBAAiBzC,MAAK,SAAAR,GAC5B,IAAMmjB,EAAwBnjB,EAASW,KAEvCuiB,EAAQC,GACRjR,GAAW,QAEZ,IAGD,kBAAC,GAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAYtJ,KAAK,eACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,4CACA,+BAGF,yBAAKuC,UAAU,YACb,oCACA,wCACA,sCACA,iDACA,uCACA,sCAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAAC,GAAD,CAAMH,OAAQ,CAAEX,GAAI,OAAQC,GAAI,SAC7B+Z,EAAK5c,KAAI,SAAA+c,GAAG,eACX,yBAAK3X,UAAU,OACb,8BAAO2X,EAAIphB,MACX,8BAAOohB,EAAI3T,WACX,8BAAO2T,EAAI1hB,KAAK2hB,OAChB,8BAAOD,EAAI/T,QAAQrN,MACnB,wCAAOohB,EAAIjS,YAAX,aAAO,EAAUnP,MACjB,8BACsB,aAAnB,UAAAohB,EAAI1hB,YAAJ,eAAUK,MAAqB,UAAY,kBAOxD,yBAAK0J,UAAU,UACb,kBAAC,GAAD,CACE9F,QAAS,WACPxE,EAAQqL,KAAK,sBAFjB,+B,g5DCvJH,IAAMrI,GAAYC,IAAOC,IAAV,MAUTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MASPkN,GAAYlN,IAAOC,IAAV,MAsBTwb,GAASzb,IAAOC,IAAV,MA0BNmR,GAAiBpR,IAAOC,IAAV,MCyNZif,GAvPS,WACtB,IAAMniB,EAAUC,cACRM,EAAS2B,IAAT3B,KACAiF,EAAavB,IAAbuB,SACF2I,EAAUnB,iBAAoB,MAJR,EAMsB5M,mBAEhD,IAR0B,mBAMrBkf,EANqB,KAMFC,EANE,KAU5B5d,qBAAU,WACR7D,EACGgE,IADH,uBACgBvB,QADhB,IACgBA,OADhB,EACgBA,EAAMkf,QAAQC,aAC3BrgB,MAAK,SAAAR,GACJ,IAEM8gB,EAFmB9gB,EAASW,KAKrB0F,KAAI,SAAA8K,GAAI,MAAK,CAAE/N,MAAO+N,EAAK5L,GAAI2H,MAAOiE,EAAKnP,SAExD0e,EAAqBI,MAEtB5d,OAAM,WACL/B,EAAQqL,KAAK,kBAEhB,CAACrL,EAASO,IAEb,IAAM6N,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,8BAAA6B,EAAA,6DAA0BkT,EAA1B,EAA0BA,MAA1B,SAEI,UAAApG,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChCrN,SAAUoN,OAAa+F,SAAS,6BAChClT,SAAUmN,OAAa+F,SAAS,wBAChCyN,MAAOxT,OAAa+F,SAAS,yBAC7B5T,KAAM6N,OAAa+F,SAAS,uBAC5BzE,KAAMtB,OAAa+F,SAAS,0BAC5BnG,UAAWI,OACRG,IAAI,EAAG,iDACPD,IAAI,GAAI,kDACXuG,gBAAiBzG,OAAa+F,SAC5B,+CAdR,SAkBUhG,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAnBlB,UAsBQzP,EAAK+B,WAAa/B,EAAK2V,gBAtB/B,uBAuBM,UAAAhH,EAAQL,eAAR,SAAiBO,UAAU,CACzB9M,SAAU,0BACV4T,gBAAiB,4BAzBzB,iCA8BUiN,EAAc,CAClB9gB,SAAU9B,EAAK8B,SACf4gB,MAAO1iB,EAAK0iB,MACZ3gB,SAAU/B,EAAK+B,SACfX,KAAM,SACNC,KAAMrB,EAAKqB,KACXyN,UAAW9O,EAAK8O,UAChB+T,SAAS,EACT9Q,UAAS,OAAEhR,QAAF,IAAEA,OAAF,EAAEA,EAAMkf,QAAQC,WACzBW,OAAQ7gB,EAAKwQ,MAvCnB,UA0C2BlS,EAAIsB,KAAK,eAAgBgjB,GA1CpD,QA4C4B,MA5C5B,OA4CiBnjB,QACXuG,EAAS,CACPjB,MAAO,UACPd,KAAM,UACNa,YAAa,qCAEfiQ,KAEA/O,EAAS,CACPjB,MAAO,OACPd,KAAM,QACNa,YAAa,sCAvDrB,uDA2DQ,gBAAeoK,MA3DvB,wBA4DYU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GA9DjC,2BAkEI5J,EAAS,CACPjB,MAAO,8CACPD,YACE,wEACFb,KAAM,UAtEZ,0DAD8B,wDA2E9B,CAAC+B,EAAUjF,IAGb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAYkH,KAAK,2BAEjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,kBAAC,GAAD,KACE,mDACA,+BAEF,kBAAC,GAAD,CAAQrK,MAAO,CAAE6E,UAAW,SAC1B,kBAAC,GAAD,CAAgB7E,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,uCACA,oCAEF,kBAAC,GAAD,CAAOA,UAAU,QAAQlG,GAAG,OAAOX,KAAK,OAAO5C,KAAK,UAGtD,kBAAC,GAAD,CAAgBkD,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,2CACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,YACHvD,KAAK,YACL6O,OAAO,gBACPC,KAAK,OAIT,yBACErF,UAAU,kBACVvG,MAAO,CAAEkE,WAAY,GAAIN,MAAO,MAEhC,yBAAK2C,UAAU,UACb,sDACA,oCAEF,kBAAC,GAAD,CACE7B,OAAO,OACPf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,OACL2O,YAAY,kCACZkH,eAAgB,CACd9N,UAAW,OACXV,YAAa,EACbP,MAAO,OACPc,OAAQ,OACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGlB4X,EAAkBpa,KAAI,SAAAuc,GAAG,OACxB,4BAAQrc,IAAKqc,EAAIxf,MAAOA,MAAOwf,EAAIxf,OAChCwf,EAAI1V,aAOf,kBAAC,GAAD,KACE,yDACA,+BAGF,kBAAC,GAAD,CAAQhI,MAAO,CAAE6E,UAAW,SAC1B,kBAAC,GAAD,CAAgB7E,MAAO,CAAE4D,MAAO,QAC9B,yBAAK2C,UAAU,UACb,2CACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,cAIT,kBAAC,GAAD,CAAgBkD,MAAO,CAAE4D,MAAO,QAC9B,yBAAK2C,UAAU,UACb,yCACA,oCAEF,kBAAC,GAAD,CAAOA,UAAU,QAAQlG,GAAG,QAAQX,KAAK,QAAQ5C,KAAK,WAGxD,kBAAC,GAAD,CAAgBkD,MAAO,CAAE4D,MAAO,MAAOM,WAAY,KACjD,yBAAKqC,UAAU,UACb,wCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,cAIT,kBAAC,GAAD,CAAgBkD,MAAO,CAAE4D,MAAO,MAAOM,WAAY,KACjD,yBAAKqC,UAAU,UACb,kDACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,kBACHX,KAAK,WACL5C,KAAK,sBAIX,yBAAKyJ,UAAU,UACb,kBAAC,GAAD,CAAQ7G,KAAK,UAAb,e,uWCpRL,IAAMT,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MCmOL4b,GApOE,WACf,IAAM7e,EAAUC,cACRM,EAAS2B,IAAT3B,KAyBR,OAvBAoB,qBAAU,WACR,WAAIpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMkf,QAAQC,aACG,aAAX,OAAJnf,QAAI,IAAJA,OAAA,EAAAA,EAAMK,MAAoB,CAC5B,IAAI0hB,EAAiB,EAErBxkB,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxByjB,EAAiBzjB,EAASW,KAAKsP,UAGjChR,EAAIgE,IAAI,4BAA4BzC,MAAK,SAAAR,GACvC,IAAM0jB,EAAkB1jB,EAASW,MAGJ,IAA3B+iB,EAAgBzT,QAChByT,EAAgBzT,OAASwT,IAEzBtiB,EAAQqL,KAAK,oBAKpB,CAACrL,EAASO,IAGX,kBAAC,GAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAYkH,KAAK,gBAEjB,kBAAC,GAAD,CACEE,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,QAENE,WAAW,OACXC,YAAY,QAEZ,kBAACsa,GAAA,EAAD,CAAMZ,gBAAgB,iBAAiBa,IAAK,EAAG7Z,UAAU,QACvD,kBAACO,GAAA,EAAD,CACEuM,EAAE,OACFC,EAAE,KACF7M,GAAG,WACHV,aAAa,KACbJ,QAAQ,OACRyN,cAAc,SACd9J,WAAW,SACXD,WAAW,OACXgM,YAAY,OACZgL,aAAa,OACbha,OAAO,oBACPlE,QAAS,kBAAMxE,EAAQqL,KAAK,2BAE5B,yBACEtH,MAAO,CAAE6D,SAAU,OAAQQ,aAAc,OACzCkC,UAAU,SACVN,IAAK+L,KACL4M,IAAI,QAEN,kBAACtZ,GAAA,EAAD,CACEsC,WAAW,SACX4J,SAAS,OACT3M,UAAU,MACVjB,MAAM,OACNc,OAAO,OACPma,OAAO,OAEP,kBAAChN,GAAA,EAAD,CAAMjN,SAAS,OAAO1H,MAAM,QAA5B,mCAKJ,kBAACkI,GAAA,EAAD,CACEuM,EAAE,OACFC,EAAE,KACF7M,GAAG,WACHV,aAAa,KACbJ,QAAQ,OACRyN,cAAc,SACd9J,WAAW,SACXD,WAAW,OACXgM,YAAY,OACZgL,aAAa,OACbha,OAAO,oBACPlE,QAAS,kBAAMxE,EAAQqL,KAAK,2BAE5B,yBACEtH,MAAO,CAAE6D,SAAU,OAAQQ,aAAc,OACzCkC,UAAU,SACVN,IAAK+L,KACL4M,IAAI,QAEN,kBAACtZ,GAAA,EAAD,CACEsC,WAAW,SACX4J,SAAS,OACT3M,UAAU,MACVjB,MAAM,OACNc,OAAO,OACPma,OAAO,OAEP,kBAAChN,GAAA,EAAD,CAAMjN,SAAS,OAAO1H,MAAM,QAA5B,mCAKJ,kBAACkI,GAAA,EAAD,CACEuM,EAAE,OACFC,EAAE,KACF7M,GAAG,WACHV,aAAa,KACbJ,QAAQ,OACRyN,cAAc,SACd9J,WAAW,SACXD,WAAW,OACXgM,YAAY,OACZgL,aAAa,OACbha,OAAO,oBACPlE,QAAS,kBAAMxE,EAAQqL,KAAK,2BAa5B,yBACEtH,MAAO,CAAE6D,SAAU,OAAQQ,aAAc,OACzCkC,UAAU,SACVN,IAAK+L,KACL4M,IAAI,QAEN,kBAACtZ,GAAA,EAAD,CACEsC,WAAW,SACX4J,SAAS,OACT3M,UAAU,MACVjB,MAAM,OACNc,OAAO,OACPma,OAAO,OAEP,kBAAChN,GAAA,EAAD,CAAMjN,SAAS,OAAO1H,MAAM,QAA5B,mCAKJ,kBAACkI,GAAA,EAAD,CACEuM,EAAE,OACFC,EAAE,KACF7M,GAAG,WACHV,aAAa,KACbJ,QAAQ,OACRyN,cAAc,SACd9J,WAAW,SACXD,WAAW,OACXgM,YAAY,OACZgL,aAAa,OACbha,OAAO,oBACPlE,QAAS,kBAAMxE,EAAQqL,KAAK,2BAE5B,yBACEtH,MAAO,CAAE6D,SAAU,OAAQQ,aAAc,OACzCkC,UAAU,SACVN,IAAK+L,KACL4M,IAAI,QAEN,kBAACtZ,GAAA,EAAD,CACEsC,WAAW,SACX4J,SAAS,OACT3M,UAAU,MACVjB,MAAM,OACNc,OAAO,OACPma,OAAO,OAEP,kBAAChN,GAAA,EAAD,CAAMjN,SAAS,OAAO1H,MAAM,QAA5B,mCAKJ,kBAACkI,GAAA,EAAD,CACEuM,EAAE,OACFC,EAAE,KACF7M,GAAG,WACHV,aAAa,KACbJ,QAAQ,OACRyN,cAAc,SACd9J,WAAW,SACXD,WAAW,OACXgM,YAAY,OACZgL,aAAa,OACbha,OAAO,oBACPlE,QAAS,kBAAMxE,EAAQqL,KAAK,2BAE5B,yBACEtH,MAAO,CAAE6D,SAAU,OAAQQ,aAAc,OACzCkC,UAAU,SACVN,IAAK+L,KACL4M,IAAI,QAEN,kBAACtZ,GAAA,EAAD,CACEsC,WAAW,SACX4J,SAAS,OACT3M,UAAU,MACVjB,MAAM,OACNc,OAAO,OACPma,OAAO,OAEP,kBAAChN,GAAA,EAAD,CAAMjN,SAAS,OAAO1H,MAAM,QAA5B,uC,s6BCnOd,IA8Ce+B,GA9CGC,IAAOC,IAAV,MC2CA2f,GAtCW,kBACxB,kBAAC,GAAD,KACE,yBAAKvY,UAAU,UACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAY7C,KAAK,0BACjB,yBAAK6C,UAAU,WACb,43CAsBA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAASN,IAAK+L,KAAqB4M,IAAI,UCmIjDG,GAlI0D,SAAC,GAKnE,IAJL9U,EAII,EAJJA,OACAhD,EAGI,EAHJA,QACAiD,EAEI,EAFJA,OACA7J,EACI,EADJA,GAEM+J,EAAUnB,iBAAoB,MAC9BvH,EAAQxB,eAER8e,EAAc3hB,uBAClB,SAACsJ,GACCA,EAAMsY,iBACNzE,GAAe7T,KAEjB,IAGI0D,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAiBkL,GAAxB,qBAAArJ,EAAA,sEAEI,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChC9N,KAAOrB,EAAKsb,MAERpM,OADAA,OAAa+F,SAAS,uBAE1BqG,MAAQtb,EAAKqB,KAET6N,OADAA,OAAa+F,SAAS,6BAThC,SAaUhG,EAAOO,SAASxP,EAAM,CAAEyP,YAAY,IAb9C,UAeSzP,EAAKsb,MAfd,gCAgBYhd,EAAIoR,IAAJ,mBAAoB9K,GAAM,CAAEvD,KAAMrB,EAAKqB,OAhBnD,UAmBSrB,EAAKqB,KAnBd,kCAoBY/C,EAAIoR,IAAJ,mBAAoB9K,GAAM,CAAE0W,MAAOtb,EAAKsb,QApBpD,YAuBQtb,EAAKqB,OAAQrB,EAAKsb,MAvB1B,kCAwBYhd,EAAIoR,IAAJ,mBAAoB9K,GAAM5E,GAxBtC,QA2BIiG,EAAM,CACJxG,OAAQ,UACRsF,MAAO,kCACPgH,SAAU,MACV4D,SAAU,MAGZnE,EAAQN,GAERuD,IApCJ,uDAsCQ,gBAAeS,MAtCvB,wBAuCYU,EAAShD,GAAoB,EAAD,IAElC,UAAA+B,EAAQL,eAAR,SAAiBO,UAAUe,GAzCjC,2BA8CI3J,EAAM,CACJxG,OAAQ,QACRsF,MAAO,iCACPD,YACE,qEACFiH,SAAU,MACV4D,SAAU,MApDhB,0DAD8B,wDAyD9B,CAAC/K,EAAI4G,EAASiD,EAAQxI,IAGxB,OACE,oCACE,kBAAC4J,GAAA,EAAD,CAAOrB,OAAQA,EAAQhD,QAASA,GAC9B,kBAACqE,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,CACE3H,gBAAgB,UAChBE,SAAU,IACVQ,aAAa,MAEb,kBAACiH,GAAA,EAAD,oCACA,kBAACA,GAAA,EAAD,MAEA,kBAAC,KAAD,CAAM5B,IAAKU,EAASmB,SAAUlB,GAC5B,kBAACiB,GAAA,EAAD,CAAWE,cAAe,GACxB,kBAAClG,GAAA,EAAD,CAAMc,UAAU,UACd,kBAAC,GAAD,CAAOqF,YAAY,OAAO3O,KAAK,SAE/B,kBAAC,GAAD,CACE2O,YAAY,aACZyT,QAASF,EACTliB,KAAK,QACLG,KAAMkiB,QAKZ,kBAAC7T,GAAA,EAAD,KACE,kBAAC,KAAD,CACES,QAAQ,QACRtL,QAASwG,EACTnC,OAAQ,CAAEK,WAAY,WACtBhB,YAAa,GAJf,YASA,kBAAC,KAAD,CACEzE,KAAK,SACLiE,gBAAgB,UAChBmB,OAAQ,CACNnB,gBAAiB,YAJrB,gB,msECrJP,IAAM1E,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAyBPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MCwJFkgB,GA3LO,WAAO,IAAD,EACF/iB,mBAAuB,IADrB,mBACnB0hB,EADmB,KACbC,EADa,OAGwB3hB,qBAHxB,mBAGnBgjB,EAHmB,KAGAC,EAHA,KAKpBrjB,EAAUC,cALU,EAMIG,oBAAkB,GANtB,mBAMnB0Q,EANmB,KAMVC,EANU,KAQ1BpP,qBAAU,WACRoP,GAAW,GACXjT,EAAIgE,IAAI,YAAYzC,MAAK,SAAAR,GACvB,IAAMmZ,EAAyBnZ,EAASW,KAExCuiB,EAAQ/J,GACRjH,GAAW,QAEZ,IAEH,IAAMuS,EAAaliB,uBAAY,WAC7BtD,EAAIgE,IAAI,YAAYzC,MAAK,SAAAR,GACvB,IAAMmZ,EAAyBnZ,EAASW,KAExCuiB,EAAQ/J,QAET,IAEGuL,EAA+BniB,uBAAY,SAACgD,GAChDif,EAAqBjf,KACpB,IAEGof,EAAgCpiB,sBAAW,sBAAC,sBAAAC,EAAA,sDAChDgiB,OAAqBnW,GAD2B,2CAE/C,IAEGuW,EAAgB9R,mBACpB,kBACEmQ,EAAK5c,KAAI,SAAA+c,GAAG,MAAK,CACf7d,GAAI6d,EAAI7d,GACRvD,KAAMohB,EAAIphB,KACVia,MAAOmH,EAAInH,MAAMpB,eAAe,QAAS,CACvC3V,MAAO,WACP4V,SAAU,QAEZ0I,QAASJ,EAAII,QACbhY,OACE,kBAACyB,GAAA,EAAD,CACEE,aAAW,8BACXD,MAAM,+BAEN,kBAAC,KAAD,CACEvH,QAAS,kBAAM+e,EAA6BtB,EAAI7d,KAChDyE,OAAQ,CAAEK,WAAY,UAAWR,OAAQ,GACzCK,aAAc,CAAEL,OAAQ,GACxBQ,WAAW,WAEX,kBAAC,IAAD,cAKV,CAAC4Y,EAAMyB,IAGT,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAY9b,KAAK,gBACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,6CACA,+BAGF,yBAAKuC,UAAU,YACb,oCACA,wCACA,+CAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAAC,GAAD,CAAMH,OAAQ,CAAEX,GAAI,OAAQC,GAAI,SAC7B0b,EAAcve,KAAI,SAAA+c,GAAG,OACpB,yBAAK3X,UAAU,MAAMlF,IAAK6c,EAAI7d,IAC5B,8BAAO6d,EAAIphB,MACX,8BACG4Y,OAAOwI,EAAInH,OAAOpB,eAAe,QAAS,CACzC3V,MAAO,WACP4V,SAAU,SAGd,8BACE,yBAAKrP,UAAY2X,EAAII,QAAsB,UAAZ,YAC7BJ,EAAII,QAAsB,QAAZ,WAEjBJ,EAAI5X,aAOf,yBAAKC,UAAU,UACb,kBAAC,GAAD,CACE9F,QAAS,WACPxE,EAAQqL,KAAK,uBAFjB,8BASF,kBAACqY,GAAD,CACE1V,SAAUoV,EACVpY,QAASwY,EACTvV,OAAQqV,EACRlf,GAAIgf,O,+7CC1MP,IAAMpgB,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAYPkN,GAAYlN,IAAOC,IAAV,MAsBTmR,GAAiBpR,IAAOC,IAAV,MCiGZygB,GA1HU,WACvB,IAAMxV,EAAUnB,iBAAoB,MAC5BxH,EAAavB,IAAbuB,SAEFud,EAAc3hB,uBAClB,SAACsJ,GACCA,EAAMsY,iBACNzE,GAAe7T,KAEjB,IAGI0D,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,4BAAA6B,EAAA,6DAAekT,EAAf,EAAeA,MAAf,SAEI,UAAApG,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChCiV,YAAalV,OAAa+F,SAAS,sCACnCoP,aAAcnV,OAAa+F,SACzB,gDAPR,SAWUhG,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAZlB,cAeU6U,EAAsB,CAC1BjjB,KAAMrB,EAAKokB,YACX9I,MAAOtb,EAAKqkB,cAjBlB,SAoB2B/lB,EAAIsB,KAAK,WAAY0kB,GApBhD,OAsB4B,MAtB5B,OAsBiB7kB,SACXuG,EAAS,CACPjB,MAAO,kCACPd,KAAM,UACNa,YAAa,6CAGfiQ,KA7BN,uDAgCQ,gBAAe7F,MAhCvB,wBAiCYU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GAnCjC,2BAsCI5J,EAAS,CACPjB,MAAO,+CACPD,YACE,wEACFb,KAAM,UA1CZ,0DAD8B,wDA+C9B,CAAC+B,IAGH,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYiC,KAAK,0BACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,yDACA,+BAGF,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,yBAAK9D,UAAU,UACb,kBAAC,GAAD,CAAgBvG,MAAO,CAAE6D,SAAU,QAASD,MAAO,SACjD,yBAAK2C,UAAU,UACb,qDACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,cACHX,KAAK,cACL5C,KAAK,cACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE6D,SAAU,QAASD,MAAO,SACjD,yBAAK2C,UAAU,UACb,sDACA,oCAEF,kBAAC,GAAD,CACE2Y,QAASF,EACTzY,UAAU,QACVlG,GAAG,eACHX,KAAK,eACL5C,KAAK,eACLkD,MAAO,CAAE4D,MAAO,QAChB3G,KAAMkiB,QAIZ,kBAAC,GAAD,CAAQzf,KAAK,UAAb,iB,isDCrIH,IAAMT,GAAYC,IAAOC,IAAV,MAUTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAcP8gB,IAPY9gB,IAAOC,IAAV,MAOED,IAAOC,IAAV,KAiCRoG,aAAM,GAAK,aAqBXF,GAAUnG,IAAOC,IAAV,MCsGL8gB,GA/JU,WAAO,IACtBzjB,EAAS2B,IAAT3B,KACAiF,EAAavB,IAAbuB,SACFxF,EAAUC,cACVkO,EAAUnB,iBAAoB,MAJP,EAMG5M,mBAAsB,IANzB,mBAMtB4X,EANsB,KAMZC,EANY,KAQ7BtW,qBAAU,WACR,IAAIyW,EAA2B,GAC3B6L,EAAgC,GAEpCnmB,EAAIgE,IAAI,YAAYzC,MAAK,SAAAR,GACvBolB,EAAmBplB,EAASW,QAG9B1B,EAAIgE,IAAI,4BAA4BzC,MAAK,SAAAR,GACvC,IAEMqlB,EAFkBrlB,EAASW,KAEU0F,KACzC,SAACif,GAAD,OACEA,EAAeC,cAGnBhM,EAAc6L,EAAiBpe,QAC7B,SAAA2S,GAAO,OAAK0L,EAAmBhS,SAASsG,EAAQpU,OAGlD6T,EAAYG,QAEb,CAACpY,IAEJ,IAAM+iB,EAAc3hB,uBAClB,SAACsJ,GACCA,EAAMsY,iBACNzE,GAAe7T,KAEjB,IAGI0D,EAAehN,sBAAW,uCAC9B,WAAO5B,GAAP,qBAAA6B,EAAA,kEAEUwb,EAAMpE,OAAO4L,KAAK7kB,GAElB4Y,EAAcyE,EAAI3X,KAAI,SAAAd,GAAE,MAAK,CACjC6X,UAAW9O,OAAO/I,GAClB0W,MAAOwJ,WAAW9kB,EAAK4E,QAInBmgB,EAAanM,EAAYvS,QAAO,SAAA5D,GAAK,OAAIuiB,MAAMviB,EAAM6Y,aAErD2J,EAAyBF,EAAWrf,KAAI,SAAAjD,GAAK,OAAIA,EAAMga,cAElCnN,OAAS,GAdxC,uBAeMtJ,EAAS,CACPjB,MAAM,GAAD,OAAKkgB,EAAuB3V,OAA5B,kBACLrL,KAAM,QACNa,YAAa,wCAlBrB,2CAwB2BxG,EAAIsB,KAAK,mBAAoB,CAClDmS,UAAS,OAAEhR,QAAF,IAAEA,OAAF,EAAEA,EAAMkf,QAAQC,WACzB1H,SAAUI,IA1BhB,QA6B4B,MA7B5B,OA6BiBnZ,SACXuG,EAAS,CACPjB,MAAO,UACPd,KAAM,UACNa,YAAa,4DAEftE,EAAQqL,KAAK,aAnCnB,kDAsCI7F,EAAS,CACPjB,MAAO,8BACPd,KAAM,QACNa,YAAa,sCAzCnB,0DAD8B,sDA8C9B,CAACkB,EAAUxF,EAASO,IAGtB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM4K,eAAa,IACnB,kBAAC,GAAD,CAAY1D,KAAK,oEACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACVhB,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,KAAD,CAAM0F,IAAKU,EAASpK,MAAO,CAAE4D,MAAO,QAAU2H,SAAUlB,GACtD,kBAACoU,GAAA,EAAD,CACE7a,MAAM,OACNiB,UAAW,EACXhB,SAAS,OACT8c,oBAAqB,CACnB7c,GAAI,iBACJnB,GAAI,iBACJC,GAAI,iBACJmB,GAAI,iBACJC,GAAI,kBAEN0a,IAAK,EACL7W,eAAe,iBAEdoM,EAAS9S,KAAI,SAAAsT,GAAO,OACnB,kBAACuL,GAAD,CAAU3e,IAAKoT,EAAQpU,IACrB,yBAAKkG,UAAU,mBACb,0BAAMlG,GAAG,gBAAgBoU,EAAQ3X,KAAK8jB,gBAExC,6BACA,0BAAMvgB,GAAG,oBAAT,wBACqB,IAClBqV,OAAOjB,EAAQsC,OAAOpB,eAAe,QAAS,CAC7C3V,MAAO,WACP4V,SAAU,SAGd,6BACA,yBAAKrP,UAAU,UACb,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAIoU,EAAQpU,GAAGyV,WACfhZ,KAAM2X,EAAQpU,GAAGyV,WACjBrK,YAAY,WACZyT,QAASF,EACThf,MAAO,CAAE4D,MAAO,QAChB3G,KAAMkiB,YAMhB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQzf,KAAK,UAAb,e,m9CC5KL,IAAMT,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAYPkN,GAAYlN,IAAOC,IAAV,MAsBTmR,GAAiBpR,IAAOC,IAAV,MCmJZ0hB,GArKS,WACtB,IAAM5kB,EAAUC,cACVkO,EAAUnB,iBAAoB,MAC5BxH,EAAavB,IAAbuB,SAHoB,EAKEpF,mBAA0B,MAL5B,mBAKrB8N,EALqB,KAKZ2W,EALY,KAO5BljB,qBAAU,WACR,IAAM4a,EAAQvc,EAAQE,SAAS4kB,OAEzBC,EAAcC,KAAYtkB,MAAM6b,EAAO,CAAE0I,cAAc,IAExDF,EAAY7W,SAA0C,kBAAxB6W,EAAY7W,QAK/CpQ,EACGgE,IADH,oBACoBijB,EAAY7W,UAC7B7O,MAAK,SAAAR,GACJ,IAAMqmB,EAAarmB,EAASW,KAE5BqlB,EAAW,CAAEzgB,GAAI8gB,EAAW9gB,GAAIvD,KAAMqkB,EAAWrkB,UAElDkB,OAAM,WACLyD,EAAS,CACPjB,MAAO,wCACPd,KAAM,UAGRzD,EAAQqL,KAAK,gBAjBfrL,EAAQqL,KAAK,eAmBd,CAACrL,EAASwF,IAEb,IAAM4I,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,4BAAA6B,EAAA,6DAA0BkT,EAA1B,EAA0BA,MAA1B,SAEI,UAAApG,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChCwW,SAAUzW,OAAa+F,SAAS,kCAChC2Q,eAAgB1W,OACb+F,SAAS,2CACT3F,OAAO,EAAG,6DACbuW,cAAe3W,OACZ+F,SAAS,sCACT5F,IAAI,EAAG,iDACPD,IAAI,GAAI,oDAZjB,SAeUH,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAhBlB,cAmBUqW,EAAoB,CACxBzkB,KAAMrB,EAAK2lB,SACX7W,UAAW9O,EAAK6lB,cAChB9T,UAAS,OAAErD,QAAF,IAAEA,OAAF,EAAEA,EAAS9J,GACpBoK,kBAAiB,OAAEhP,QAAF,IAAEA,OAAF,EAAEA,EAAM4lB,gBAvB/B,SA0B2BtnB,EAAIsB,KAAK,QAASkmB,GA1B7C,OA4B4B,MA5B5B,OA4BiBrmB,SACXuG,EAAS,CACPjB,MAAO,UACPD,YAAY,0CAAD,cAAyC4J,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASrN,KAAlD,iBACX4C,KAAM,YAGR8Q,KAnCN,uDAsCQ,gBAAe7F,MAtCvB,wBAuCYU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,GAzCjC,2BA4CI5J,EAAS,CACPjB,MAAO,+CACPD,YACE,qEACFb,KAAM,UAhDZ,0DAD8B,wDAqD9B,CAAC+B,EAAU0I,IAGb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEzG,KAAI,wDAAyCyG,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASrN,QAExD,kBAAC,GAAD,CACEoH,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,sDACA,+BAGF,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,yBAAK9D,UAAU,UACb,kBAAC,GAAD,CAAgBvG,MAAO,CAAE6D,SAAU,QAASD,MAAO,SACjD,yBAAK2C,UAAU,UACb,kDACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE6D,SAAU,QAASD,MAAO,SACjD,yBAAK2C,UAAU,UACb,sDACA,oCAGF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,gBACHvD,KAAK,gBACL6O,OAAO,gBACPC,KAAK,OAIT,kBAAC,GAAD,CAAgB5L,MAAO,CAAE6D,SAAU,QAASD,MAAO,SACjD,yBAAK2C,UAAU,UACb,2DACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,iBACHX,KAAK,iBACL5C,KAAK,iBACLkD,MAAO,CAAE4D,MAAO,YAItB,kBAAC,GAAD,CAAQlE,KAAK,UAAb,iB,y0HCvLH,IAAMT,GAAYC,IAAOC,IAAV,MAqGTgN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAsBPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MAiBJkG,GAAMlG,IAAOC,IAAV,KA+BHoG,aAAM,GAAK,SC0FTic,GApQa,WAAO,IACzB/f,EAAavB,IAAbuB,SACF2I,EAAUnB,iBAAoB,MAFJ,EAIc5M,mBAA4B,IAJ1C,mBAIzBolB,EAJyB,KAIRC,EAJQ,OAKMrlB,oBAAkB,GALxB,mBAKzBslB,EALyB,KAKZC,EALY,OAS5BvlB,mBAA0B,IATE,mBAO9BwlB,EAP8B,KAQ9BC,EAR8B,OAUFzlB,oBAAkB,GAVhB,mBAUzB0Q,EAVyB,KAUhBC,EAVgB,KAY1B+U,EAAsB1kB,uBAAY,WACtC2P,GAAW,GAEXjT,EAAIgE,IAAI,4BAA4BzC,MAAK,SAAAR,GAAa,IAG9CmZ,EAFWnZ,EAATW,KAEiC0F,KACvC,SAACif,GAGC,MAAO,CACL/f,GAH6B+f,EAAvB/f,GAIN0W,MAJ6BqJ,EAAnBrJ,MAKVtC,QAL6B2L,EAAZ3L,YAUvBiN,EAAmBzN,GACnBjH,GAAW,QAEZ,IAEHpP,qBAAU,WACRmkB,MACC,CAACA,IAEJ,IAAMC,EAAkB3kB,uBAAY,SAAC+iB,GACnC0B,EAA0B1B,GAE1BwB,GAAe,KACd,IAEG5C,EAAc3hB,uBAClB,SAACsJ,GACCA,EAAMsY,iBACNzE,GAAe7T,KAEjB,IAGIsb,EAAsB5kB,uBAAY,WACtCukB,GAAe,GACfE,EAA0B,MACzB,IAEGzX,EAAehN,sBAAW,uCAC9B,WAAM5B,GAAN,iBAAA6B,EAAA,kEAESoY,OAAOja,EAAKymB,UAFrB,uBAGM,UAAA9X,EAAQL,eAAR,SAAiBO,UAAU,CACzB4X,SAAU,qCAJlB,iCASUC,EAAe,CACnBC,iBAAgB,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAwBxhB,GAC1C0W,MAAOrB,OAAOja,EAAKymB,WAXzB,SAc2BnoB,EAAIoR,IAAI,mBAAoB,CAACgX,IAdxD,OAgB4B,MAhB5B,OAgBiBjnB,SACXuG,EAAS,CACPjB,MAAO,UACPd,KAAM,UACNa,YAAa,gCAEfqhB,GAAe,GACfG,KAvBN,kDA0BItgB,EAAS,CACPjB,MAAO,QACPd,KAAM,QACNa,YAAa,yDA7BnB,0DAD8B,sDAkC9B,CAACkB,EAAUogB,EAAwBE,IAGrC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYre,KAAK,8BACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNC,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,2CACA,+BAEF,yBAAKuC,UAAU,YACb,4CACA,mDACA,sDAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAAC,GAAD,CAAMH,OAAQ,CAAEX,GAAI,OAAQC,GAAI,SAAhC,OACGyd,QADH,IACGA,OADH,EACGA,EAAiBtgB,KAAI,SAAAif,GAAc,OAClC,kBAAC,GAAD,CAAK/e,IAAK+e,EAAe/f,IACvB,8BAAO+f,EAAe3L,QAAQ3X,MAC9B,8BACG4Y,OAAO0K,EAAe3L,QAAQsC,OAAOpB,eACpC,QACA,CACE3V,MAAO,WACP4V,SAAU,SAIhB,8BACGF,OAAO0K,EAAerJ,OAAOpB,eAAe,QAAS,CACpD3V,MAAO,WACP4V,SAAU,SAGd,+BACA,kBAAC,IAAD,CACE/V,KAAM,GACNY,QAAS,WACPuhB,EAAgB5B,cAUf,IAAhBuB,GACC,yBAAKpb,UAAU,0BACb,iCACE,yBAAKA,UAAU,UACb,4DACA,0BAAMA,UAAU,gBAAhB,OACGsb,QADH,IACGA,OADH,EACGA,EAAwBpN,QAAQ3X,MAGnC,yBAAKyJ,UAAU,+BACb,sDACA,oDAGF,yBAAKA,UAAU,wBACb,8BACGmP,OAAM,OAACmM,QAAD,IAACA,OAAD,EAACA,EAAwB9K,OAAOpB,eACrC,QACA,CACE3V,MAAO,WACP4V,SAAU,SAIhB,8BACGF,OAAM,OAACmM,QAAD,IAACA,OAAD,EAACA,EAAwBpN,QAAQsC,OAAOpB,eAC7C,QACA,CACE3V,MAAO,WACP4V,SAAU,WAMpB,kBAAC,KAAD,CAAMlM,IAAKU,EAASmB,SAAUlB,GAC5B,yBAAK9D,UAAU,SACb,0CACA,kBAAC,GAAD,CACE2Y,QAASF,EACTliB,KAAK,WACLG,KAAMkiB,OAIV,yBAAK5Y,UAAU,WACb,kBAAC,GAAD,CAAQ/B,YAAU,EAAC/D,QAASwhB,GAA5B,YAGA,kBAAC,GAAD,CAAQviB,KAAK,UAAb,gBCxFD2iB,GApJkD,SAAC,GAK3D,IAAD,EAJJpY,EAII,EAJJA,OACAhD,EAGI,EAHJA,QACAiD,EAEI,EAFJA,OACA1N,EACI,EADJA,KAEM4N,EAAUnB,iBAAoB,MAC9BvH,EAAQxB,eAERmK,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAiBkL,GAAxB,2BAAArJ,EAAA,kEAEI,UAAA8M,EAAQL,eAAR,SAAiBO,UAAU,IAEtB7O,EAAKqB,MAASrB,EAAK8O,WAAc9O,EAAKoB,KAJ/C,uBAKM,UAAAuN,EAAQL,eAAR,SAAiBO,UAAU,CACzBxN,KAAM,6CACNyN,UAAW,6CACX1N,KAAM,+CARd,iCAcU6N,EAASC,OAAaC,MAAM,CAChC9N,KAAM6N,OACNJ,UAAW9O,EAAK8O,UACZI,OACGE,IACC,GACA,mEAEDC,IAAI,EAAG,kEACVH,OACJ9N,KAAM8N,SAxBZ,SA2BUD,EAAOO,SAASxP,EAAM,CAAEyP,YAAY,IA3B9C,cA6BQgB,EAAa,GAEbzQ,EAAKqB,OACPoP,EAAU,2BAAQA,GAAR,IAAoBpP,KAAMrB,EAAKqB,QAGvCrB,EAAK8O,YACP2B,EAAU,2BAAQA,GAAR,IAAoB3B,UAAW9O,EAAK8O,aAG5C9O,EAAKoB,OACPqP,EAAU,2BAAQA,GAAR,IAAoBrP,KAAMpB,EAAKoB,QAxC/C,UA2CU9C,EAAIoR,IAAJ,uBAAiB3O,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAMA,YAAvB,aAAiB,EAAY6D,IAAM6L,GA3C7C,QA6CIxK,EAAM,CACJxG,OAAQ,UACRsF,MAAO,mDACPgH,SAAU,MACV4D,SAAU,MAGZnE,EAAQN,GAERuD,IAtDJ,uDAwDQ,gBAAeS,MAxDvB,wBAyDYU,EAAShD,GAAoB,EAAD,IAElC,UAAA+B,EAAQL,eAAR,SAAiBO,UAAUe,GA3DjC,2BAgEI3J,EAAM,CACJxG,OAAQ,QACRsF,MAAO,kDACPD,YACE,+EACFiH,SAAU,MACV4D,SAAU,MAtEhB,0DAD8B,wDA2E9B,CAAC5O,EAAMyK,EAASiD,EAAQxI,IAG1B,OACE,oCACE,kBAAC4J,GAAA,EAAD,CAAOrB,OAAQA,EAAQhD,QAASA,GAC9B,kBAACqE,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,CACE3H,gBAAgB,UAChBE,SAAU,IACVQ,aAAa,MAEb,kBAACiH,GAAA,EAAD,uCAAkC9O,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMM,OACxC,kBAACwO,GAAA,EAAD,MAEA,kBAAC,KAAD,CAAM5B,IAAKU,EAASmB,SAAUlB,GAC5B,kBAACiB,GAAA,EAAD,CAAWE,cAAe,GACxB,kBAAClG,GAAA,EAAD,CAAMc,UAAU,UACd,kBAAC,GAAD,CACE2C,aAAY,OAAEvM,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KACpB2O,YAAY,OACZ3O,KAAK,SAGP,kBAAC,GAAD,CACEyJ,UAAU,QACVlG,GAAG,YACHoL,YAAY,UACZ3O,KAAK,YACL6O,OAAO,gBACPC,KAAK,IACL7C,aAAY,OAAEvM,QAAF,IAAEA,GAAF,UAAEA,EAAMA,YAAR,aAAE,EAAY+N,UAC1BtN,KAAM4O,QAKZ,kBAACP,GAAA,EAAD,KACE,kBAAC,KAAD,CACES,QAAQ,QACRtL,QAASwG,EACTnC,OAAQ,CAAEK,WAAY,WACtBhB,YAAa,GAJf,YASA,kBAAC,KAAD,CACEzE,KAAK,SACLiE,gBAAgB,UAChBmB,OAAQ,CACNnB,gBAAiB,YAJrB,gB,o+HCzKP,IAAM1E,GAAYC,YAAOsE,KAAPtE,CAAH,MAUTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAqBPkN,GAAYlN,IAAOC,IAAV,MAsBTkN,GAAOnN,YAAOsE,KAAPtE,CAAH,MA2DJkG,GAAMlG,IAAOC,IAAV,MC+KDmjB,GAjPM,WAAO,IAAD,EACSjmB,mBAAuB,IADhC,mBAClBkQ,EADkB,KACPC,EADO,OAEsBnQ,mBAAmB,IAFzC,mBAElBoQ,EAFkB,KAED8V,EAFC,OAGKlmB,oBAAkB,GAHvB,mBAGlB0Q,EAHkB,KAGTC,EAHS,OAKe3Q,wBACtC8M,GANuB,mBAKlBqZ,EALkB,KAKJC,EALI,KASnBC,EAAsBrlB,uBAAY,WACtC2P,GAAW,GAEXjT,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxB,IAAMmS,EAA6BnS,EAASW,KAE5C+Q,EAAaS,GACbD,GAAW,QAEZ,IAEHpP,qBAAU,WACRoP,GAAW,GAEXjT,EAAIgE,IAAI,aAAazC,MAAK,SAAAR,GACxB,IAAMmS,EAA6BnS,EAASW,KAE5C+Q,EAAaS,GACbD,GAAW,QAEZ,IAEH,IAAM2V,EAAoBtlB,uBACxB,SAACgD,GACCkiB,EAAoB,GAAD,mBAAK9V,GAAL,CAAsBpM,OAE3C,CAACoM,IAGGmW,EAAqBvlB,uBACzB,SAACgD,GACC,IAAMwiB,EAAmBpW,EAAgB3K,QAAO,SAAAwa,GAAM,OAAIA,IAAWjc,KAErEkiB,EAAoBM,KAEtB,CAACpW,IAGGqW,EAA2BzlB,uBAAY,SAACb,GAC5CimB,EAAgBjmB,KACf,IAEGumB,EAA6B1lB,uBAAY,WAC7ColB,OAAgBtZ,KACf,IAEG6Z,EAAiDpV,mBACrD,kBACErB,EAAUpL,KAAI,SAAAgJ,GACZ,IAAM8Y,EAA0B,GA8BhC,OA5BA9Y,EAAQ+Y,SAASza,SAAQ,SAAAiT,GACvBuH,EAAM3b,KAAK,CACTjH,GAAIqb,EAAQrb,GACZvD,KAAM4e,EAAQ5e,KACdyN,UAAWmR,EAAQlf,KAAK+N,UACxB1N,KAAM6e,EAAQlf,KAAKK,KACnBsmB,cACE,kBAACpb,GAAA,EAAD,CACEE,aAAW,8BACXD,MAAM,+BAEN,kBAAC,KAAD,CACEvH,QAAS,kBAAMqiB,EAAyBpH,IACxC5W,OAAQ,CACNnB,gBAAiB,UACjBzG,MAAO,OACPyH,OAAQ,GAEVK,aAAc,CAAEL,OAAQ,GACxBQ,WAAW,WAEX,kBAAC,IAAD,aAOH,CACL9E,GAAI8J,EAAQ9J,GACZvD,KAAMqN,EAAQrN,KACdyN,UAAWJ,EAAQI,UACnB0Y,cAGN,CAAC1W,EAAWuW,IAGd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAYpf,KAAK,sCACjB,kBAAC,GAAD,CACEQ,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACVhB,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,GAAD,KACE,oDACA,+BAEF,yBAAKuC,UAAU,YACb,iDACA,0CAGDwG,EACC,kBAACgB,GAAA,EAAD,CAAOlJ,UAAU,QACf,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,QAEZ,kBAACmJ,GAAA,EAAD,CACEtJ,OAAO,OACPL,aAAa,KACb4J,WAAW,UACXC,SAAS,UACTrJ,UAAU,SAId,oCACE,kBAAC,GAAD,CAAMH,OAAQ,CAAEX,GAAI,OAAQC,GAAI,SAC7Bgf,EAA0B7hB,KAAI,SAAAgJ,GAAO,OACpC,kBAAC,GAAD,CAAK9I,IAAK8I,EAAQ9J,IAChB,yBACEkG,UAAU,SACVvG,MACEyM,EAAgB0B,SAAShE,EAAQ9J,IAC7B,CAAEgE,aAAc,iBAChB,CAAEA,aAAc,KAGtB,8BAAO8F,EAAQrN,MACf,8BAAOqN,EAAQI,WACf,kBAAC,IAAD,CACEhE,UAAU,uBACVF,GAAE,kCAA6B8D,EAAQ9J,KAEvC,kBAAC,KAAD,CAAWR,KAAM,KAJnB,uDAOC4M,EAAgB0B,SAAShE,EAAQ9J,IAChC,kBAAC,KAAD,CACEI,QAAS,kBAAMmiB,EAAmBzY,EAAQ9J,KAC1CL,MAAO,CAAEkF,OAAQ,WACjBrF,KAAM,KAGR,kBAAC,KAAD,CACEY,QAAS,kBAAMkiB,EAAkBxY,EAAQ9J,KACzCL,MAAO,CAAEkF,OAAQ,WACjBrF,KAAM,MAKZ,yBACE0G,UAAU,WACV+H,QAAS7B,EAAgB0B,SAAShE,EAAQ9J,KAE1C,kBAAC,GAAD,CAAWkG,UAAU,aACnB,qEACA,+BAGF,yBAAKA,UAAU,SACb,sCACA,0CACA,wCAGD4D,EAAQ8Y,MAAM9hB,KAAI,SAAAkW,GAAM,OACvB,yBAAK9Q,UAAU,SAASlF,IAAKgW,EAAOhX,IAClC,8BAAOgX,EAAOva,MACd,8BAAOua,EAAO9M,WACd,8BC5QT,SAA+B1N,GAC5C,OAAQA,GACN,IAAK,SACH,MAAO,WACT,IAAK,UACH,MAAO,UACT,IAAK,QACH,MAAO,gBACT,QACE,MAAO,cDmQkBumB,CAAsB/L,EAAOxa,OACnCwa,EAAO8L,0BAW1B,kBAAC,GAAD,CACElZ,SAAUuY,EACVvb,QAAS8b,EACT7Y,OAAQwY,EACRlmB,KAAMgmB,M,ymEEzRP,IAAMvjB,GAAYC,YAAOsE,KAAPtE,CAAH,MASTiN,GAAUjN,YAAOsE,KAAPtE,CAAH,MAiBPkN,GAAYlN,IAAOC,IAAV,MAsBTmR,GAAiBpR,IAAOC,IAAV,MAuCdwb,GAASzb,IAAOC,IAAV,MC+UJkkB,GA7WO,WACpB,IAAMpnB,EAAUC,cACVkO,EAAUnB,iBAAoB,MAC5BxH,EAAavB,IAAbuB,SAHkB,EAKIpF,mBAAmB,IALvB,mBAKnB8N,EALmB,KAKV2W,EALU,OAMIzkB,oBAAS,GANb,mBAMnB0Q,EANmB,KAMVC,EANU,OAOF3Q,mBAAiB,IAPf,mBAOnBQ,EAPmB,KAObymB,EAPa,OAQwBjnB,mBAEhD,IAVwB,mBAQnBkf,EARmB,KAQAC,EARA,KAiB1B5d,qBAAU,WACR,IAAM4a,EAAQvc,EAAQE,SAAS4kB,OAEzBC,EAAcC,KAAYtkB,MAAM6b,EAAO,CAAE0I,cAAc,IAE1DF,EAAY7W,SACkB,kBAAxB6W,EAAY7W,SAClBoZ,iBAAOvC,EAAY7W,SAMtBpQ,EACGgE,IADH,oBACoBijB,EAAY7W,UAC7B7O,MAAK,SAAAR,GACJ,IAAMqmB,EAAuBrmB,EAASW,KAEhCmgB,EAGDuF,EAAWrT,QAAQ3M,KAAI,SAAA8K,GAAI,MAAK,CACnC/N,MAAO+N,EAAK5L,GACZ2H,MAAOiE,EAAKnP,SAGd0e,EAAqBI,GACrBkF,EAAW,CACTzgB,GAAI8gB,EAAW9gB,GACfvD,KAAMqkB,EAAWrkB,KACjBgR,QAASqT,EAAWrT,aAGvB9P,OAAM,WACL/B,EAAQqL,KAAK,gBAzBfrL,EAAQqL,KAAK,eA2Bd,CAACrL,IAEJ,IAAMunB,EAAyBnmB,uBAC7B,SAAA6kB,GACEoB,EAAQpB,EAASpI,OAAO5b,SAE1B,CAAColB,IAGGjZ,EAAehN,sBAAW,uCAC9B,WAAO5B,EAAP,gCAAA6B,EAAA,6DAA0BkT,EAA1B,EAA0BA,MACxBxD,GAAW,GADb,SAII,UAAA5C,EAAQL,eAAR,SAAiBO,UAAU,IAErBI,EAASC,OAAaC,MAAM,CAChC9N,KAAM6N,OAAa+F,SAAS,qCAC5BnG,UAAWI,OACRG,IAAI,EAAG,iDACPD,IAAI,GAAI,kDACXtN,SAAUoN,OAAa+F,SAAS,gCAChCyN,MAAOxT,OAAa+F,SAAS,yBAC7B7T,KAAM8N,OAAa+F,SAAS,sCAC5BzE,KACW,WAATpP,EACI8N,OAAa+F,SAAS,wCACtB/F,OACNnN,SAAUmN,OAAa+F,SAAS,wBAChCU,gBAAiBzG,OAAa+F,SAC5B,+CApBR,SAwBUhG,EAAOO,SAASxP,EAAM,CAC1ByP,YAAY,IAzBlB,UA4BQzP,EAAK+B,WAAa/B,EAAK2V,gBA5B/B,wBA6BM,UAAAhH,EAAQL,eAAR,SAAiBO,UAAU,CACzB9M,SAAU,0BACV4T,gBAAiB,4BA/BzB,8BAoCiB,WAATvU,EApCR,wBAqCY4mB,EAAsC,CAC1ClmB,SAAU9B,EAAK8B,SACf4gB,MAAO1iB,EAAK0iB,MACZ3gB,SAAU/B,EAAK+B,SACfX,KAAMpB,EAAKoB,KACXC,KAAMrB,EAAKqB,KACXyN,UAAW9O,EAAK8O,UAChBiD,UAAS,OAAErD,QAAF,IAAEA,OAAF,EAAEA,EAAS9J,GACpBic,OAAQlT,OAAO3N,EAAKwQ,MACpBqS,SAAS,GA9CjB,UAiD6BvkB,EAAIsB,KACzB,eACAooB,GAnDR,eAsD8B,MAtD9B,OAsDmBvoB,SACXuG,EAAS,CACPjB,MAAO,kCACPd,KAAM,UACNa,YAAY,4BAAD,OAA2B9E,EAAK8B,SAAhC,qCAGb+lB,EAAQ,IAER9S,KA/DR,kCAoEUkT,EAAuC,CAC3CnmB,SAAU9B,EAAK8B,SACf4gB,MAAO1iB,EAAK0iB,MACZ3gB,SAAU/B,EAAK+B,SACfX,KAAMpB,EAAKoB,KACXC,KAAMrB,EAAKqB,KACXyN,UAAW9O,EAAK8O,UAChBiD,UAAWrD,EAAQ9J,GACnBie,SAAS,GA5Ef,UA+E2BvkB,EAAIsB,KACzB,eACAqoB,GAjFN,QAoF4B,MApF5B,OAoFiBxoB,SACXuG,EAAS,CACPjB,MAAO,kCACPd,KAAM,UACNa,YAAY,sBAAD,OAAqB9E,EAAK8B,SAA1B,qCAGbiT,KA3FN,kDA8FQ,gBAAe7F,MACXU,EAAS0F,GAAqB,EAAD,IAEnC,UAAA3G,EAAQL,eAAR,SAAiBO,UAAUe,IAE3B5J,EAAS,CACPjB,MAAO,8CACPD,YACE,wEACFb,KAAM,UAvGd,yBA2GIsN,GAAW,GA3Gf,6EAD8B,wDA+G9B,CAACvL,EAAU0I,EAAStN,IAGtB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACE6G,KAAI,4DAAiDyG,EAAQrN,QAE/D,kBAAC,GAAD,CACEoH,WAAW,OACXC,YAAY,OACZP,MAAM,OACNiB,UAAU,OACVhB,SAAU,CACRC,GAAI,OACJnB,GAAI,OACJC,GAAI,OACJmB,GAAI,OACJC,GAAI,SAGN,kBAAC,KAAD,CAAM0F,IAAKU,EAASmB,SAAUlB,GAC5B,kBAAC,GAAD,KACE,oDACA,+BAGF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgBrK,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,uCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,OACHX,KAAK,OACL5C,KAAK,OACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,2CACA,oCAGF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,YACHvD,KAAK,YACL6O,OAAO,gBACPC,KAAK,OAIT,yBAAKrF,UAAU,kBAAkBvG,MAAO,CAAE4D,MAAO,QAC/C,yBAAK2C,UAAU,UACb,wCACA,oCAEF,kBAAC,GAAD,CACE7B,OAAO,OACPf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,OACLmW,SAAUuQ,EACV/X,YAAY,kCACZkH,eAAgB,CACd9N,UAAW,OACXV,YAAa,EACbP,MAAO,OACPc,OAAQ,OACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YA9OP,CACxB,CAAEzF,MAAO,SAAU8J,MAAO,YAC1B,CAAE9J,MAAO,UAAW8J,MAAO,YA+OI7G,KAAI,SAAAuc,GAAG,OACxB,4BAAQrc,IAAKqc,EAAIxf,MAAOA,MAAOwf,EAAIxf,OAChCwf,EAAI1V,YAMH,WAATnL,GACC,yBAAK0J,UAAU,mBACb,yBAAKA,UAAU,UACb,sDACA,oCAEF,kBAAC,GAAD,CACE7B,OAAO,OACPf,gBAAgB,UAChBzG,MAAM,QACNJ,KAAK,OACL2O,YAAY,kCACZkH,eAAgB,CACd9N,UAAW,OACXV,YAAa,EACbP,MAAO,OACPc,OAAQ,OACRC,OAAQ,YACRqQ,YAAa,UACbrR,gBAAiB,YAGlB4X,EAAkBpa,KAAI,SAAAuc,GAAG,OACxB,4BAAQrc,IAAKqc,EAAIxf,MAAOA,MAAOwf,EAAIxf,OAChCwf,EAAI1V,aAQjB,kBAAC,GAAD,KACE,gDACA,+BAGF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgBhI,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,gDACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,yCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,QACHX,KAAK,QACL5C,KAAK,QACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,wCACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,WACHX,KAAK,WACL5C,KAAK,WACLkD,MAAO,CAAE4D,MAAO,WAIpB,kBAAC,GAAD,CAAgB5D,MAAO,CAAE4D,MAAO,UAC9B,yBAAK2C,UAAU,UACb,kDACA,oCAEF,kBAAC,GAAD,CACEA,UAAU,QACVlG,GAAG,kBACHX,KAAK,WACL5C,KAAK,kBACLkD,MAAO,CAAE4D,MAAO,YAKtB,kBAAC,GAAD,CAAQsE,WAAY6E,EAASrN,KAAK,UAAlC,cC1XKikB,GAvB2B,SAAC,GAIpC,IAAD,IAHJC,mBAGI,MAHU,CAAC,UAAW,SAAU,SAGhC,EAFOC,EAEP,EAFJC,UACGrf,EACC,4CACIjI,EAAS2B,IAAT3B,KAER,OACE,kBAAC,IAAD,iBACMiI,EADN,CAEEsf,OAAQ,kBACLvnB,EAEGonB,EAAYzV,SAAS3R,EAAKK,MAC5B,kBAACgnB,EAAD,MAEA,kBAAC,IAAD,CAAUxd,GAAG,cAJb,kBAACwd,EAAD,WCgBKG,GA3BsB,SAAC,GAK/B,IAJLJ,EAII,EAJJA,YAII,IAHJK,iBAGI,SAFOJ,EAEP,EAFJC,UACGrf,EACC,wDACIjI,EAAS2B,IAAT3B,KAER,OACE,kBAAC,IAAD,iBACMiI,EADN,CAEEsf,OAAQ,gBAAG5nB,EAAH,EAAGA,SAAH,OACN8nB,MAAgBznB,EACd,kBAAC,GAAD,CAAYonB,YAAaA,EAAaE,UAAWD,IAEjD,kBAAC,IAAD,CACExd,GAAI,CACFxI,SAAUomB,EAAY,IAAM,WAC5BpiB,MAAO,CAAEf,KAAM3E,WCiFd+nB,GA3FU,kBACvB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAOxb,KAAK,IAAIyb,OAAK,EAACL,UAAW7R,KACjC,kBAAC,GAAD,CAAOvJ,KAAK,eAAeob,UAAW7S,GAAYgT,WAAS,IAC3D,kBAAC,GAAD,CAAOvb,KAAK,YAAYob,UAAWhJ,GAAUmJ,WAAS,IACtD,kBAAC,GAAD,CAAOvb,KAAK,wBAAwBob,UAAWhF,GAASmF,WAAS,IACjE,kBAAC,GAAD,CACEvb,KAAK,2BACLob,UAAWM,GACXH,WAAS,EACTL,YAAa,CAAC,WAEhB,kBAAC,GAAD,CACElb,KAAK,qBACLob,UAAWlE,GACXqE,WAAS,EACTL,YAAa,CAAC,WAEhB,kBAAC,GAAD,CACElb,KAAK,cACLob,UAAWO,GACXJ,WAAS,EACTL,YAAa,CAAC,aAEhB,kBAAC,GAAD,CACElb,KAAK,kBACLob,UAAW9I,GACXiJ,WAAS,EACTL,YAAa,CAAC,UAAW,YAE3B,kBAAC,GAAD,CACElb,KAAK,WACLob,UAAWhG,GACXmG,WAAS,EACTL,YAAa,CAAC,aAEhB,kBAAC,GAAD,CACElb,KAAK,oBACLob,UAAWQ,GACXL,WAAS,EACTL,YAAa,CAAC,aAEhB,kBAAC,GAAD,CACElb,KAAK,SACLob,UAAW/N,GACXkO,WAAS,EACTL,YAAa,CAAC,UAAW,SAAU,WAErC,kBAAC,GAAD,CACElb,KAAK,UACLob,UAAWtC,GACXyC,WAAS,EACTL,YAAa,CAAC,aAEhB,kBAAC,GAAD,CACElb,KAAK,aACLob,UAAWxX,GACX2X,WAAS,EACTL,YAAa,CAAC,WAEhB,kBAAC,GAAD,CACElb,KAAK,sBACLob,UAAWvT,GACX0T,WAAS,EACTL,YAAa,CAAC,WAEhB,kBAAC,GAAD,CACElb,KAAK,oBACLob,UAAWjD,GACXoD,WAAS,EACTL,YAAa,CAAC,WAEhB,kBAAC,GAAD,CAAOlb,KAAK,SAASob,UAAWS,GAAON,WAAS,EAACL,YAAa,CAAC,WAC/D,kBAAC,GAAD,CACElb,KAAK,kBACLob,UAAWT,GACXY,WAAS,EACTL,YAAa,CAAC,WAGhB,kBAAC,GAAD,CACElb,KAAK,WACLob,UAAW9P,GACXiQ,WAAS,EACTL,YAAa,CAAC,UAAW,WAG3B,kBAAC,GAAD,CAAOlb,KAAK,IAAIob,UAAWzR,GAAU8R,OAAK,M,ioBC7G9C,IAmCeK,GAnCKC,YAAH,MCqBFC,OAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,GAAD,QCbNC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,GAAD,OAEF3J,SAAS4J,eAAe,U,mBCT1BhrB,EAAOC,QAAU,IAA0B,mD","file":"static/js/main.cf865821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.7a3dbad3.png\";","module.exports = __webpack_public_path__ + \"static/media/SmallLogo.bc0745b0.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background-6.c56c732a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pattern-Developing-Page.b3db49ce.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.totalcleanbh.com',\n  // baseURL: 'http://localhost:3333',\n});\n\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('@TotalClean:access-token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\napi.interceptors.response.use(\n  response => response,\n  error => {\n    if (!error.config.url) {\n      return error.config;\n    }\n\n    if (\n      !error.config.url.endsWith('login') ||\n      !error.config.url.endsWith('refresh')\n    ) {\n      const originalRequest = error.config;\n\n      if (\n        error.response?.status === 403 &&\n        originalRequest.url === '/auth/refresh'\n      ) {\n        localStorage.removeItem('@TotalClean:access-token');\n        localStorage.removeItem('@TotalClean:refresh-token');\n        localStorage.removeItem('@TotalClean:user');\n\n        return Promise.reject(error);\n      }\n\n      if (\n        error.response.status === 404 &&\n        originalRequest.url === '/auth/refresh'\n      ) {\n        localStorage.removeItem('@TotalClean:access-token');\n        localStorage.removeItem('@TotalClean:refresh-token');\n        localStorage.removeItem('@TotalClean:user');\n\n        return Promise.reject(error);\n      }\n\n      if (error.response.status === 403 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        return api\n          .post('/auth/refresh', {\n            token: localStorage.getItem('@TotalClean:refresh-token'),\n          })\n          .then(res => {\n            localStorage.setItem(\n              '@TotalClean:access-token',\n              res.data.accessToken,\n            );\n            api.defaults.headers.common[\n              'Authorization'\n            ] = `Bearer ${localStorage.getItem('@TotalClean:access-token')}`;\n            return api(originalRequest);\n          });\n      }\n\n      if (error.response.status === 404 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        return api\n          .post('/auth/refresh', {\n            token: localStorage.getItem('@TotalClean:refresh-token'),\n          })\n          .then(res => {\n            localStorage.setItem(\n              '@TotalClean:access-token',\n              res.data.accessToken,\n            );\n            api.defaults.headers.common[\n              'Authorization'\n            ] = `Bearer ${localStorage.getItem('@TotalClean:access-token')}`;\n            return api(originalRequest);\n          });\n      }\n    }\n    return Promise.reject(error);\n  },\n);\n\nexport default api;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { AiOutlineTool } from 'react-icons/ai';\nimport {\n  FiList,\n  FiTag,\n  FiUsers,\n  FiFileText,\n  FiDollarSign,\n} from 'react-icons/fi';\nimport { MdBusiness } from 'react-icons/md';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport api from '../services/api';\n\ninterface IUser {\n  role: 'ADMIN' | 'MANAGER' | 'SELLER';\n  profile: {\n    company_id: string;\n    unit_id: string;\n  };\n}\n\ninterface IAuthState {\n  access_token: string;\n  refresh_token: string;\n  user: IUser;\n  buttons: IButton[];\n}\n\ninterface ISignInCredentials {\n  username: string;\n  password: string;\n}\n\ninterface IAuthContextData {\n  user: {\n    role: 'ADMIN' | 'MANAGER' | 'SELLER';\n    profile: {\n      company_id: string;\n      unit_id: string;\n    };\n  };\n  buttons: IButton[];\n  signIn(\n    credentials: ISignInCredentials,\n  ): Promise<{ user: { first_login: boolean } }>;\n  signOut(): void;\n}\n\ninterface IButton {\n  name: string;\n  enable: boolean;\n  route: string;\n  icon?: JSX.Element;\n}\n\nexport const AuthContext = createContext<IAuthContextData>(\n  {} as IAuthContextData,\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const [data, setData] = useState<IAuthState>(\n    (): IAuthState => {\n      const access_token = localStorage.getItem('@TotalClean:access-token');\n      const refresh_token = localStorage.getItem('@TotalClean:refresh-token');\n      const user = localStorage.getItem('@TotalClean:user');\n\n      if (access_token && refresh_token && user) {\n        const userData = JSON.parse(user);\n\n        let buttons: IButton[] = [];\n\n        if (userData.role === 'MANAGER') {\n          buttons = [\n            {\n              name: 'Serviços',\n              enable: true,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Registro de vendas',\n              enable: true,\n              route: '/sales-register',\n              icon: <FiDollarSign color=\"#fff\" />,\n            },\n            {\n              name: 'Vendedores',\n              enable: true,\n              route: '/sellers',\n              icon: <FiUsers color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas registradas',\n              enable: true,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n            {\n              name: 'Relatórios',\n              enable: true,\n              route: '/reports',\n              icon: <FiFileText color=\"#fff\" />,\n            },\n            {\n              name: 'Preços',\n              enable: true,\n              route: '/prices',\n              icon: <FiTag color=\"#fff\" />,\n            },\n          ];\n        }\n\n        if (userData.role === 'ADMIN') {\n          buttons = [\n            {\n              name: 'Concessionárias',\n              enable: false,\n              route: '/companies',\n              icon: <MdBusiness color=\"#fff\" />,\n            },\n            {\n              name: 'Usuários',\n              enable: false,\n              route: '/users',\n              icon: <FiUsers color=\"#fff\" />,\n            },\n            {\n              name: 'Serviços',\n              enable: false,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Administrar Serviços',\n              enable: false,\n              route: '/administration-services',\n              icon: <FiTag color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas',\n              enable: false,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n            {\n              name: 'Relatórios',\n              enable: false,\n              route: '/reports',\n              icon: <FiFileText color=\"#fff\" />,\n            },\n          ];\n        }\n\n        if (userData.role === 'SELLER') {\n          buttons = [\n            {\n              name: 'Serviços',\n              enable: false,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Registro de vendas',\n              enable: false,\n              route: '/sales-register',\n              icon: <FiDollarSign color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas',\n              enable: false,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n          ];\n        }\n\n        return { access_token, refresh_token, user: JSON.parse(user), buttons };\n      }\n\n      return {} as IAuthState;\n    },\n  );\n\n  const signIn = useCallback(async ({ username, password }) => {\n    const response = await api.post('/auth/login/', { username, password });\n\n    const { user } = response.data;\n    const { access_token, refresh_token } = response.data;\n    let buttons: IButton[] = [];\n\n    if (user.role === 'MANAGER') {\n      buttons = [\n        {\n          name: 'Serviços',\n          enable: true,\n          route: '/services',\n          icon: <AiOutlineTool color=\"#fff\" />,\n        },\n        {\n          name: 'Registro de vendas',\n          enable: true,\n          route: '/sales-register',\n          icon: <FiDollarSign color=\"#fff\" />,\n        },\n        {\n          name: 'Vendedores',\n          enable: true,\n          route: '/sellers',\n          icon: <FiUsers colorRendering=\"#fff\" color=\"#fff\" />,\n        },\n        {\n          name: 'Vendas registradas',\n          enable: true,\n          route: '/sales',\n          icon: <FiList color=\"#fff\" />,\n        },\n        {\n          name: 'Relatórios',\n          enable: true,\n          route: '/reports',\n          icon: <FiFileText color=\"#fff\" />,\n        },\n        {\n          name: 'Preços',\n          enable: true,\n          route: '/prices',\n          icon: <FiTag color=\"#fff\" />,\n        },\n      ];\n    }\n\n    if (user.role === 'ADMIN') {\n      buttons = [\n        {\n          name: 'Concessionárias',\n          enable: false,\n          route: '/companies',\n          icon: <MdBusiness color=\"#fff\" />,\n        },\n        {\n          name: 'Usuários',\n          enable: false,\n          route: '/users',\n          icon: <FiUsers color=\"#fff\" />,\n        },\n        {\n          name: 'Serviços',\n          enable: false,\n          route: '/services',\n          icon: <AiOutlineTool color=\"#fff\" />,\n        },\n        {\n          name: 'Administrar Serviços',\n          enable: false,\n          route: '/administration-services',\n          icon: <FiTag color=\"#fff\" />,\n        },\n        {\n          name: 'Vendas',\n          enable: false,\n          route: '/sales',\n          icon: <FiList color=\"#fff\" />,\n        },\n        {\n          name: 'Relatórios',\n          enable: false,\n          route: '/reports',\n          icon: <FiFileText color=\"#fff\" />,\n        },\n      ];\n    }\n\n    if (user.role === 'SELLER') {\n      buttons = [\n        {\n          name: 'Serviços',\n          enable: false,\n          route: '/services',\n          icon: <AiOutlineTool color=\"#fff\" />,\n        },\n        {\n          name: 'Registro de vendas',\n          enable: false,\n          route: '/sales-register',\n          icon: <FiDollarSign color=\"#fff\" />,\n        },\n        {\n          name: 'Vendas',\n          enable: false,\n          route: '/sales',\n          icon: <FiList color=\"#fff\" />,\n        },\n      ];\n    }\n\n    localStorage.setItem('@TotalClean:access-token', access_token);\n    localStorage.setItem('@TotalClean:refresh-token', refresh_token);\n    localStorage.setItem('@TotalClean:user', JSON.stringify(user));\n\n    setData({ access_token, refresh_token, user, buttons });\n    return response.data;\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@TotalClean:access-token');\n    localStorage.removeItem('@TotalClean:refresh-token');\n    localStorage.removeItem('@TotalClean:user');\n\n    setData({} as IAuthState);\n  }, []);\n\n  useEffect(() => {\n    const access_token = localStorage.getItem('@TotalClean:access-token');\n    const refresh_token = localStorage.getItem('@TotalClean:refresh-token');\n    const user = localStorage.getItem('@TotalClean:user');\n\n    if (!access_token || !refresh_token || !user) {\n      if (location.pathname !== '/') {\n        history.replace('/');\n      }\n      return;\n    }\n\n    if (\n      location.pathname === '/' ||\n      location.pathname === '/login' ||\n      location.pathname === '/app'\n    ) {\n      history.replace('/services');\n    }\n\n    if (!access_token || !refresh_token || !user) {\n      history.replace('/');\n\n      signOut();\n      return;\n    }\n\n    api\n      .get('/users/get-profile')\n      .then(response => {\n        const userData = response.data;\n\n        let buttons;\n\n        if (userData.role === 'MANAGER') {\n          buttons = [\n            {\n              name: 'Serviços',\n              enable: true,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Registro de vendas',\n              enable: true,\n              route: '/sales-register',\n              icon: <FiDollarSign color=\"#fff\" />,\n            },\n            {\n              name: 'Vendedores',\n              enable: true,\n              route: '/sellers',\n              icon: <FiUsers color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas registradas',\n              enable: true,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n            {\n              name: 'Relatórios',\n              enable: true,\n              route: '/reports',\n              icon: <FiFileText color=\"#fff\" />,\n            },\n            {\n              name: 'Preços',\n              enable: true,\n              route: '/prices',\n              icon: <FiTag color=\"#fff\" />,\n            },\n          ];\n        }\n\n        if (userData.role === 'ADMIN') {\n          buttons = [\n            {\n              name: 'Concessionárias',\n              enable: false,\n              route: '/companies',\n              icon: <MdBusiness color=\"#fff\" />,\n            },\n            {\n              name: 'Usuários',\n              enable: false,\n              route: '/users',\n              icon: <FiUsers color=\"#fff\" />,\n            },\n            {\n              name: 'Serviços',\n              enable: false,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Administrar Serviços',\n              enable: false,\n              route: '/administration-services',\n              icon: <FiTag color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas',\n              enable: false,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n            {\n              name: 'Relatórios',\n              enable: false,\n              route: '/reports',\n              icon: <FiFileText color=\"#fff\" />,\n            },\n          ];\n        }\n\n        if (userData.role === 'SELLER') {\n          buttons = [\n            {\n              name: 'Serviços',\n              enable: false,\n              route: '/services',\n              icon: <AiOutlineTool color=\"#fff\" />,\n            },\n            {\n              name: 'Registro de vendas',\n              enable: false,\n              route: '/sales-register',\n              icon: <FiDollarSign color=\"#fff\" />,\n            },\n            {\n              name: 'Vendas',\n              enable: false,\n              route: '/sales',\n              icon: <FiList color=\"#fff\" />,\n            },\n          ];\n        }\n\n        if (!buttons) {\n          return;\n        }\n\n        localStorage.setItem('@TotalClean:user', JSON.stringify(userData));\n\n        setData({\n          access_token,\n          refresh_token,\n          user: userData,\n          buttons,\n        });\n      })\n      .catch(() => signOut());\n  }, [signOut, location, history]);\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, buttons: data.buttons, signIn, signOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): IAuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n","import React, { createContext, useCallback, useContext, useState } from 'react';\n\ninterface ISales {\n  id: number;\n  availabilityDate: string;\n  deliveryDate: string;\n  status: string;\n  companyPrice: number;\n  costPrice: number;\n  comments: string;\n  seller: {\n    name: string;\n    company: {\n      id: number;\n      name: string;\n      telephone: string;\n      cnpj: string;\n    };\n  };\n  person: {\n    name: string;\n  };\n  car: {\n    car: string;\n    carPlate: string;\n  };\n  serviceSale: Array<{\n    id: number;\n    service: {\n      id: number;\n      name: string;\n      price: number;\n    };\n  }>;\n}\n\ninterface IFilters {\n  company?: string;\n  period?: string;\n  service: string;\n}\n\ninterface ISalesFilteredReportContextData {\n  sales?: ISales[];\n  filters: IFilters;\n  setSalesFilteredReport(newSales: ISales[]): void;\n  setReportFilters(newFilters: IFilters): void;\n}\n\nconst SalesFilteredReportContext = createContext<ISalesFilteredReportContextData>(\n  {} as ISalesFilteredReportContextData,\n);\n\nexport const SalesFilteredReportProvider: React.FC = ({ children }) => {\n  const [sales, setSales] = useState<ISales[]>([]);\n  const [filters, setFilters] = useState<IFilters>({} as IFilters);\n\n  const setSalesFilteredReport = useCallback((newSales: ISales[]) => {\n    setSales(newSales);\n  }, []);\n\n  const setReportFilters = useCallback((newFilters: IFilters) => {\n    setFilters(newFilters);\n  }, []);\n\n  return (\n    <SalesFilteredReportContext.Provider\n      value={{\n        sales,\n        filters,\n        setSalesFilteredReport,\n        setReportFilters,\n      }}\n    >\n      {children}\n    </SalesFilteredReportContext.Provider>\n  );\n};\n\nexport function useSalesFilteredReport(): ISalesFilteredReportContextData {\n  const context = useContext(SalesFilteredReportContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n  z-index: 20000;\n`;\n","import { animated } from 'react-spring';\n\nimport styled, { css } from 'styled-components';\n\ninterface IToastPorps {\n  type?: 'info' | 'success' | 'error';\n  hasdescription: boolean;\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<IToastPorps>`\n  width: 360px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${props => toastTypeVariations[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${props =>\n    !props.hasdescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { IToastMessage, useToast } from '../../../context/toast';\nimport { Container } from './styles';\n\ninterface IToastProps {\n  message: IToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<IToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 6000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message.id, removeToast]);\n\n  return (\n    <Container\n      type={message.type}\n      hasdescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button type=\"button\" onClick={() => removeToast(message.id)}>\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { IToastMessage } from '../../context/toast';\nimport { Container } from './styles';\nimport Toast from './Toast';\n\ninterface IToastContainerProps {\n  messages: Array<IToastMessage>;\n}\n\nconst ToastContainer: React.FC<IToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} message={item} style={props} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport { uuid } from 'uuidv4';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface IToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface IToastContextData {\n  addToast(message: Omit<IToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<IToastContextData>({} as IToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<IToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<IToastMessage, 'id'>) => {\n      const id = uuid();\n      const toast = {\n        id,\n        title,\n        type,\n        description,\n      };\n\n      setMessages(oldMessages => [...oldMessages, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): IToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { SalesFilteredReportProvider } from './sales-filtered-report';\nimport { ToastProvider } from './toast';\n\nconst AppProvider: React.FC = ({ children }) => (\n  <AuthProvider>\n    <SalesFilteredReportProvider>\n      <ToastProvider>{children}</ToastProvider>\n    </SalesFilteredReportProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import { theme, DefaultTheme } from '@chakra-ui/core';\n\nconst customTheme: DefaultTheme = {\n  ...theme,\n  fonts: {\n    body: 'Roboto, system-ui, sans-serig',\n    heading: 'Roboto, system-ui, sans-serig',\n    mono: 'Menlo, monospace',\n  },\n  fontWeights: {\n    ...theme.fontWeights,\n    normal: 400,\n    medium: 500,\n    bold: 700,\n  },\n  radii: {\n    ...theme.radii,\n    sm: '5px',\n    md: '8px',\n  },\n  fontSizes: {\n    ...theme.fontSizes,\n  },\n  colors: {\n    ...theme.colors,\n    gray: {\n      ...theme.colors.gray,\n      700: '#282828',\n      800: '#383838',\n      900: '#1d1d1d',\n    },\n  },\n  zIndices: {\n    ...theme.zIndices,\n    tooltip: 3600,\n  },\n};\n\nexport default customTheme;\n","import React from 'react';\n\nimport {\n  ThemeProvider as ChakraThemeProvider,\n  ColorModeProvider,\n  CSSReset,\n} from '@chakra-ui/core';\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\n\nimport customTheme from '../../styles/theme';\n\nconst ThemeContainer: React.FC = ({ children }) => (\n  <ChakraThemeProvider theme={customTheme}>\n    <ColorModeProvider value=\"light\">\n      <EmotionThemeProvider theme={{}}>\n        <CSSReset />\n        {children}\n      </EmotionThemeProvider>\n    </ColorModeProvider>\n  </ChakraThemeProvider>\n);\n\nexport default ThemeContainer;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n\n  @media (max-width: 1224px) {\n    margin-top: 26px;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface IBreaadCrumbProps {\n  text: string;\n}\n\nconst Breadcrumb: React.FC<IBreaadCrumbProps> = ({ text }) => (\n  <Container\n    backgroundColor=\"#355a9d\"\n    width=\"100%\"\n    maxWidth={{\n      xs: '90vw',\n      sm: '90vw',\n      md: '80vw',\n      lg: '78vw',\n      xl: '90vw',\n    }}\n    color=\"#eee\"\n    display=\"flex\"\n    marginLeft=\"auto\"\n    marginRight=\"auto\"\n    padding=\"12px 15px\"\n    borderRadius=\"md\"\n    fontWeight=\"bold\"\n  >\n    <span>{text}</span>\n  </Container>\n);\n\nexport default Breadcrumb;\n","import React from 'react';\n\nimport { Button as ChakraButton, ButtonProps } from '@chakra-ui/core';\n\ninterface IButtonProps extends ButtonProps {\n  skipButton?: boolean;\n}\n\nconst Button: React.FC<IButtonProps> = ({\n  onClick,\n  skipButton,\n  type,\n  children,\n  ...rest\n}) => (\n  <ChakraButton\n    backgroundColor={skipButton ? '#222222' : '#355a9d'}\n    color={skipButton ? '#fff' : '#fff'}\n    height=\"56px\"\n    borderRadius=\"md\"\n    border={0}\n    padding=\"0 16px\"\n    fontSize=\"18px\"\n    width=\"100%\"\n    fontWeight=\"bold\"\n    marginTop=\"16px\"\n    _hover={{\n      bg: '#5580b9',\n    }}\n    _focusWithin={{\n      border: 0,\n    }}\n    _disabled={{\n      cursor: 'not-allowed',\n      background: '#2d5181',\n      color: '#ccc',\n    }}\n    onClick={onClick}\n    type={type}\n    {...rest}\n  >\n    {children}\n  </ChakraButton>\n);\n\nexport default Button;\n","import { Box, Flex } from '@chakra-ui/core';\nimport { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const Container = styled(Box)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  height: 80px;\n  background: #282828;\n  width: 100%;\n`;\n\nexport const Buttons = styled(Flex)`\n  flex: 1;\n  margin-right: 50px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: 6px;\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    font: 14px 'Ubuntu', sans-serif;\n    font-weight: 400;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    color: #ced4da;\n\n    & + a {\n      margin-right: 45px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ced4da')};\n    }\n  }\n\n  .header-button-selected {\n    color: #355a9d;\n\n    &:hover {\n      color: #5580b9;\n    }\n  }\n`;\n\nexport const Logo = styled.div`\n  max-width: 200px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 35px;\n  h1 {\n    font: 30px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    position: absolute;\n    color: #355a9d;\n  }\n  img {\n    height: 46px;\n    width: 46px;\n    margin-left: 168px;\n    padding-bottom: 11.4px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { CgLogOut } from 'react-icons/cg';\nimport { FiMenu } from 'react-icons/fi';\nimport MediaQuery from 'react-responsive';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { Image } from '@chakra-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Logo from '../../assets/Nanotech/Logo.png';\nimport { useAuth } from '../../context/auth';\nimport { Container, Buttons } from './styles';\n\ninterface IHeaderProp {\n  disableButtons?: boolean;\n}\n\nconst Header: React.FC<IHeaderProp> = ({ disableButtons = false }) => {\n  const history = useHistory();\n  const initialSelectedButton = history.location.pathname;\n  const [selected, setSelected] = useState(initialSelectedButton);\n  const { buttons, signOut } = useAuth();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Container>\n      <Image width={40} src={Logo}></Image>\n      <MediaQuery minDeviceWidth={1224}>\n        <Buttons direction=\"row-reverse\">\n          <Link to=\"/\" onClick={signOut}>\n            <CgLogOut size={20} />\n            Sair\n          </Link>\n          {buttons?.map(button => (\n            <Link\n              key={button.route}\n              className={\n                selected === button.route\n                  ? 'header-button-selected'\n                  : 'header-button'\n              }\n              to={disableButtons ? '#' : `${button.route}`}\n              onClick={() => setSelected(button.route)}\n            >\n              {button.name}\n            </Link>\n          ))}\n        </Buttons>\n      </MediaQuery>\n\n      <MediaQuery maxDeviceWidth={1224}>\n        <Buttons direction=\"row-reverse\">\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n          >\n            <FiMenu size={25} color=\"#fff\" />\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {buttons?.map(button => (\n              <Link\n                key={button.route}\n                to={disableButtons ? '#' : `${button.route}`}\n                onClick={() => setSelected(button.route)}\n              >\n                <MenuItem onClick={() => setSelected(button.route)}>\n                  {button.name}\n                </MenuItem>\n              </Link>\n            ))}\n            <Link to=\"/\" onClick={signOut}>\n              <MenuItem onClick={signOut}>Sair</MenuItem>\n            </Link>\n          </Menu>\n        </Buttons>\n      </MediaQuery>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useCallback, useState } from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport MediaQuery from 'react-responsive';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Flex, Image, Tooltip } from '@chakra-ui/core';\n\nimport Logo from '../../assets/Nanotech/SmallLogo.png';\nimport { useAuth } from '../../context/auth';\nimport Header from '../Header';\n\n// import { Container } from './styles';\n\ninterface IButton {\n  name: string;\n  enable: boolean;\n  route: string;\n  icon?: JSX.Element;\n}\ninterface ISidebarProps {\n  disableButton?: boolean;\n}\n\nconst Sidebar: React.FC<ISidebarProps> = ({ disableButton = false }) => {\n  const history = useHistory();\n  const initialSelectedButton = history.location.pathname;\n  const [selected, setSelected] = useState(initialSelectedButton);\n  const { signOut, buttons } = useAuth();\n\n  const handleClickMenuButon = useCallback(\n    (button: IButton) => {\n      history.push(button.route);\n\n      setSelected(button.route);\n    },\n    [history],\n  );\n\n  const handleSignout = useCallback(() => {\n    history.push('/');\n\n    signOut();\n  }, [history, signOut]);\n\n  return (\n    <>\n      <MediaQuery maxDeviceWidth={1224}>\n        <Header disableButtons={disableButton} />\n      </MediaQuery>\n\n      <MediaQuery minDeviceWidth={1224}>\n        <Flex position=\"fixed\" left={0} top={0} direction=\"column\" width=\"80px\">\n          <Flex\n            paddingTop={0}\n            width=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            height=\"8.3vh\"\n            background=\"#282828\"\n            borderBottom=\"1px solid #545454\"\n          >\n            <Image width={20} src={Logo}></Image>\n          </Flex>\n          <Flex\n            background=\"#282828\"\n            direction=\"column\"\n            width=\"100%\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            height=\"83.4vh\"\n          >\n            {buttons.map(button => (\n              <Tooltip\n                key={button.name}\n                label={button.name}\n                aria-label={button.name}\n              >\n                <Button\n                  isDisabled={disableButton}\n                  borderRadius=\"50%\"\n                  padding={0}\n                  marginBottom={4}\n                  background=\"#323232\"\n                  _hover={{\n                    background: '#454545',\n                  }}\n                  borderBottom={\n                    selected === button.route ? '2px solid #355a9d' : '#323232'\n                  }\n                  onClick={() => {\n                    handleClickMenuButon(button);\n                  }}\n                >\n                  {button?.icon}\n                </Button>\n              </Tooltip>\n            ))}\n          </Flex>\n\n          <Flex\n            borderTop=\"1px solid #545454\"\n            background=\"#282828\"\n            width=\"100%\"\n            height=\"8.3vh\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Tooltip label=\"Sair\" aria-label=\"Sair\">\n              <Button\n                onClick={handleSignout}\n                background=\"transparent\"\n                _hover={{ background: 'transparent' }}\n              >\n                <FiPower size={20} color=\"#fff\" />\n              </Button>\n            </Tooltip>\n          </Flex>\n        </Flex>\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { ValidationError } from 'yup';\n\ninterface IErrors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): IErrors {\n  const validationErrors: IErrors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: ';';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface ToolTipProps {\n  title: string;\n  className?: string;\n}\n\nconst ToolTip: React.FC<ToolTipProps> = ({ className, title, children }) => (\n  <Container className={className}>\n    {children}\n    <span>{title}</span>\n  </Container>\n);\n\nexport default ToolTip;\n","import { shade } from 'polished';\nimport styled, { css } from 'styled-components';\n\nimport ToolTip from '../ToolTip';\n\ninterface IContainerProps {\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<IContainerProps>`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n  background: ${shade(0.5, '#383838')};\n  border-radius: 10px;\n  padding: 16px;\n  height: 57px;\n  width: 100%;\n\n  border: 2px solid #585858;\n  color: #f4ede8;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${props =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 13px;\n    margin-bottom: 2px;\n  }\n`;\nexport const Error = styled(ToolTip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { IconBaseProps } from 'react-icons/';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport NumberFormat, {\n  NumberFormatValues,\n  NumberFormatProps,\n} from 'react-number-format';\n\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface IFormattedInputProps extends NumberFormatProps {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst FormattedInput: React.FC<IFormattedInputProps> = ({\n  name,\n  icon: Icon,\n  defaultValue,\n  ...rest\n}) => {\n  const inputRef = useRef<NumberFormat>(null);\n  const [value, setValue] = useState<NumberFormatValues>({\n    floatValue: undefined,\n    value: defaultValue ? String(defaultValue) : '',\n    formattedValue: '',\n  });\n\n  const { fieldName, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: value,\n      path: 'value',\n      clearValue: () =>\n        setValue({\n          floatValue: undefined,\n          value: '',\n          formattedValue: '',\n        }),\n    });\n  }, [fieldName, value, registerField]);\n\n  return (\n    <Container isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n      <NumberFormat\n        {...rest}\n        ref={inputRef}\n        onValueChange={(values: NumberFormatValues) => {\n          setValue(values);\n        }}\n        value={value.value}\n      ></NumberFormat>\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default FormattedInput;\n","import { shade } from 'polished';\nimport styled, { css } from 'styled-components';\n\nimport ToolTip from '../ToolTip';\n\ninterface IContainerProps {\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<IContainerProps>`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n  background: ${shade(0.5, '#383838')};\n  border-radius: 10px;\n  padding: 16px;\n  height: 57px;\n  width: 100%;\n\n  border: 2px solid #585858;\n  color: #f4ede8;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${props =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 13px;\n    margin-bottom: 2px;\n  }\n`;\nexport const Error = styled(ToolTip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, { useEffect, InputHTMLAttributes, useRef } from 'react';\nimport { IconBaseProps } from 'react-icons/';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<IInputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { fieldName, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n      <input ref={inputRef} {...rest}></input>\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import React, { useCallback, useRef } from 'react';\nimport { AiOutlineIdcard } from 'react-icons/ai';\nimport { FiPhone } from 'react-icons/fi';\nimport { MdBusiness } from 'react-icons/md';\n\nimport {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { ICompany } from '../../../interfaces/companies';\nimport api from '../../../services/api';\nimport getValidationErrors from '../../../utils/getValidationError';\nimport FormattedInput from '../../FormattedInput';\nimport Input from '../../Input';\n\ninterface IFormData {\n  name?: string;\n  telephone?: string;\n  cnpj?: string;\n  client_identifier?: string;\n}\n\ninterface IUpdateCompanyModalProps {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void | undefined;\n  company: ICompany | undefined;\n}\n\nconst UpdateCompanyModal: React.FC<IUpdateCompanyModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  company,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const toast = useToast();\n\n  // useEffect(() => {\n  //   setTelephone(company?.telephone);\n  //   setCnpj(company?.cnpj);\n  // }, [company]);\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, event) => {\n      try {\n        formRef.current?.setErrors({});\n\n        if (\n          !data.name &&\n          !data.telephone &&\n          !data.cnpj &&\n          !data.client_identifier\n        ) {\n          formRef.current?.setErrors({\n            name: 'Pelo menos algum campo deve ser preenchido',\n            telephone: 'Pelo menos algum campo deve ser preenchido',\n            cnpj: 'Pelo menos algum campo deve ser preenchido',\n            client_identifier: 'Pelo menos algum campo deve ser preenchido',\n          });\n\n          return;\n        }\n\n        const schema = Yup.object().shape({\n          name: Yup.string(),\n          telephone: data.telephone\n            ? Yup.string()\n                .max(\n                  13,\n                  'O número de telefone deve conter no máximo 11 dígitos.',\n                )\n                .min(8, 'O número de telefone deve conter no mínimo 8 dígitos.')\n            : Yup.string(),\n          cnpj: data.cnpj\n            ? Yup.string()\n                .length(14, 'O Cnpj deve conter 14 dígitos.')\n                .nullable()\n            : Yup.string(),\n          client_identifier: data.client_identifier\n            ? Yup.string()\n                .length(2, 'O identificador deve conter 2 dígitos.')\n                .nullable()\n            : Yup.string(),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api.put(`companies/${company?.id}`, data);\n\n        toast({\n          status: 'success',\n          title: 'Dados da concessionária alterados com sucesso',\n          position: 'top',\n          duration: 3000,\n        });\n\n        onClose(event);\n\n        onSave();\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        toast({\n          status: 'error',\n          title: 'Erro ao atualizar os dados da concessionária',\n          description:\n            'Ocorreu um erro ao atualizar os dados da concessionária, tente novamente.',\n          position: 'top',\n          duration: 5000,\n        });\n      }\n    },\n    [onClose, onSave, toast, company],\n  );\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent\n          backgroundColor=\"#383838\"\n          maxWidth={900}\n          borderRadius=\"md\"\n        >\n          <ModalHeader>\n            {`Alterar dados da concessionária ${company?.name}`}\n          </ModalHeader>\n          <ModalCloseButton />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <ModalBody paddingBottom={4}>\n              <Flex direction=\"column\">\n                <Input\n                  defaultValue={company?.name}\n                  placeholder=\"Nome\"\n                  name=\"name\"\n                  icon={MdBusiness}\n                />\n                <FormattedInput\n                  className=\"input\"\n                  id=\"telephone\"\n                  placeholder=\"Telefone\"\n                  name=\"telephone\"\n                  format=\"## #####-####\"\n                  mask=\"_\"\n                  defaultValue={company?.telephone}\n                  icon={FiPhone}\n                />\n\n                <FormattedInput\n                  defaultValue={company?.cnpj}\n                  placeholder=\"CNPJ\"\n                  mask=\"_\"\n                  name=\"cnpj\"\n                  icon={AiOutlineIdcard}\n                  format=\"##.###.###/####-##\"\n                />\n\n                <Input\n                  defaultValue={company?.client_identifier}\n                  placeholder=\"Identificador\"\n                  name=\"client_identifier\"\n                />\n              </Flex>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                variant=\"ghost\"\n                onClick={onClose}\n                _hover={{ background: '#323232' }}\n                marginRight={4}\n              >\n                Cancelar\n              </Button>\n\n              <Button\n                type=\"submit\"\n                backgroundColor=\"#355a9d\"\n                _hover={{\n                  backgroundColor: '#5580b9',\n                }}\n              >\n                Salvar\n              </Button>\n            </ModalFooter>\n          </Form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateCompanyModal;\n","import React, { useCallback, useRef } from 'react';\nimport { FiPhone } from 'react-icons/fi';\n\nimport {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { IUnit } from '../../../interfaces/unit';\nimport api from '../../../services/api';\nimport getValidationErrors from '../../../utils/getValidationError';\nimport FormattedInput from '../../FormattedInput';\nimport Input from '../../Input';\n\ninterface IFormData {\n  name?: string;\n  telephone?: string;\n  role?: string;\n  client_identifier?: string;\n}\n\ninterface IUpdateUnitDataModalProps {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void | undefined;\n  unit: IUnit | undefined;\n}\n\nconst UpdateUnitDataModal: React.FC<IUpdateUnitDataModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  unit,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const toast = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, event) => {\n      try {\n        formRef.current?.setErrors({});\n\n        if (!data.name && !data.telephone && !data.role) {\n          formRef.current?.setErrors({\n            name: 'Pelo menos algum campo deve ser preenchido',\n            telephone: 'Pelo menos algum campo deve ser preenchido',\n            role: 'Pelo menos algum campo deve ser preenchido',\n            client_identifier: 'Pelo menos algum campo deve ser preenchido',\n          });\n\n          return;\n        }\n\n        const schema = Yup.object().shape({\n          name: Yup.string(),\n          telephone: data.telephone\n            ? Yup.string()\n                .max(\n                  13,\n                  'O número de telefone deve conter no máximo 11 dígitos.',\n                )\n                .min(8, 'O número de telefone deve conter no mínimo 8 dígitos.')\n            : Yup.string(),\n          client_identifier: data.client_identifier\n            ? Yup.string()\n                .length(2, 'O identificador deve conter 2 dígitos.')\n                .nullable()\n            : Yup.string(),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        let submitData = {};\n\n        if (data.name) {\n          submitData = { ...submitData, name: data.name };\n        }\n\n        if (data.telephone) {\n          submitData = { ...submitData, telephone: data.telephone };\n        }\n\n        if (data.client_identifier) {\n          submitData = {\n            ...submitData,\n            client_identifier: data.client_identifier,\n          };\n        }\n\n        await api.put(`units/${unit?.id}`, submitData);\n\n        toast({\n          status: 'success',\n          title: 'Dados da unidade alterados com sucesso',\n          position: 'top',\n          duration: 3000,\n        });\n\n        onClose(event);\n\n        onSave();\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        toast({\n          status: 'error',\n          title: 'Erro ao atualizar os dados da unidade',\n          description:\n            'Ocorreu um erro ao atualizar os dados da unidade, tente novamente.',\n          position: 'top',\n          duration: 5000,\n        });\n      }\n    },\n    [unit, onClose, onSave, toast],\n  );\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent\n          backgroundColor=\"#383838\"\n          maxWidth={900}\n          borderRadius=\"md\"\n        >\n          <ModalHeader>{`Alterar dados da unidade ${unit?.name}`}</ModalHeader>\n          <ModalCloseButton />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <ModalBody paddingBottom={4}>\n              <Flex direction=\"column\">\n                <Input\n                  defaultValue={unit?.name}\n                  placeholder=\"Nome\"\n                  name=\"name\"\n                />\n\n                <FormattedInput\n                  className=\"input\"\n                  id=\"telephone\"\n                  placeholder=\"Contato\"\n                  name=\"telephone\"\n                  format=\"## #####-####\"\n                  mask=\"_\"\n                  defaultValue={unit?.telephone}\n                  icon={FiPhone}\n                />\n\n                <Input\n                  defaultValue={unit?.client_identifier}\n                  placeholder=\"Identificador\"\n                  name=\"client_identifier\"\n                />\n              </Flex>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                variant=\"ghost\"\n                onClick={onClose}\n                _hover={{ background: '#323232' }}\n                marginRight={4}\n              >\n                Cancelar\n              </Button>\n\n              <Button\n                type=\"submit\"\n                backgroundColor=\"#355a9d\"\n                _hover={{\n                  backgroundColor: '#5580b9',\n                }}\n              >\n                Salvar\n              </Button>\n            </ModalFooter>\n          </Form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateUnitDataModal;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n  max-height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 15% 20% 20% 45%;\n    align-items: center;\n    justify-content: center;\n    padding-left: 10px;\n\n    margin-top: 25px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n\n    span {\n      font: 16px 'Ubuntu', sans-serif;\n      font-weight: bold;\n    }\n  }\n\n  .button {\n    margin-top: 30px;\n    float: right;\n    width: 300px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  width: 100%;\n  overflow: auto;\n  margin-top: 16px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n`;\n\nexport const Box = styled.div`\n  & + div {\n    margin-top: 16px;\n  }\n\n  div.header {\n    padding-left: 10px;\n    display: grid;\n    width: 100%;\n    grid-template-columns: 15% 20% 20% 20% 5% 20%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 15px 15px 0 0;\n\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n      div {\n        margin-right: 6px;\n        border-radius: 50%;\n        width: 12px;\n        height: 12px;\n      }\n    }\n  }\n\n  .dropDown {\n    background: #353535;\n    border-radius: 0 0 15px 15px;\n    padding: 10px 16px 20px 16px;\n\n    .createNewCompanyLink {\n      display: flex;\n      align-items: center;\n      text-decoration: none;\n\n      font: 14px 'Ubuntu', sans-serif;\n      font-weight: 400;\n\n      color: #355a9d;\n      transition: color 0.2s;\n\n      margin-top: 16px;\n      &:hover {\n        color: #5580b9;\n      }\n    }\n\n    div.separator {\n      margin-top: 5px;\n      span {\n        font: 16px 'Ubuntu', sans-serif;\n      }\n    }\n\n    div.title {\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 30% 30% 10% 30%;\n      align-items: center;\n\n      & + div {\n        margin-top: 8px;\n      }\n\n      span {\n        font: 16px 'Ubuntu', sans-serif;\n        font-weight: bold;\n      }\n    }\n\n    div.unit {\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 30% 30% 10% 30%;\n      align-items: center;\n      & + div {\n        margin-top: 8px;\n      }\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from 'react-icons/fa';\nimport { FiEdit } from 'react-icons/fi';\nimport { RiAddFill } from 'react-icons/ri';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport {\n  Flex as ChakraFlex,\n  Button as ChakraButton,\n  Tooltip,\n  Skeleton,\n  Stack,\n} from '@chakra-ui/core';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Menu from '../../components/Menu';\nimport UpdateCompanyModal from '../../components/Modals/UpdateCompany';\nimport UpdateUnitModal from '../../components/Modals/UpdateUnit';\nimport { ICompany, IFormattedCompany } from '../../interfaces/companies';\nimport { IUnit } from '../../interfaces/unit';\nimport api from '../../services/api';\nimport { Container, Content, Separator, List, Box } from './styles';\n\nconst Companies = () => {\n  const [companies, setCompanies] = useState<ICompany[]>([]);\n  const [openedCompanies, setOpenedCompanies] = useState<number[]>([]);\n\n  const [companyToUpdate, setCompanyToUpdate] = useState<ICompany | undefined>(\n    undefined,\n  );\n\n  const [unitToUpdate, setUnitToUpdate] = useState<IUnit | undefined>(\n    undefined,\n  );\n\n  const history = useHistory();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    api.get('companies').then(response => {\n      const newCompanies: ICompany[] = response.data;\n\n      setCompanies(newCompanies);\n      setLoading(false);\n    });\n  }, []);\n\n  const getCompanies = useCallback(() => {\n    setLoading(true);\n\n    api.get('companies').then(response => {\n      const newCompanies: ICompany[] = response.data;\n\n      setCompanies(newCompanies);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleOpenUpdateCompanyModal = useCallback((company: ICompany) => {\n    setCompanyToUpdate(company);\n  }, []);\n\n  const handleCloseUpdateCompanyModal = useCallback(() => {\n    setCompanyToUpdate(undefined);\n  }, []);\n\n  const handleOpenCompanies = useCallback(\n    (id: number) => {\n      setOpenedCompanies([...openedCompanies, id]);\n    },\n    [openedCompanies],\n  );\n\n  const handleCloseCompanies = useCallback(\n    (id: number) => {\n      const newOpenedCompanies = openedCompanies.filter(\n        companyId => companyId !== id,\n      );\n\n      setOpenedCompanies(newOpenedCompanies);\n    },\n    [openedCompanies],\n  );\n\n  const handleOpenUpdateUnitData = useCallback((unit: IUnit) => {\n    setUnitToUpdate(unit);\n  }, []);\n\n  const handleCloseUpdateUnitData = useCallback(() => {\n    setUnitToUpdate(undefined);\n  }, []);\n\n  const formattedCompanies: IFormattedCompany[] = useMemo(\n    () =>\n      companies.map<IFormattedCompany>(company => ({\n        id: company.id,\n        name: company.name,\n        telephone: company.telephone,\n        cnpj: company.cnpj,\n        client_identifier: company.client_identifier,\n        button: (\n          <Tooltip\n            aria-label=\"Alterar dados da concessionária\"\n            label=\"Alterar dados da concessionária\"\n          >\n            <ChakraButton\n              onClick={() => handleOpenUpdateCompanyModal(company)}\n              _hover={{ background: '#353535', border: 0 }}\n              _focusWithin={{ border: 0 }}\n              background=\"#282828\"\n            >\n              <FiEdit />\n            </ChakraButton>\n          </Tooltip>\n        ),\n        units: company.unities.map(unit => ({\n          id: unit.id,\n          name: unit.name,\n          telephone: unit.telephone,\n          client_identifier: unit.client_identifier,\n          button: (\n            <Tooltip\n              aria-label=\"Alterar dados da unidade\"\n              label=\"Alterar dados da unidade\"\n            >\n              <ChakraButton\n                onClick={() => handleOpenUpdateUnitData(unit)}\n                _hover={{\n                  backgroundColor: '#404040',\n                  color: '#ccc',\n                  border: 0,\n                }}\n                _focusWithin={{ border: 0 }}\n                background=\"#424242\"\n              >\n                <FiEdit />\n              </ChakraButton>\n            </Tooltip>\n          ),\n        })),\n      })),\n    [companies, handleOpenUpdateUnitData, handleOpenUpdateCompanyModal],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Concessionárias cadastradas\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        marginTop=\"26px\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Concessionárias</span>\n          <div />\n        </Separator>\n\n        <div className=\"boxTitle\">\n          <span>Nome</span>\n          <span>Contato</span>\n          <span>CNPJ</span>\n          <span>Identificador</span>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List height={{ lg: '40vh', xl: '55vh' }}>\n              {formattedCompanies.map(company => (\n                <Box key={company.id}>\n                  <div\n                    className=\"header\"\n                    style={\n                      openedCompanies.includes(company.id)\n                        ? { borderRadius: '15px 15px 0 0' }\n                        : { borderRadius: 15 }\n                    }\n                  >\n                    <span>{company.name}</span>\n                    <span>{company.telephone}</span>\n                    <span>{company.cnpj}</span>\n                    <span>{company.client_identifier}</span>\n                    {company.button}\n\n                    <ChakraFlex marginRight={8} justifyContent=\"flex-end\">\n                      {openedCompanies.includes(company.id) ? (\n                        <FaArrowAltCircleUp\n                          onClick={() => handleCloseCompanies(company.id)}\n                          style={{ cursor: 'pointer', alignContent: 'right' }}\n                          size={26}\n                        />\n                      ) : (\n                        <FaArrowAltCircleDown\n                          onClick={() => handleOpenCompanies(company.id)}\n                          style={{ cursor: 'pointer', alignSelf: 'right' }}\n                          size={26}\n                        />\n                      )}\n                    </ChakraFlex>\n                  </div>\n\n                  <div\n                    className=\"dropDown\"\n                    hidden={!openedCompanies.includes(company.id)}\n                  >\n                    <Separator className=\"separator\">\n                      <span>Unidades</span>\n                      <div />\n                    </Separator>\n\n                    <div className=\"title\">\n                      <span>Nome</span>\n                      <span>Telefone</span>\n                      <span>Identificador</span>\n                    </div>\n\n                    {company.units.map(unit => (\n                      <div className=\"unit\" key={unit.id}>\n                        <span>{unit.name}</span>\n                        <span>{unit.telephone}</span>\n                        <span>{unit.client_identifier}</span>\n                        {unit.button}\n                      </div>\n                    ))}\n                    <Link\n                      className=\"createNewCompanyLink\"\n                      to={`unities-register/?company=${company.id}`}\n                    >\n                      <RiAddFill size={18} /> Adicionar nova unidade\n                    </Link>\n                  </div>\n                </Box>\n              ))}\n            </List>\n          </>\n        )}\n        <UpdateUnitModal\n          isOpen={!!unitToUpdate}\n          onClose={handleCloseUpdateUnitData}\n          onSave={getCompanies}\n          unit={unitToUpdate}\n        />\n\n        <UpdateCompanyModal\n          isOpen={!!companyToUpdate}\n          onClose={handleCloseUpdateCompanyModal}\n          onSave={getCompanies}\n          company={companyToUpdate}\n        />\n\n        <div className=\"button\">\n          <Button\n            onClick={() => {\n              history.push('companies-register');\n            }}\n          >\n            Registrar nova concessionária\n          </Button>\n        </div>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Companies;\n","export default class CpfCnpjUtils {\n  static isCpfValid(cpf: string): boolean {\n    const cpfLength = 11;\n    const weights = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    return this.isValid(cpf, cpfLength, weights);\n  }\n\n  static isCnpjValid(cnpj: string): boolean {\n    const cpfLength = 14;\n    const weights = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5, 6];\n    return this.isValid(cnpj, cpfLength, weights);\n  }\n\n  static formatCpf(cpf: string): string {\n    const correctDigitsLength = 11;\n    const firstDotPosition = 2;\n    const secondDotPosition = 5;\n    const slashPosition = -1;\n    const dashPosition = 8;\n    return this.format(\n      cpf,\n      correctDigitsLength,\n      firstDotPosition,\n      secondDotPosition,\n      slashPosition,\n      dashPosition,\n    );\n  }\n\n  static formatCnpj(cnpj: string): string {\n    const correctDigitsLength = 14;\n    const firstDotPosition = 1;\n    const secondDotPosition = 4;\n    const slashPosition = 7;\n    const dashPosition = 11;\n    return this.format(\n      cnpj,\n      correctDigitsLength,\n      firstDotPosition,\n      secondDotPosition,\n      slashPosition,\n      dashPosition,\n    );\n  }\n\n  private static format(\n    digits: string,\n    correctDigitsLength: number,\n    firstDotPosition: number,\n    secondDotPosition: number,\n    slashPosition: number,\n    dashPosition: number,\n  ): string {\n    const cleanDigits = this.getOnlyNumbers(digits);\n    return cleanDigits\n      .slice(0, correctDigitsLength)\n      .split('')\n      .reduce((acc, digit, idx) => {\n        const result = `${acc}${digit}`;\n        if (idx !== digits.length - 1) {\n          if (idx === firstDotPosition || idx === secondDotPosition) {\n            return `${result}.`;\n          }\n          if (idx === slashPosition) {\n            return `${result}/`;\n          }\n          if (idx === dashPosition) {\n            return `${result}-`;\n          }\n        }\n        return result;\n      }, '');\n  }\n\n  private static isValid(\n    digits: string,\n    correctDigitsLength: number,\n    weights: number[],\n  ): boolean {\n    const cleanDigits = this.getOnlyNumbers(digits);\n    if (\n      cleanDigits.length !== correctDigitsLength ||\n      this.isAllTheSameDigits(cleanDigits)\n    ) {\n      return false;\n    }\n    const digitsWithoutChecker = cleanDigits.substring(\n      0,\n      correctDigitsLength - 2,\n    );\n    const digitsChecker = cleanDigits.substring(\n      correctDigitsLength - 2,\n      correctDigitsLength,\n    );\n    const calculetedChecker = this.calcChecker(digitsWithoutChecker, weights);\n    return digitsChecker === calculetedChecker;\n  }\n\n  private static getOnlyNumbers(digits: string): string {\n    return digits.replace(/\\D/g, '');\n  }\n\n  private static isAllTheSameDigits(digits: string): boolean {\n    return !digits.split('').some(digit => digit !== digits[0]);\n  }\n\n  private static calcChecker(digits: string, weights: number[]): string {\n    const digitsLength = digits.length;\n    const digitsLengthWithoutChecker = weights.length - 1;\n\n    const sum = digits\n      .split('')\n      .reduce(\n        (acc, digit, idx) => acc + +digit * weights[digitsLength - 1 - idx],\n        0,\n      );\n    const sumDivisionRemainder = sum % 11;\n    const checker = sumDivisionRemainder < 2 ? 0 : 11 - sumDivisionRemainder;\n\n    if (digitsLength === digitsLengthWithoutChecker) {\n      return this.calcChecker(`${digits}${checker}`, weights);\n    }\n\n    return `${digits[digitsLength - 1]}${checker}`;\n  }\n}\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .inputs {\n    height: 650px;\n    flex-wrap: wrap;\n    display: flex;\n  }\n\n  button {\n    width: 300px;\n    float: right;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-top: 36px;\n\n  margin-right: 46px;\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n","import React, { useCallback, useRef } from 'react';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport FormattedInput from '../../components/FormattedInput';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport CpfCnpjUtils from '../../utils/CpfCnpjUtils';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { Container, Content, Separator, InputContainer } from './styles';\n\ninterface IFormData {\n  companyName: string;\n  companyTelephone: string;\n  companyCnpj: string;\n  companyIdentifier: string;\n}\n\nconst CompaniesRegister = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, { reset }) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          companyName: Yup.string().required(\n            'Nome da concessionária obrigatório',\n          ),\n          companyTelephone: Yup.string()\n            .required('Telefone da concessionária obrigatório')\n            .min(9, 'O telefone deve ter no mínimo 9 dígitos')\n            .max(11, 'O telefone deve ter no máximo 11 dígitos'),\n          companyCnpj: Yup.string()\n            .required('Cnpj da concessionária obrigatório')\n            .length(14, 'O CNPJ deve ter 14 dígitos.'),\n          companyIdentifier: Yup.string()\n            .required('Identificador da concessionária obrigatório')\n            .length(2, 'Identificador da concessionária deve ter 2 dígitos.'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const isCnpjValid = CpfCnpjUtils.isCnpjValid(data.companyCnpj);\n\n        if (isCnpjValid !== true) {\n          formRef.current?.setErrors({ companyCnpj: 'Cnpj inválido.' });\n          return;\n        }\n\n        const response = await api.post('companies', {\n          name: data.companyName,\n          telephone: data.companyTelephone,\n          cnpj: data.companyCnpj,\n          client_identifier: data.companyIdentifier,\n        });\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Cadastro realizado com sucesso.',\n            type: 'success',\n            description:\n              'Agora você já pode registrar unidades, vendedores e gerentes a essa concessionária.',\n          });\n\n          reset();\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          title: 'Não foi possível realizar o caadastro.',\n          description:\n            'Essa concessionária já foi criada ou ocorreu um erro, tente novamente.',\n          type: 'error',\n        });\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Adicionar novas concessionárias\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Cadastro de concessionárias</span>\n          <div />\n        </Separator>\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <div className=\"inputs\">\n            <InputContainer>\n              <div className=\"labels\">\n                <span>Nome da concessionária:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"companyName\"\n                type=\"companyName\"\n                name=\"companyName\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <div className=\"labels\">\n                <span>Telefone da concessionária:</span>\n                <span>*</span>\n              </div>\n\n              <FormattedInput\n                className=\"input\"\n                id=\"companyTelephone\"\n                name=\"companyTelephone\"\n                format=\"## #####-####\"\n                mask=\"_\"\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <div className=\"labels\">\n                <span>Cnpj da concessionária:</span>\n                <span>*</span>\n              </div>\n\n              <FormattedInput\n                className=\"input\"\n                style={{ width: '30px' }}\n                id=\"companyCnpj\"\n                name=\"companyCnpj\"\n                mask=\"_\"\n                format=\"##.###.###/####-##\"\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <div className=\"labels\">\n                <span>Identificador da concessionária:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"companyIdentifier\"\n                type=\"companyIdentifier\"\n                name=\"companyIdentifier\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n          </div>\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default CompaniesRegister;\n","import { Box as ChakraBox, Flex } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const InputContainer = styled(Flex)`\n  width: 100%;\n  max-width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 12px;\n`;\n\nexport const Content = styled(Flex)`\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ButtonsContainer = styled(Flex)`\n  max-width: 400px;\n  width: 100%;\n\n  button {\n    background: transparent;\n    border: 2px solid #355a9d;\n\n    & + button {\n      border: 0px;\n      margin-left: 12px;\n      background-color: #355a9d;\n    }\n  }\n`;\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: '#444242';\n`;\n","import React, { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { FiLock } from 'react-icons/fi';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Flex, Text } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { ButtonsContainer, Container, Content, InputContainer } from './styles';\n\ninterface IUpdatePasswordForm {\n  password: string;\n  confirmPassword: string;\n}\n\ninterface IStateLocation {\n  comingFromLogin: boolean;\n}\n\nconst FirstLogin: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<IStateLocation>();\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  useEffect(() => {\n    if (!location?.state?.comingFromLogin) {\n      history.push('/services');\n    }\n  }, [history, location]);\n\n  const updatePassword = async (data: IUpdatePasswordForm) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        password: Yup.string()\n          .min(8, 'A senha deve conter no mínimo 8 caracteres.')\n          .required('Senha obrigatória'),\n        confirmPassword: Yup.string()\n          .min(8, 'A senha deve conter no mínimo 8 caracteres.')\n          .required()\n          .oneOf(\n            [Yup.ref('password')],\n            'As senhas digitadas devem ser iguais.',\n          ),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n\n      await api.patch('/users/change-password', {\n        newPassword: data.confirmPassword,\n      });\n\n      history.push('services');\n\n      addToast({ title: 'Senha redefinida com sucesso.', type: 'success' });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationsErrors(err);\n\n        formRef.current?.setErrors(errors);\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Content\n        width={{\n          xs: '90%',\n          sm: '90%',\n          md: '70%',\n          lg: '60%',\n          xl: '40%',\n        }}\n        height=\"500px\"\n        backgroundColor=\"#1d1d1d\"\n        borderRadius={26}\n        paddingY={{\n          xs: 46,\n          sm: 46,\n          md: 46,\n          lg: 46,\n          xl: 46,\n        }}\n        paddingX={{\n          xs: 4,\n          sm: 8,\n          md: 80,\n          lg: 80,\n          xl: 80,\n        }}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n      >\n        <Flex\n          marginBottom={8}\n          w={20}\n          h={20}\n          bg=\"#355a9d\"\n          borderRadius=\"full\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <FiLock size={32} />\n        </Flex>\n\n        <Text marginBottom={2} fontSize={14}>\n          Altere sua senha!\n        </Text>\n\n        <Text marginBottom={8} color=\"#8e8e8e\" fontSize={14}>\n          Antes de começar a usar o sistema, redefina sua senha.\n        </Text>\n\n        <Form ref={formRef} onSubmit={updatePassword}>\n          <InputContainer>\n            <Input\n              className=\"input\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Nova Senha\"\n              icon={FiLock}\n            />\n          </InputContainer>\n\n          <InputContainer>\n            <Input\n              className=\"input\"\n              id=\"confirmPassword\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirmar Nova Senha\"\n              icon={FiLock}\n            />\n          </InputContainer>\n\n          <ButtonsContainer justifyContent=\"space-between\">\n            <Button skipButton onClick={() => history.push('/services')}>\n              Manter senha atual\n            </Button>\n            <Button type=\"submit\">Alterar</Button>\n          </ButtonsContainer>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default FirstLogin;\n","import styled from 'styled-components';\n\nimport signInBackgroundImg from '../../assets/sign-in-background-6.jpg';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #282828;\n  padding-bottom: 6%;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    max-width: 60%;\n  }\n\n  form {\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n\n  filter: grayscale(85%);\n`;\n","import React, { useRef, useCallback } from 'react';\nimport { FiLock, FiUser } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { Image } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Logo from '../../assets/Nanotech/Logo.png';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { Container, Content, Background } from './styles';\n\ninterface ISignInFormData {\n  username: string;\n  password: string;\n}\n\nconst Login = () => {\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ISignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          username: Yup.string().required('Usuário obrigatório'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const res = await signIn({\n          username: data.username,\n          password: data.password,\n        });\n\n        addToast({ title: 'Login realizado', type: 'success' });\n\n        if (res.user.first_login) {\n          history.push({\n            pathname: '/first-login',\n            state: {\n              comingFromLogin: true,\n            },\n          });\n\n          return;\n        }\n\n        history.push('/services');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Erro ao fazer login',\n          type: 'error',\n          description: 'Erro ao autenticar usuário, credenciais inválidas',\n        });\n      }\n    },\n    [addToast, history, signIn],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Image src={Logo}></Image>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Input\n            className=\"input\"\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Usuário\"\n            icon={FiUser}\n          />\n\n          <Input\n            className=\"input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Senha\"\n            icon={FiLock}\n          />\n          <Button type=\"submit\">Entrar</Button>\n        </Form>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default Login;\n","import styled from 'styled-components';\n\nimport backgroundPattern from '../../assets/Pattern-Developing-Page.svg';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: url(${backgroundPattern});\n\n  .box {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background: #282828;\n    padding: 70px 90px;\n    border-radius: 20px;\n    h1 {\n      font-size: 40px;\n      color: #ced4da;\n      font-family: 'Ubuntu';\n      margin-bottom: 30px;\n    }\n\n    p {\n      font-family: 'Ubuntu';\n      color: #ced4da;\n      font-size: 20px;\n    }\n\n    button {\n      margin-top: 30px;\n    }\n  }\n`;\n","import React from 'react';\nimport { BiErrorAlt } from 'react-icons/bi';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from '../../components/Button';\nimport { Container } from './styles';\n\nconst NotFound = () => {\n  const history = useHistory();\n  return (\n    <Container>\n      <div className=\"box\">\n        <BiErrorAlt color=\"#355a9d\" size={200} />\n        <h1>Ooooops...</h1>\n        <p>Essa página não exist.</p>\n        <Button skipButton onClick={() => history.push('services')}>\n          Voltar ao início\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import { Box, DefaultTheme } from '@chakra-ui/core';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\n\ninterface IContainerProps {\n  theme: DefaultTheme;\n  isErrored: boolean;\n}\n\nexport const Container = styled(Box)<IContainerProps>`\n  --errored-box-shadow: 0 0 0 3px\n    ${props => transparentize(0.4, props.theme.colors.red[500])};\n  ${props =>\n    props.isErrored &&\n    css`\n      box-shadow: var(--errored-box-shadow);\n    `}\n`;\n","export default function formatWeekDay(originalWeekDay: string): string {\n  switch (originalWeekDay) {\n    case 'Sunday':\n      return 'Dom';\n    case 'Monday':\n      return 'Seg';\n    case 'Tuesday':\n      return 'Ter';\n    case 'Thursday':\n      return 'Quar';\n    case 'Wednesday':\n      return 'Qui';\n    case 'Friday':\n      return 'Sex';\n    case 'Saturday':\n      return 'Sáb';\n    default:\n      return 'Ind';\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nimport { PseudoBoxProps as ChakraPseudoBoxProps } from '@chakra-ui/core';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\nimport formatWeekDay from './utils/formatWeekDay';\n\ninterface IDatePickerProps extends Omit<ReactDatePickerProps, 'onChange'> {\n  name: string;\n  onChange?: (\n    date: Date | [Date, Date] | null,\n    event: React.SyntheticEvent<any> | undefined,\n  ) => void;\n  containerProps?: ChakraPseudoBoxProps;\n  initialDate?: Date;\n}\nconst DatePicker: React.FC<IDatePickerProps> = ({\n  name,\n  containerProps,\n  initialDate,\n  ...rest\n}) => {\n  const datePickerRef = useRef<ReactDatePicker>(null);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const [selected, setSelected] = useState(defaultValue);\n\n  useEffect(() => {\n    setSelected(initialDate);\n  }, [initialDate]);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: datePickerRef.current,\n      path: 'props.selected',\n      clearValue() {\n        setSelected('');\n      },\n      setValue(ref, value) {\n        setSelected(value);\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container borderRadius=\"md\" isErrored={!!error} {...containerProps}>\n      <ReactDatePicker\n        ref={datePickerRef}\n        selected={selected}\n        showPopperArrow={false}\n        dateFormat=\"dd/MM/yyyy\"\n        formatWeekDay={formatWeekDay}\n        placeholderText=\"Data\"\n        onChange={date => {\n          setSelected(date);\n        }}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default DatePicker;\n","import { Box, DefaultTheme } from '@chakra-ui/core';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\ninterface IContainerProps {\n  theme: DefaultTheme;\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled(Box)<IContainerProps>`\n  --base-color: #718096;\n  --text-color-focused: #4a5568;\n  --focused-box-shadow: 0 0 0 3px transparentize(0.4, #4a5568);\n  --errored-box-shadow: 0 0 0 3px transparentize(0.4, #e53e3e);\n\n  color: var(--base-color);\n  cursor: text;\n\n  display: flex;\n  align-items: center;\n\n  transition: box-shadow 0.2s;\n\n  ${props =>\n    props.isErrored &&\n    css`\n      box-shadow: #e53e3e;\n      border-color: #e53e3e;\n    `}\n\n  ${props =>\n    props.isFocused &&\n    css`\n      box-shadow: var(--focused-box-shadow);\n      color: var(--text-color-focused) !important;\n    `}\n\n  ${props =>\n    props.isFilled &&\n    css`\n      color: var(--text-color-focused) !important;\n    `}\n\n  svg {\n    margin-right: 16px;\n  }\n\n  input {\n    flex: 1;\n    height: 100%;\n    background: transparent;\n    border: 0;\n    color: var(--text-color-focused);\n\n    &::placeholder {\n      color: var(--base-color);\n    }\n  }\n`;\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\n\nimport {\n  Select as ChakraSelect,\n  SelectProps as ChakraSelectProps,\n  PseudoBoxProps as ChakraPseudoBoxProps,\n} from '@chakra-ui/core';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\n\ninterface ISelectProps extends ChakraSelectProps {\n  name: string;\n  containerProps?: ChakraPseudoBoxProps;\n}\n\nconst ReactSelect: React.FC<ISelectProps> = ({\n  name,\n  children,\n  containerProps,\n  ...rest\n}) => {\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!selectRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      isFocused={isFocused}\n      isFilled={isFilled}\n      isErrored={!!error}\n      width=\"100%\"\n      height={12}\n      borderRadius=\"md\"\n      paddingLeft={4}\n      {...containerProps}\n      onClick={() => {\n        selectRef.current?.focus();\n      }}\n    >\n      <ChakraSelect\n        defaultValue={defaultValue}\n        bg=\"green.50\"\n        border={0}\n        focusBorderColor=\"none\"\n        paddingLeft={0}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        ref={selectRef}\n        {...rest}\n      >\n        {children}\n      </ChakraSelect>\n    </Container>\n  );\n};\n\nexport default ReactSelect;\n","import { Box } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(Box)`\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface IInterfaceProps {\n  text: string;\n}\n\nconst Separator: React.FC<IInterfaceProps> = ({ text }) => (\n  <Container\n    maxWidth={{\n      xs: '90vw',\n      sm: '90vw',\n      md: '90vw',\n      lg: '78vw',\n      xl: '90vw',\n    }}\n  >\n    <span>{text}</span>\n    <div />\n  </Container>\n);\n\nexport default Separator;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiLoader } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Flex, Button as ChakraButton } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport DatePicker from '../../components/DatePicker';\nimport Menu from '../../components/Menu';\nimport Select from '../../components/Select';\nimport Separator from '../../components/Separator';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport { Container } from './styles';\n\ninterface ICompaniesResponseData {\n  id: number;\n  name: string;\n  telephone: string;\n  cnpj: string;\n  units: Array<{ id: number; name: string; telephone: string }>;\n}\n\ninterface IService {\n  id: number;\n  name: string;\n  price: number;\n  enabled: boolean;\n}\n\ninterface IFormData {\n  company: string;\n  service: string;\n  initialDate: Date;\n  finalDate: Date;\n  status?: 'PENDING' | 'CONFIRMED' | 'CANCELED' | 'FINISHED';\n}\n\ninterface IGetReportResponseData {\n  url_to_download: string;\n  destroysIn: number;\n}\n\nconst Reports: React.FC = () => {\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n  const { user } = useAuth();\n  const { addToast } = useToast();\n\n  const [companies, setCompanies] = useState<ICompaniesResponseData[]>([]);\n  const [services, setServices] = useState<IService[]>([]);\n  const [isReportLoading, setIsReportLoading] = useState(false);\n\n  useEffect(() => {\n    if (user.role === 'ADMIN') {\n      api.get('companies').then(response => {\n        const newCompanies: ICompaniesResponseData[] = response.data;\n\n        setCompanies(newCompanies);\n      });\n    }\n\n    api.get('services').then(response => {\n      const newServices: IService[] = response.data;\n\n      setServices(newServices);\n    });\n  }, [user.role]);\n\n  const handleGetReport = useCallback(\n    async (data: IFormData) => {\n      setIsReportLoading(true);\n\n      const reqData = {\n        initialDate: data.initialDate,\n        finalDate: data.finalDate,\n        ...(data.status && { status: data.status }),\n      };\n\n      data.service.split('').length >= 1 &&\n        Object.assign(reqData, {\n          service: data.service,\n        });\n\n      const file = await api.get<IGetReportResponseData>(\n        '/sales/sales-report',\n        {\n          params: reqData,\n        },\n      );\n\n      setTimeout(() => {\n        setIsReportLoading(false);\n        formRef.current?.reset();\n\n        window.open(file.data.url_to_download, '_blank', 'noopener,noreferrer');\n\n        history.push('services');\n\n        addToast({\n          title: 'Relatório exportado com sucesso.',\n          description: 'Verifique no local de download escolhido.',\n          type: 'success',\n        });\n      }, 1000);\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Relatórios\" />\n      <Flex\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100%\"\n      >\n        <Box\n          marginLeft=\"auto\"\n          marginRight=\"auto\"\n          width=\"100%\"\n          maxWidth={{\n            xs: '90vw',\n            sm: '90vw',\n            md: '80vw',\n            lg: '78vw',\n            xl: '90vw',\n          }}\n        >\n          <Separator text=\"Filtros\" />\n          <Form ref={formRef} onSubmit={handleGetReport}>\n            <Flex marginBottom={8}>\n              {user.role === 'ADMIN' && (\n                <Select\n                  name=\"company\"\n                  height={8}\n                  backgroundColor=\"#424242\"\n                  color=\"White\"\n                  placeholder=\"Concessionárias\"\n                  containerProps={{\n                    marginTop: 6,\n                    marginRight: 8,\n                    width: 300,\n                    height: 10,\n                    border: '2px solid',\n                    borderColor: '#585858',\n                    backgroundColor: '#424242',\n                  }}\n                >\n                  {companies.map(company => (\n                    <option value={company.id} key={company.id}>\n                      {company.name}\n                    </option>\n                  ))}\n                </Select>\n              )}\n\n              <Select\n                name=\"service\"\n                height={8}\n                backgroundColor=\"#424242\"\n                color=\"White\"\n                placeholder=\"Serviços\"\n                containerProps={{\n                  marginTop: 6,\n                  marginRight: 6,\n                  width: 300,\n                  height: 10,\n                  border: '2px solid',\n                  borderColor: '#585858',\n                  backgroundColor: '#424242',\n                }}\n              >\n                {services.map(service => (\n                  <option value={service.id} key={service.id}>\n                    {service.name}\n                  </option>\n                ))}\n              </Select>\n\n              <Flex marginTop={6}>\n                <DatePicker\n                  placeholderText=\"Data inicial\"\n                  name=\"initialDate\"\n                  containerProps={{\n                    marginRight: 6,\n                  }}\n                />\n                <DatePicker placeholderText=\"Data final\" name=\"finalDate\" />\n              </Flex>\n\n              <Select\n                name=\"status\"\n                height={8}\n                backgroundColor=\"#424242\"\n                color=\"White\"\n                placeholder=\"Status\"\n                containerProps={{\n                  marginTop: 6,\n                  marginLeft: 6,\n                  width: 300,\n                  height: 10,\n                  border: '2px solid',\n                  borderColor: '#585858',\n                  backgroundColor: '#424242',\n                }}\n              >\n                <option value=\"PENDING\">Pendente</option>\n                <option value=\"CONFIRMED\">Confirmado</option>\n                <option value=\"CANCELED\">Cancelado</option>\n                <option value=\"FINISHED\">Finalizado</option>\n              </Select>\n            </Flex>\n\n            <Flex>\n              <ChakraButton\n                isDisabled={isReportLoading}\n                width=\"100%\"\n                backgroundColor=\"#355a9d\"\n                _hover={{\n                  backgroundColor: '#5580b9',\n                }}\n                type=\"submit\"\n              >\n                {isReportLoading ? <FiLoader /> : 'Gerar arquivo'}\n              </ChakraButton>\n            </Flex>\n          </Form>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default Reports;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n\n  @media (max-width: 1224px) {\n    margin-top: 26px;\n  }\n\n  nav > ul > li {\n    .MuiPaginationItem-root {\n      color: #fff;\n    }\n\n    .MuiPaginationItem-page.Mui-selected {\n      background-color: #355a9d;\n    }\n  }\n`;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { Container } from './styles';\n\ninterface IPaginationProps {\n  total_pages: number;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst IPagination: React.FC<IPaginationProps> = ({\n  total_pages,\n  page,\n  setPage,\n}) => (\n  <Container\n    backgroundColor=\"#303030\"\n    width=\"100%\"\n    color=\"#eee\"\n    display=\"flex\"\n    padding=\"15px\"\n    height=\"50px\"\n    borderRadius=\"15px\"\n    fontWeight=\"bold\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n  >\n    <Pagination\n      count={total_pages + 1}\n      page={page + 1}\n      onChange={(_e, j) => setPage(j - 1)}\n    />\n  </Container>\n);\n\nexport default IPagination;\n","export default function formatMoney(value: number) {\n  try {\n    return Number(value).toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    });\n  } catch (e) {\n    return value.toString();\n  }\n}\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 5% 14% 13% 13% 18% 18% 14% 5%;\n    align-items: center;\n    justify-content: center;\n    padding-left: 10px;\n\n    margin-top: 12px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n\n    span {\n      font: 16px 'Ubuntu', sans-serif;\n      font-weight: bold;\n    }\n  }\n  div.updateSaleContainer {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n\n    button {\n      & + button {\n        width: 50px;\n        margin-left: 2rem;\n      }\n\n      width: 250px;\n      height: 40px;\n      margin-top: 36px;\n    }\n\n    .SelectContainer {\n      width: 250px;\n      div.labels {\n        background: transparent;\n        border: 0;\n        display: flex;\n        justify-content: space-between;\n        margin-top: 5px;\n\n        span {\n          font: 18px 'Ubuntu', sans-serif;\n          margin-left: 4px;\n          font-weight: 400;\n          color: #eee;\n\n          & + span {\n            color: #ff6f60;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 14px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n`;\n\nexport const Box = styled(ChakraBox)`\n  width: 100%;\n\n  & + div {\n    margin-top: 16px;\n  }\n\n  div.header {\n    padding-left: 10px;\n    display: grid;\n    width: 100%;\n    grid-template-columns: 5% 14% 13% 13% 18% 18% 14% 5%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 15px 15px 0 0;\n\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 200;\n      div {\n        margin-right: 6px;\n        border-radius: 50%;\n        width: 12px;\n        height: 12px;\n      }\n    }\n  }\n\n  div.header-selected {\n    padding-left: 10px;\n    display: grid;\n    width: 100%;\n    grid-template-columns: 5% 14% 13% 13% 18% 18% 14% 5%;\n    align-items: center;\n    justify-content: center;\n\n    border: 2px solid #355a9d;\n    background: #303030;\n    height: 60px;\n    border-radius: 15px 15px 0 0;\n\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n      div {\n        margin-right: 6px;\n        border-radius: 50%;\n        width: 12px;\n        height: 12px;\n      }\n    }\n  }\n\n  div.status {\n    div.FINISHED {\n      background: #94ec94;\n    }\n\n    div.CANCELED {\n      background: #ff6f60;\n    }\n\n    div.PENDING {\n      background: #ffffa8;\n    }\n\n    div.CONFIRMED {\n      background: #5eb8ff;\n    }\n  }\n\n  .dropDown {\n    width: 100%;\n    background: #353535;\n    border-radius: 0 0 15px 15px;\n    padding: 10px 16px 20px 16px;\n\n    div.separator {\n      margin-top: 5px;\n      span {\n        font: 16px 'Ubuntu', sans-serif;\n      }\n    }\n\n    div.service {\n      width: 100%;\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 50% 50%;\n      align-items: center;\n      & + div {\n        margin-top: 8px;\n      }\n    }\n\n    div.details {\n      width: 100%;\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: flex;\n      align-items: center;\n\n      & + div {\n        margin-top: 8px;\n      }\n\n      span + span {\n        margin-left: 16px;\n      }\n    }\n\n    div.total {\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 50% 50%;\n      align-items: center;\n      & + div {\n        margin-top: 8px;\n      }\n    }\n  }\n`;\n","import React, {\n  useRef,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from 'react-icons/fa';\nimport { FiSearch, FiTrash } from 'react-icons/fi';\n\nimport {\n  Button as ChakraButton,\n  Tooltip,\n  Text,\n  Box as ChakraBox,\n  Flex as ChakraFlex,\n  Skeleton,\n  Stack,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport DatePicker from '../../components/DatePicker';\nimport Menu from '../../components/Menu';\nimport Pagination from '../../components/Pagination';\n// import Header from '../../components/Header';\nimport Select from '../../components/Select';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport formatMoney from '../../utils/formatMoney';\nimport getSaleStatusTranslated from '../../utils/getSaleStatusTranslated';\nimport { Container, Content, Separator, List, Box } from './styles';\n\ninterface ISaleRequestResponseData {\n  id: string;\n  client_identifier: string;\n  availability_date: string;\n  delivery_date: string;\n  status: string;\n  company_value: number;\n  cost_value: number;\n  comments: string;\n  unit: {\n    id: string;\n    client_identifier: string;\n    name: string;\n  };\n  seller: {\n    name: string;\n    company: {\n      id: string;\n      client_identifier: string;\n    };\n  };\n  person: {\n    name: string;\n  };\n  car: {\n    brand: string;\n    plate: string;\n    color: string;\n    model: string;\n  };\n  services_sales: Array<{\n    id: string;\n    company_value: number;\n    cost_value: number;\n    service: {\n      id: string;\n      name: string;\n      price: number;\n    };\n  }>;\n  request_date: string;\n}\n\ninterface IFormDataFilter {\n  date: Date;\n  status: string;\n}\n\ninterface IFilters {\n  status?: string;\n  date?: Date;\n}\n\nconst Sales = () => {\n  const { user } = useAuth();\n  const { addToast } = useToast();\n  const formRef = useRef<FormHandles>(null);\n  const searchFormRef = useRef<FormHandles>(null);\n\n  const [sales, setSales] = useState<ISaleRequestResponseData[]>([]);\n  const [openedServices, setOpenedServices] = useState<string[]>([]);\n  const [selectedSales, setSelectedSales] = useState<string[]>([]);\n\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const [currentPage, setCurrentPage] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(0);\n\n  const [filters, setFilters] = useState<IFilters>({});\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    api\n      .get('sales', {\n        params: {\n          page: currentPage,\n          ...filters,\n        },\n      })\n      .then(response => {\n        const { data } = response;\n\n        setSales(data?.items);\n        setTotalPages(data?.total_pages);\n        setLoading(false);\n      });\n  }, [user, currentPage, filters]);\n\n  const formattedSales = useMemo(\n    () =>\n      sales?.map(sale => {\n        const services: Array<{\n          id: string;\n          name: string;\n          price: string;\n        }> = [];\n        if (user?.role === 'ADMIN') {\n          sale.services_sales.forEach(service => {\n            services.push({\n              id: service.service.id,\n              name: service.service.name,\n              price: formatMoney(service.cost_value),\n            });\n            return services;\n          });\n        } else {\n          sale.services_sales.forEach(service => {\n            services.push({\n              id: service.service.id,\n              name: service.service.name,\n              price: formatMoney(service.company_value),\n            });\n          });\n        }\n\n        return {\n          id: sale.id,\n          client_id: `${sale.seller.company.client_identifier}${sale.unit.client_identifier}${sale.client_identifier}`,\n          seller: sale.seller.name,\n          customer: sale.person.name,\n          comments: sale.comments,\n          car: `${sale.car.brand} ${sale.car.model}`,\n          carPlate: sale.car.plate,\n          company_value: sale.company_value,\n          cost_value: sale.cost_value,\n          availability_date: sale.availability_date,\n          delivery_date: sale.delivery_date,\n          status: sale.status,\n          services,\n          unit: sale.unit.name,\n          request_date: sale.request_date,\n        };\n      }),\n    [sales, user],\n  );\n\n  const handleOpenServices = useCallback(\n    (id: string) => {\n      setOpenedServices([...openedServices, id]);\n    },\n    [openedServices],\n  );\n\n  const handleCloseServices = useCallback(\n    (id: string) => {\n      const newopenedServices = openedServices.filter(\n        serviceId => serviceId !== id,\n      );\n\n      setOpenedServices(newopenedServices);\n    },\n    [openedServices],\n  );\n\n  const handleSelectSale = useCallback(\n    (id: string) => {\n      if (selectedSales?.includes(id)) {\n        if (selectedSales.length === 1) {\n          setSelectedSales([]);\n\n          return;\n        }\n\n        const newSelectedSaless = selectedSales.filter(sale => sale !== id);\n\n        setSelectedSales(newSelectedSaless);\n\n        return;\n      }\n\n      if (selectedSales) {\n        setSelectedSales([...selectedSales, id]);\n        return;\n      }\n\n      setSelectedSales([id]);\n    },\n    [selectedSales],\n  );\n\n  const handleUpdateSale = useCallback(\n    async data => {\n      if (selectedSales.length < 1) {\n        addToast({\n          title: 'Não é possível alterar a situação da venda.',\n          description: 'Por favor selecione alguma venda.',\n          type: 'error',\n        });\n\n        return;\n      }\n\n      if (!data.statusSale) {\n        addToast({ title: 'Campo de situação da venda vazio.', type: 'error' });\n        return;\n      }\n\n      const response = await api.patch('sales/status/', {\n        status: data.statusSale,\n        sales: selectedSales,\n      });\n\n      if (response.status === 200) {\n        setSelectedSales([]);\n        addToast({\n          title: 'Sucesso',\n          description: 'Situação da venda alterada com sucesso',\n          type: 'success',\n        });\n\n        const res = await api.get('sales', {\n          params: { page: currentPage },\n        });\n\n        setSales(res.data.items);\n      }\n    },\n    [addToast, currentPage, selectedSales],\n  );\n\n  const handleSearchSale = useCallback(\n    async ({ date, status }: IFormDataFilter) => {\n      let query = {};\n\n      if (!date && !status) {\n        addToast({\n          title: 'Por favor preencha algum campo para realizar a pesquisa.',\n          type: 'error',\n        });\n\n        return;\n      }\n\n      if (date && status) {\n        if (status === 'ALL') {\n          query = { date };\n        } else {\n          query = { date, status };\n        }\n      }\n\n      if (date && !status) {\n        query = { date };\n      }\n\n      if (status && !date && status !== 'ALL') {\n        query = { status };\n      }\n\n      setFilters(query);\n      setCurrentPage(0);\n    },\n    [addToast],\n  );\n\n  const handleRemoveFilters = useCallback(async () => {\n    const salesWithoutFilter = await api.get('sales', {\n      params: { page: currentPage },\n    });\n\n    setTotalPages(salesWithoutFilter.data.total_pages);\n    const { items } = salesWithoutFilter.data;\n\n    searchFormRef.current?.reset();\n\n    setSales(items);\n    setTotalPages(salesWithoutFilter.data.total_pages);\n    setCurrentPage(salesWithoutFilter.data.current_page);\n\n    setFilters({});\n  }, [currentPage]);\n\n  const handleDeleteSales = useCallback(async () => {\n    setDeleteLoading(true);\n    try {\n      const response = await api.delete<{\n        message: string;\n        errors: Array<{ id: string; message: string }>;\n      }>('/sales', {\n        data: {\n          ids: selectedSales,\n        },\n      });\n\n      response.data.errors.forEach(error => {\n        addToast({\n          type: 'error',\n          title: `Não foi possível excluir a venda n° ${error.id}`,\n        });\n      });\n\n      const notDeletedSales = response.data.errors.map(err => err.id);\n\n      setSelectedSales(notDeletedSales);\n\n      const res = await api.get('sales', { params: { page: currentPage } });\n\n      setSales(res.data.items);\n      setTotalPages(res.data.total_pages);\n      setCurrentPage(res.data.current_page);\n\n      addToast({ type: 'success', title: 'Venda(s) excluída(s) com sucesso' });\n    } catch (e) {\n      addToast({ type: 'error', title: 'Erro' });\n    }\n\n    setDeleteLoading(false);\n  }, [selectedSales, addToast, currentPage]);\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Vendas realizadas\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        marginTop=\"26px\"\n        paddingBottom=\"16px\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Form\n          ref={searchFormRef}\n          onSubmit={handleSearchSale}\n          style={{ display: 'flex', marginBottom: '36px' }}\n        >\n          <DatePicker\n            name=\"date\"\n            placeholderText=\"Filtrar por data de disponibilidade\"\n            containerProps={{\n              width: 300,\n              height: 10,\n            }}\n          />\n\n          <Select\n            placeholder=\"Filtrar por situação\"\n            height={8}\n            backgroundColor=\"#424242\"\n            color=\"White\"\n            name=\"status\"\n            containerProps={{\n              marginLeft: 4,\n              width: 225,\n              height: 10,\n              border: '2px solid',\n              borderColor: '#585858',\n              backgroundColor: '#424242',\n            }}\n          >\n            <option value=\"ALL\">Todos</option>\n            <option value=\"PENDING\">Pendente</option>\n            <option value=\"CONFIRMED\">Confirmado</option>\n            <option value=\"CANCELED\">Cancelado</option>\n            <option value=\"FINISHED\">Finalizado</option>\n          </Select>\n\n          <Tooltip label=\"Filtrar vendas\" aria-label=\"Filtrar vendas\">\n            <ChakraButton\n              _hover={{\n                bg: '#5580b9',\n                color: '#fff',\n              }}\n              _focusWithin={{\n                border: 0,\n              }}\n              height=\"40px\"\n              backgroundColor=\"#355a9d\"\n              marginLeft={4}\n              type=\"submit\"\n            >\n              <FiSearch />\n            </ChakraButton>\n          </Tooltip>\n\n          <Tooltip label=\"Limpar filtros\" aria-label=\"Limpar filtros\">\n            <ChakraButton\n              _hover={{\n                bg: '#4e4e4e',\n              }}\n              _focusWithin={{\n                border: 0,\n              }}\n              height=\"40px\"\n              backgroundColor=\"#454545\"\n              marginLeft={4}\n              onClick={handleRemoveFilters}\n            >\n              Limpar filtros\n            </ChakraButton>\n          </Tooltip>\n        </Form>\n\n        <Separator>\n          <span>Vendas</span>\n          <div />\n        </Separator>\n\n        <div className=\"boxTitle\">\n          <span>N°</span>\n          <span>Vendedor</span>\n          <span>Carro</span>\n          <span>Placa</span>\n          <span>Data de disponibilidade</span>\n          <span>Data de entrega</span>\n          <span>Situação</span>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List width=\"100%\" marginTop={4} paddingBottom={16}>\n              {formattedSales.map(sale => (\n                <Box\n                  key={sale.id}\n                  onClick={\n                    user?.role === 'ADMIN'\n                      ? () => handleSelectSale(sale.id)\n                      : undefined\n                  }\n                >\n                  <div\n                    className={\n                      selectedSales.includes(sale.id)\n                        ? 'header-selected'\n                        : 'header'\n                    }\n                    style={\n                      openedServices.includes(sale.id)\n                        ? {\n                            borderRadius: '15px 15px 0 0',\n                            borderBottom: 0,\n                            cursor: 'pointer',\n                          }\n                        : { borderRadius: '15px', cursor: 'pointer' }\n                    }\n                  >\n                    <span>{sale.client_id}</span>\n                    <span>{sale.seller}</span>\n                    <span>{sale.car}</span>\n                    <span>{sale.carPlate}</span>\n                    <span>\n                      {format(\n                        new Date(sale.availability_date),\n                        \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n                        { locale: ptBR },\n                      )}\n                    </span>\n                    <span>\n                      {format(\n                        new Date(sale.delivery_date),\n                        \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n                        { locale: ptBR },\n                      )}\n                    </span>\n                    <div className=\"status\">\n                      <span>\n                        <div className={sale.status} />\n                        {getSaleStatusTranslated(sale.status)}\n                      </span>\n                    </div>\n\n                    {openedServices.includes(sale.id) ? (\n                      <FaArrowAltCircleUp\n                        onClick={e => {\n                          e.stopPropagation();\n                          handleCloseServices(sale.id);\n                        }}\n                        style={{ cursor: 'pointer' }}\n                        size={26}\n                      />\n                    ) : (\n                      <FaArrowAltCircleDown\n                        onClick={e => {\n                          e.stopPropagation();\n                          handleOpenServices(sale.id);\n                        }}\n                        style={{ cursor: 'pointer' }}\n                        size={26}\n                      />\n                    )}\n                  </div>\n\n                  <div\n                    className=\"dropDown\"\n                    hidden={!openedServices.includes(sale.id)}\n                    style={\n                      selectedSales.includes(sale.id)\n                        ? { border: '2px solid #355a9d', borderTop: 0 }\n                        : { border: 0 }\n                    }\n                  >\n                    <Separator className=\"separator\">\n                      <span>Detalhes</span>\n                      <div />\n                    </Separator>\n                    <ChakraFlex>\n                      <ChakraBox width=\"70%\">\n                        <div className=\"details\">\n                          <span>\n                            <strong>Unidade:</strong> {` ${sale.unit}`}\n                          </span>\n                          <span>\n                            <strong>Data do pedido: </strong>\n                            {format(\n                              new Date(sale.request_date),\n                              \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n                              { locale: ptBR },\n                            )}\n                          </span>\n                        </div>\n                        <Separator className=\"separator\">\n                          <span style={{ fontSize: '14px' }}>Serviços</span>\n                          <div />\n                        </Separator>\n                        {sale.services.map(service => (\n                          <div className=\"service\" key={service.id}>\n                            <span>{service.name}</span>\n                            <span>{service?.price}</span>\n                          </div>\n                        ))}\n                        <div className=\"total\">\n                          <span>Total</span>\n                          <span>\n                            {user?.role === 'ADMIN'\n                              ? Number(sale.cost_value).toLocaleString(\n                                  'pt-br',\n                                  {\n                                    style: 'currency',\n                                    currency: 'BRL',\n                                  },\n                                )\n                              : Number(sale.company_value).toLocaleString(\n                                  'pt-br',\n                                  {\n                                    style: 'currency',\n                                    currency: 'BRL',\n                                  },\n                                )}\n                          </span>\n                        </div>\n                      </ChakraBox>\n                      <ChakraFlex\n                        wordBreak=\"break-all\"\n                        marginTop=\"16px\"\n                        marginLeft={2}\n                        borderRadius=\"md\"\n                        width=\"30%\"\n                        padding={6}\n                        flexShrink=\"initial\"\n                        background=\"#303030\"\n                      >\n                        <Text\n                          width=\"100%\"\n                          textAlign=\"center\"\n                          lineHeight={2}\n                          fontSize={16}\n                        >\n                          <strong>Observações:</strong>\n                          <br />\n                          {sale.comments}\n                        </Text>\n                      </ChakraFlex>\n                    </ChakraFlex>\n                  </div>\n                </Box>\n              ))}\n\n              <Pagination\n                setPage={setCurrentPage}\n                page={currentPage}\n                total_pages={totalPages}\n              />\n            </List>\n          </>\n        )}\n\n        {user?.role === 'ADMIN' && (\n          <div\n            className={\n              selectedSales.length < 1\n                ? 'udpdateSaleContainerHide'\n                : 'updateSaleContainer'\n            }\n            hidden={selectedSales.length < 1}\n            style={{ marginTop: '16px', marginBottom: '56px' }}\n          >\n            <Form\n              ref={formRef}\n              onSubmit={handleUpdateSale}\n              style={{ display: 'flex', alignItems: 'center' }}\n            >\n              <Select\n                height={8}\n                backgroundColor=\"#424242\"\n                color=\"White\"\n                name=\"statusSale\"\n                containerProps={{\n                  marginRight: 8,\n                  width: 300,\n                  height: 10,\n                  border: '2px solid',\n                  borderColor: '#585858',\n                  backgroundColor: '#424242',\n                }}\n              >\n                <option value=\"PENDING\">Pendente</option>\n                <option value=\"CONFIRMED\">Confirmado</option>\n                <option value=\"CANCELED\">Cancelado</option>\n                <option value=\"FINISHED\">Finalizado</option>\n              </Select>\n              <Button style={{ marginTop: '0px' }} type=\"submit\">\n                Alterar Situação\n              </Button>\n              <Tooltip label=\"Excluir venda\" aria-label=\"Excluir venda\">\n                <Button\n                  style={{ marginTop: '0px' }}\n                  onClick={handleDeleteSales}\n                  isDisabled={deleteLoading}\n                >\n                  <FiTrash />\n                </Button>\n              </Tooltip>\n            </Form>\n          </div>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default Sales;\n","export default function getSaleStatusTranslated(status: string): string {\n  switch (status) {\n    case 'PENDING':\n      return 'Pendente';\n    case 'CANCELED':\n      return 'Cancelado';\n    case 'CONFIRMED':\n      return 'Confirmado';\n    case 'FINISHED':\n      return 'Finalizado';\n    default:\n      return 'Outracoisa';\n  }\n}\n","import { Box, DefaultTheme } from '@chakra-ui/core';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\ninterface IContainerProps {\n  theme: DefaultTheme;\n  isErrored: boolean;\n}\n\nexport const Container = styled(Box)<IContainerProps>`\n  --base-color: #718096;\n  --text-color-focused: #4a5568;\n  --focused-box-shadow: 0 0 0 3px transparentize(0.4, #4a5568);\n  --errored-box-shadow: 0 0 0 3px transparentize(0.4, #e53e3e);\n\n  color: var(--base-color);\n  cursor: text;\n\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  transition: box-shadow 0.2s;\n\n  ${props =>\n    props.isErrored &&\n    css`\n      #date-times {\n        margin-top: 10px;\n        width: 100%;\n\n        height: 30px;\n        border-radius: 6px;\n        background: #f3f;\n        border: 2.5px solid #e53e3e;\n\n        color: #ccc;\n      }\n    `}\n\n  input {\n    flex: 1;\n    height: 100%;\n    background: transparent;\n    border: 0;\n    color: var(--text-color-focused);\n\n    &::placeholder {\n      color: var(--base-color);\n    }\n  }\n\n  #date-times {\n    margin-top: 10px;\n    width: 100%;\n\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n    border: 2.5px solid #585858;\n\n    color: #ccc;\n\n    ${props =>\n      props.isErrored &&\n      css`\n      margin-top: 10px;\n      width: 100%;\n\n      height: 30px;\n      border-radius: 6px;\n      background: #424242;\n      border: 2.5px solid #E53E3E;\n\n      color: #ccc;\n      }\n    `}\n  }\n\n  .MuiFormControl-root {\n    border: 0;\n    margin: 0;\n    display: inline-flex;\n    padding: 0;\n    width: 100%;\n    position: relative;\n    min-width: 0;\n    flex-direction: column;\n  }\n\n  .MuiFormControl-root.MuiTextField-root.date-times {\n    width: 100%;\n    max-width: 355px;\n    .MuiInput-underline:after {\n      border-bottom: 2px solid #355a9d;\n    }\n  }\n`;\n","import React, {\n  useEffect,\n  useRef,\n  useCallback,\n  useState,\n  ChangeEvent,\n} from 'react';\n\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\n\ntype IDateTimeProps = TextFieldProps & {\n  name: string;\n};\n\nconst DateTime: React.FC<IDateTimeProps> = ({ name }) => {\n  const dateTimeRef = useRef<HTMLDivElement>(null);\n  const { fieldName, error, registerField } = useField(name);\n  const [dateValue, setDateValue] = useState<{ value: string }>({ value: '' });\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: dateValue,\n      path: 'value',\n    });\n  }, [fieldName, dateValue, registerField]);\n\n  const handleAvailabilityChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setDateValue({ value: event.target.value });\n    },\n    [setDateValue],\n  );\n\n  return (\n    <Container isErrored={!!error}>\n      <TextField\n        ref={dateTimeRef}\n        onChange={handleAvailabilityChange}\n        id=\"date-times\"\n        type=\"datetime-local\"\n        className=\"date-times\"\n        value={dateValue.value}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default DateTime;\n","import React, { useEffect, useRef } from 'react';\n\nimport { Textarea, InputProps } from '@chakra-ui/core';\nimport { useField } from '@unform/core';\n\ninterface ITextareaProps extends InputProps {\n  name: string;\n}\n\nconst ITextarea: React.FC<ITextareaProps> = ({ name, ...rest }) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const { fieldName, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: textareaRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Textarea\n      ref={textareaRef}\n      background=\"#424242\"\n      borderWidth=\"2px\"\n      borderColor={error ? '#c53030' : '#585858'}\n      color=\"#fff\"\n      name={name}\n      resize=\"none\"\n      _hover={{ borderWidth: '2px', borderColor: '#585858' }}\n      _focus={{\n        borderWidth: '2px',\n        borderColor: '#585858',\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default ITextarea;\n","export function currencyMasker(e: React.FormEvent<HTMLInputElement>) {\n  let { value } = e.currentTarget;\n\n  value = value.replace(/\\D/g, '');\n  value = value.replace(/(\\d)(\\d{2})$/, '$1.$2');\n  value = value.replace(/(\\d)(\\d{2})$/, '$1.$2');\n  value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, '');\n\n  e.currentTarget.value = value;\n  return e;\n}\n\nexport function documentMask(value: string) {\n  try {\n    if (value && value.length) {\n      const docValue = value.replace(/[/,.,-]/g, '');\n      // MASK CPF / CNPJ\n      if (docValue.length <= 14) {\n        if (docValue.length > 12) {\n          // cnpj  `##.###.###/####-##`\n          const cnpj = /^([\\d]{2})\\.*([\\d]{3})\\.*([\\d]{3})\\/*([\\d]{4})\\.*([\\d]{2})/;\n          return docValue.replace(cnpj, '$1.$2.$3/$4-$5');\n        }\n        // cpf `###.###.###-##`\n        const cpf = /([\\d]{3})\\.*([\\d]{3})\\.*([\\d]{3})-*([\\d]{2})/;\n\n        return docValue.replace(cpf, '$1.$2.$3-$4');\n      }\n\n      return value;\n    }\n\n    return value;\n  } catch {\n    return value;\n  }\n}\n","import {\n  Box as ChakraBox,\n  Flex as ChakraFlex,\n  Grid as ChakraGrid,\n} from '@chakra-ui/core';\nimport { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const RegisterSuccessPage = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #252525;\n\n  .content {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      margin-bottom: 80px;\n    }\n    h1 {\n      margin-bottom: 30px;\n    }\n\n    .buttons {\n      width: 250px;\n      display: flex;\n\n      button {\n        & + button {\n          margin-left: 16px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;700&display=swap');\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n\n  height: 100vh;\n  width: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  textarea::placeholder {\n    color: #fff;\n  }\n\n  .DateTimesContainer {\n    width: 48%;\n    display: flex;\n    flex-direction: 'row';\n    align-items: center;\n\n    .DateTimeContainer {\n      width: 100%;\n      margin-right: 16px;\n      max-width: 330px;\n\n      div.labels {\n        background: transparent;\n        border: 0;\n        display: flex;\n        justify-content: space-between;\n        margin-top: 25px;\n\n        span {\n          font: 18px 'Ubuntu', sans-serif;\n          margin-left: 4px;\n          font-weight: 400;\n          color: #eee;\n\n          & + span {\n            color: #ff6f60;\n          }\n        }\n      }\n    }\n  }\n\n  .buttons_container {\n    display: flex;\n    justify-content: flex-end;\n\n    button {\n      width: 250px;\n      margin-left: 16px;\n    }\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 18px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const Inputs = styled(ChakraFlex)`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: stretch;\n\n  .SelectContainer {\n    margin-right: 16px;\n    max-width: 45.5%;\n\n    div.labels {\n      background: transparent;\n      border: 0;\n      display: flex;\n      justify-content: space-between;\n\n      span {\n        font: 18px 'Ubuntu', sans-serif;\n        margin-left: 4px;\n        font-weight: 400;\n        color: #eee;\n\n        & + span {\n          color: #ff6f60;\n        }\n      }\n    }\n  }\n`;\n\nexport const InputContainer = styled(ChakraBox)`\n  flex: 1;\n  margin-right: 18px;\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n\nexport const ServiceBox = styled(ChakraFlex)`\n  height: 75px;\n  background: #424242;\n  border: 2px solid #555555;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  cursor: pointer;\n\n  transition: background-color 0.2s;\n  :hover {\n    background: ${shade(0.2, '#424242')};\n  }\n\n  span {\n    font-size: 16px;\n    text-align: center;\n    padding: 5px 5px;\n  }\n`;\n\nexport const Services = styled(ChakraGrid)`\n  width: 100%;\n  margin-top: 10px;\n  gap: 18px;\n  grid-template-columns: 20% 20% 20% 20% 20%;\n\n  .selected {\n    border-color: #5580b9;\n  }\n`;\n","import React, { useRef, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Box } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Datetime from '../../components/Datetime';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport Select from '../../components/Select';\nimport Textarea from '../../components/Textarea';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { documentMask } from '../../utils/masks';\nimport {\n  Container,\n  Content,\n  Inputs,\n  Separator,\n  InputContainer,\n  Services,\n  ServiceBox,\n} from './styles';\n\nexport interface IUnit {\n  id: number;\n  name: string;\n}\n\ninterface IServices {\n  id: number;\n  name: string;\n  price: number;\n  enabled: boolean;\n}\n\ninterface IFormData {\n  unitId: string;\n  car: string;\n  carColor: string;\n  carModel: string;\n  carPlate: string;\n  cpf: string;\n  sourceCar: string;\n  availabilityDate: string;\n  deliveryDate: string;\n  name: string;\n  comments?: string;\n}\n\nconst SalesRegister = () => {\n  const history = useHistory();\n  const { user } = useAuth();\n  const { addToast } = useToast();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const [document, setDocument] = useState('');\n  const [loadingButton, setLoadingButton] = useState(false);\n\n  const [services, setServices] = useState<IServices[]>([]);\n  const [selectedServices, setSelectedServices] = useState<number[]>([]);\n\n  const selectOptions: Array<{ value: string; label: string }> = [\n    { value: 'NEW', label: '0 KM' },\n    { value: 'USED', label: 'Semi-novo' },\n    { value: 'WORKSHOP', label: 'Oficina' },\n  ];\n  const [unitSelectOptions, setUnitSelectOptions] = useState<\n    Array<{ value: number; label: string }>\n  >([]);\n\n  useEffect(() => {\n    api.get('services').then(response => {\n      const responseServices: IServices[] = response.data;\n\n      setServices(responseServices);\n    });\n\n    api\n      .get(`units/${user?.profile.company_id}`)\n      .then(response => {\n        const unities: IUnit[] = response.data;\n\n        const unitiesOptions: Array<{\n          value: number;\n          label: string;\n        }> = unities.map(unit => ({ value: unit.id, label: unit.name }));\n\n        setUnitSelectOptions(unitiesOptions);\n      })\n      .catch(() => {\n        history.push('/services');\n      });\n  }, [history, user]);\n\n  const handleSelectService = useCallback(\n    (id: number) => {\n      const alreadySelected = selectedServices.findIndex(item => item === id);\n\n      if (alreadySelected >= 0) {\n        const filteredItems = selectedServices.filter(item => item !== id);\n\n        setSelectedServices(filteredItems);\n      } else {\n        setSelectedServices([...selectedServices, id]);\n      }\n    },\n    [selectedServices],\n  );\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, { reset }) => {\n      setLoadingButton(true);\n\n      const responseCompanyBudget = await api.post(\n        '/sales/getcompanysalebudget',\n        { companyId: user?.profile.company_id, services: selectedServices },\n      );\n\n      const { companyPrice } = responseCompanyBudget.data;\n\n      const responseCostBudget = await api.post('/sales/getsalebudget', {\n        services: selectedServices,\n      });\n\n      const { costPrice } = responseCostBudget.data;\n\n      try {\n        formRef.current?.setErrors({});\n\n        const cpfWithoutPoint = data.cpf.replace('.', '');\n\n        const formattedCpf = cpfWithoutPoint.replace('.', '').replace('-', '');\n\n        const schema = Yup.object().shape({\n          unitId: Yup.string().required('Por favor selecione a unidade.'),\n          car: Yup.string().required('Carro obrigatório'),\n          carColor: Yup.string().required('Cor do carro obrigatório'),\n          carModel: Yup.string().required('Modelo do carro obrigatório'),\n          carPlate: Yup.string()\n            .required('Placa do carro obrigatório')\n            .min(7, 'Mínimo de 7 caracteres')\n            .max(8, 'Máximo de 8 caracteres'),\n          cpf: Yup.string()\n            .required('Cpf obrigatório')\n            .matches(\n              /^([0-9]{3}\\.?[0-9]{3}\\.?[0-9]{3}-?[0-9]{2}|[0-9]{2}\\.?[0-9]{3}\\.?[0-9]{3}\\/?[0-9]{4}-?[0-9]{2})$/,\n              'O documento deve ter 11 ou 14 dígitos.',\n            ),\n          name: Yup.string().required('Nome obrigatório'),\n          sourceCar: Yup.string().required('Origem do carro obrigatório'),\n          deliveryDate: Yup.string().required('Data de entrega obrigatória'),\n          comments: Yup.string(),\n          availabilityDate: Yup.string().required(\n            'Data de disponibilidade obrigatória',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (selectedServices.length <= 0) {\n          addToast({ title: 'Nenhum serviço selecionado.', type: 'error' });\n          throw new Error('Services are required.');\n        }\n\n        let createSaleData;\n\n        if (data.comments) {\n          createSaleData = {\n            unitId: data.unitId,\n            deliveryDate: new Date(data.deliveryDate).toISOString(),\n            availabilityDate: new Date(data.availabilityDate).toISOString(),\n            companyPrice,\n            costPrice,\n            source: data.sourceCar,\n            name: data.name,\n            cpf: formattedCpf,\n            comments: data.comments,\n            car: data.car,\n            carModel: data.carModel,\n            carPlate: data.carPlate,\n            carColor: data.carColor,\n          };\n        } else {\n          createSaleData = {\n            unitId: data.unitId,\n            deliveryDate: new Date(data.deliveryDate).toISOString(),\n            availabilityDate: new Date(data.availabilityDate).toISOString(),\n            companyPrice,\n            costPrice,\n            source: data.sourceCar,\n            name: data.name,\n            cpf: formattedCpf,\n            car: data.car,\n            carModel: data.carModel,\n            carPlate: data.carPlate,\n            carColor: data.carColor,\n          };\n        }\n\n        const responseCreatedSale = await api.post('sales', createSaleData);\n\n        if (responseCreatedSale.status === 200) {\n          const createServiceSaleData = {\n            saleId: responseCreatedSale.data.id,\n            serviceIds: selectedServices,\n          };\n\n          const responseCreatedServiceSale = await api.post(\n            'service-sales',\n            createServiceSaleData,\n          );\n\n          if (responseCreatedServiceSale.status === 200) {\n            addToast({\n              title: 'Sucesso',\n              type: 'success',\n              description: 'Pedido registrado com sucesso.',\n            });\n            setLoadingButton(false);\n            setSelectedServices([]);\n\n            reset();\n            setDocument('');\n            const adminPhone = '+553188783666';\n            const apiKey = '410794';\n\n            let msg = '';\n\n            responseCreatedServiceSale.data.forEach(\n              (serv: { service: { name: string } }, index: number) => {\n                if (index === 0) {\n                  msg += `${serv.service.name}`;\n                } else {\n                  msg += `%0a${serv.service.name}`;\n                }\n              },\n            );\n\n            const wppMessage = `*Novo%20pedido%20realizado:*%0a%0a*n°:*%20${`${responseCreatedSale.data.seller.company.client_identifier}${responseCreatedSale.data.unit.client_identifier}${responseCreatedSale.data.client_identifier}`}%0a%0a*Data%20de%20disponibilidade:*%20${format(\n              new Date(responseCreatedSale.data.availability_date),\n              \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n              { locale: ptBR },\n            )}%0a%0a*Data%20de%20entrega:*%20${format(\n              new Date(responseCreatedSale.data.delivery_date),\n              \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n              { locale: ptBR },\n            )}%0a%0a*Data%20do%20registro%20da%20venda:*%20${format(\n              new Date(responseCreatedSale.data.request_date),\n              \"dd'/'MM'/'yyyy '-' HH:mm'h'\",\n              { locale: ptBR },\n            )}%0a%0a*Vendedor(a):*%20${\n              responseCreatedSale.data.seller.name\n            }%0a%0a*Concessionária:*%20${\n              responseCreatedSale.data.seller.company.name\n            }%0a%0a*Unidade:*%20${\n              responseCreatedSale.data.unit?.name\n            }%0a%0a*Carro:*%20${responseCreatedSale.data.car.brand}%20${\n              responseCreatedSale.data.car.model\n            }%20${responseCreatedSale.data.car.color},%20placa%20${\n              responseCreatedSale.data.car.plate\n            }%0a%0a*Serviços:*%0a${msg}%0a%0a*Observações:*%20${\n              responseCreatedSale.data.comments\n            }`;\n\n            const urlToSendMessage = `https://api.callmebot.com/whatsapp.php?phone=${adminPhone}&text=${wppMessage}&apikey=${apiKey}`;\n\n            axios.get(urlToSendMessage);\n          } else {\n            addToast({\n              title: 'Erro',\n              type: 'error',\n              description:\n                'Não foi possível registrar esse pedido, tente novamente.',\n            });\n\n            setLoadingButton(false);\n          }\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          if (selectedServices.length <= 0) {\n            addToast({ title: 'Nenhum serviço selecionado.', type: 'error' });\n          }\n\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n          setLoadingButton(false);\n          return;\n        }\n\n        addToast({\n          title: 'Erro',\n          description:\n            'Não foi possível registrar essa venda, tente novamente.',\n          type: 'error',\n        });\n        setLoadingButton(false);\n      }\n    },\n    [addToast, selectedServices, user],\n  );\n\n  return (\n    <>\n      <Container>\n        <Menu />\n        <Breadcrumb text=\"Registro de vendas\" />\n        <Content\n          marginLeft=\"auto\"\n          marginRight=\"auto\"\n          width=\"100%\"\n          marginTop=\"26px\"\n          maxWidth={{\n            xs: '90vw',\n            sm: '90vw',\n            md: '80vw',\n            lg: '78vw',\n            xl: '90vw',\n          }}\n        >\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <Select\n              height=\"34px\"\n              backgroundColor=\"#424242\"\n              color=\"White\"\n              name=\"unitId\"\n              placeholder=\"Selecione a unidade\"\n              containerProps={{\n                marginTop: '16px',\n                marginRight: 8,\n                width: '100%',\n                height: '37px',\n                border: '2px solid',\n                borderColor: '#585858',\n                backgroundColor: '#424242',\n              }}\n            >\n              {unitSelectOptions.map(opt => (\n                <option key={opt.value} value={opt.value}>\n                  {opt.label}\n                </option>\n              ))}\n            </Select>\n\n            <Separator>\n              <span>Dados do cliente</span>\n              <div />\n            </Separator>\n\n            <Inputs marginTop=\"20px\">\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Nome:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"name\"\n                  type=\"name\"\n                  name=\"name\"\n                  style={{ width: '30px' }}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Cpf:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"cpf\"\n                  type=\"cpf\"\n                  name=\"cpf\"\n                  style={{ width: '30px' }}\n                  onChange={e => setDocument(e.target.value)}\n                  value={documentMask(document)}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Carro:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"car\"\n                  type=\"car\"\n                  name=\"car\"\n                  style={{ width: '30px' }}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Modelo:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"carModel\"\n                  type=\"carModel\"\n                  name=\"carModel\"\n                  style={{ width: '30px' }}\n                />\n              </InputContainer>\n            </Inputs>\n\n            <Inputs style={{ marginTop: '16px' }}>\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Placa:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"carPlate\"\n                  type=\"carPlate\"\n                  name=\"carPlate\"\n                  style={{ width: '30px' }}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <div className=\"labels\">\n                  <span>Cor do carro:</span>\n                  <span>*</span>\n                </div>\n                <Input\n                  className=\"input\"\n                  id=\"carColor\"\n                  type=\"carColor\"\n                  name=\"carColor\"\n                  style={{ width: '30px' }}\n                />\n              </InputContainer>\n\n              <div className=\"SelectContainer\">\n                <div className=\"labels\">\n                  <span>Origem do carro:</span>\n                  <span>*</span>\n                </div>\n                <Select\n                  height=\"34px\"\n                  backgroundColor=\"#424242\"\n                  color=\"White\"\n                  name=\"sourceCar\"\n                  placeholder=\"Origem do carro\"\n                  containerProps={{\n                    marginTop: '16px',\n                    marginRight: 8,\n                    width: '100%',\n                    height: '37px',\n                    border: '2px solid',\n                    borderColor: '#585858',\n                    backgroundColor: '#424242',\n                  }}\n                >\n                  {selectOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>\n                      {opt.label}\n                    </option>\n                  ))}\n                </Select>\n              </div>\n\n              <Box flex={1} fontSize=\"18px\" marginRight=\"18px\">\n                <span style={{ marginBottom: '6px' }}>Observações:</span>\n                <Textarea name=\"comments\" style={{ marginTop: '12px' }} />\n              </Box>\n            </Inputs>\n\n            <Separator>\n              <span>Datas </span>\n              <div />\n            </Separator>\n\n            <div className=\"DateTimesContainer\">\n              <div className=\"DateTimeContainer\">\n                <div className=\"labels\">\n                  <span>Data e hora de disponibilidade:</span>\n                  <span>*</span>\n                </div>\n                <Datetime name=\"availabilityDate\" />\n              </div>\n\n              <div className=\"DateTimeContainer\">\n                <div className=\"labels\">\n                  <span>Data e hora de entrega:</span>\n                  <span>*</span>\n                </div>\n                <Datetime name=\"deliveryDate\" />\n              </div>\n            </div>\n\n            <Separator>\n              <span>Serviços </span>\n              <div />\n            </Separator>\n            <Services\n              templateColumns={{\n                xs: '29% 29% 29%',\n                sm: '23% 23% 23% 23%',\n                md: '17% 17% 17% 17% 17%',\n                lg: '18% 18% 18% 18% 18%',\n                xl: '15.6% 15.6% 15.6% 15.6% 15.6% 15.6%',\n              }}\n            >\n              {services.map(service => (\n                <ServiceBox\n                  onClick={() => handleSelectService(service.id)}\n                  className={\n                    selectedServices.includes(service.id) ? 'selected' : ''\n                  }\n                  key={service.id}\n                >\n                  <span>{service.name}</span>\n                </ServiceBox>\n              ))}\n            </Services>\n\n            <div className=\"buttons_container\">\n              <Button isDisabled={!!loadingButton} type=\"submit\">\n                Salvar\n              </Button>\n            </div>\n          </Form>\n        </Content>\n      </Container>\n    </>\n  );\n};\n\nexport default SalesRegister;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 14.6% 16% 19% 16% 16% 16%;\n    align-items: center;\n    justify-content: center;\n\n    margin-top: 25px;\n    margin-top: 25px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n  }\n\n  .button {\n    margin-top: 30px;\n    float: right;\n    width: 250px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  width: 100.5%;\n  height: 550px;\n  overflow: auto;\n  margin-top: 16px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n\n  .box {\n    display: grid;\n    grid-template-columns: 14.6% 16% 19% 16% 16% 16%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 15px;\n\n    & + div {\n      margin-top: 16px;\n    }\n\n    span {\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Skeleton, Stack } from '@chakra-ui/core';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Menu from '../../components/Menu';\nimport api from '../../services/api';\nimport { Container, Content, Separator, List } from './styles';\n\ninterface IFormatRow {\n  id: number;\n  name: string;\n  telephone: string;\n  enabled: boolean;\n  user: {\n    email: string;\n    role: 'MANAGER' | 'SELLER';\n  };\n  company: {\n    name: string;\n  };\n  unit: {\n    name: string;\n  };\n}\n\nconst Sellers = () => {\n  const [rows, setRows] = useState<IFormatRow[]>([]);\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true);\n    api.get('users/company').then(response => {\n      const sellers: IFormatRow[] = response.data;\n\n      setRows(sellers);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Menu />\n\n      <Breadcrumb text=\"Vendedores\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Vendedores</span>\n          <div />\n        </Separator>\n\n        <div className=\"boxTitle\">\n          <h3>Nome</h3>\n          <h3>Telefone</h3>\n          <h3>E-mail</h3>\n          <h3>Concessionária</h3>\n          <h3>Unidade</h3>\n          <h3>Cargo</h3>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List height={{ lg: '40vh', xl: '55vh' }}>\n              {rows.map(row => (\n                <div className=\"box\">\n                  <span>{row.name}</span>\n                  <span>{row.telephone}</span>\n                  <span>{row.user.email}</span>\n                  <span>{row.company.name}</span>\n                  <span>{row.unit?.name}</span>\n                  <span>\n                    {row.user?.role === 'MANAGER' ? 'Gerente' : 'Vendedor'}\n                  </span>\n                </div>\n              ))}\n            </List>\n          </>\n        )}\n        <div className=\"button\">\n          <Button\n            onClick={() => {\n              history.push('sellers-register');\n            }}\n          >\n            Registrar novo vendedor\n          </Button>\n        </div>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Sellers;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  div.button {\n    width: 250px;\n    margin-top: 400px;\n\n    float: right;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const Inputs = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n\n  .SelectContainer {\n    div.labels {\n      background: transparent;\n      border: 0;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 5px;\n      span {\n        font: 18px 'Ubuntu', sans-serif;\n        margin-left: 4px;\n        font-weight: 400;\n        color: #eee;\n\n        & + span {\n          color: #ff6f60;\n        }\n      }\n    }\n  }\n`;\n\nexport const InputContainer = styled.div`\n  & + div {\n    margin-left: 16px;\n  }\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport FormattedInput from '../../components/FormattedInput';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport Select from '../../components/Select';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport {\n  Container,\n  Separator,\n  Content,\n  Inputs,\n  InputContainer,\n} from './styles';\n\ninterface IFormData {\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  name: string;\n  telephone: string;\n  unit: string;\n}\n\ninterface IUnit {\n  id: number;\n  name: string;\n}\n\nconst RegsiterSellers = () => {\n  const history = useHistory();\n  const { user } = useAuth();\n  const { addToast } = useToast();\n  const formRef = useRef<FormHandles>(null);\n\n  const [unitSelectOptions, setUnitSelectOptions] = useState<\n    Array<{ value: number; label: string }>\n  >([]);\n\n  useEffect(() => {\n    api\n      .get(`units/${user?.profile.company_id}`)\n      .then(response => {\n        const unities: IUnit[] = response.data;\n\n        const unitiesOptions: Array<{\n          value: number;\n          label: string;\n        }> = unities.map(unit => ({ value: unit.id, label: unit.name }));\n\n        setUnitSelectOptions(unitiesOptions);\n      })\n      .catch(() => {\n        history.push('/services');\n      });\n  }, [history, user]);\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, { reset }) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          username: Yup.string().required('Usuário obrigatório'),\n          password: Yup.string().required('Senha obrigatória'),\n          email: Yup.string().required('E-mail obrigatório'),\n          name: Yup.string().required('Nome obrigatório'),\n          unit: Yup.string().required('Unidade obrigatório'),\n          telephone: Yup.string()\n            .min(9, 'O telefone deve ter no mínimo 9 dígitos')\n            .max(11, 'O telefone deve ter no máximo 11 dígitos'),\n          confirmPassword: Yup.string().required(\n            'Confirmação de senha obrigatória',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (data.password !== data.confirmPassword) {\n          formRef.current?.setErrors({\n            password: 'As senhas não batem.',\n            confirmPassword: 'As senhas não batem.',\n          });\n          return;\n        }\n\n        const requestData = {\n          username: data.username,\n          email: data.email,\n          password: data.password,\n          role: 'SELLER',\n          name: data.name,\n          telephone: data.telephone,\n          enabled: true,\n          companyId: user?.profile.company_id,\n          unitId: data.unit,\n        };\n\n        const response = await api.post('users/signup', requestData);\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Sucesso',\n            type: 'success',\n            description: 'Vendedor registrado com sucesso.',\n          });\n          reset();\n        } else {\n          addToast({\n            title: 'Erro',\n            type: 'error',\n            description: 'Ocorreu um erro, tente novamente.',\n          });\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          title: 'Não foi possível realizar o cadastro.',\n          description:\n            'Esse usuário já foi criado ou ocorreu um erro, tente novamente.',\n          type: 'error',\n        });\n      }\n    },\n    [addToast, user],\n  );\n\n  return (\n    <Container>\n      <Menu />\n\n      <Breadcrumb text=\"Registro de vendedores\" />\n\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Separator>\n            <span>Dados do vendedor</span>\n            <div />\n          </Separator>\n          <Inputs style={{ marginTop: '20px' }}>\n            <InputContainer style={{ width: '285px' }}>\n              <div className=\"labels\">\n                <span>Nome:</span>\n                <span>*</span>\n              </div>\n              <Input className=\"input\" id=\"name\" type=\"name\" name=\"name\" />\n            </InputContainer>\n\n            <InputContainer style={{ width: '285px' }}>\n              <div className=\"labels\">\n                <span>Telefone:</span>\n                <span>*</span>\n              </div>\n              <FormattedInput\n                className=\"input\"\n                id=\"telephone\"\n                name=\"telephone\"\n                format=\"## #####-####\"\n                mask=\"_\"\n              />\n            </InputContainer>\n\n            <div\n              className=\"SelectContainer\"\n              style={{ marginLeft: 16, width: 300 }}\n            >\n              <div className=\"labels\">\n                <span>Unidade do vendedor:</span>\n                <span>*</span>\n              </div>\n              <Select\n                height=\"34px\"\n                backgroundColor=\"#424242\"\n                color=\"White\"\n                name=\"unit\"\n                placeholder=\"Selecione a unidade do vendedor\"\n                containerProps={{\n                  marginTop: '16px',\n                  marginRight: 8,\n                  width: '100%',\n                  height: '37px',\n                  border: '2px solid',\n                  borderColor: '#585858',\n                  backgroundColor: '#424242',\n                }}\n              >\n                {unitSelectOptions.map(opt => (\n                  <option key={opt.value} value={opt.value}>\n                    {opt.label}\n                  </option>\n                ))}\n              </Select>\n            </div>\n          </Inputs>\n\n          <Separator>\n            <span>Dados da conta vendedor</span>\n            <div />\n          </Separator>\n\n          <Inputs style={{ marginTop: '16px' }}>\n            <InputContainer style={{ width: '22%' }}>\n              <div className=\"labels\">\n                <span>Username:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"username\"\n                type=\"username\"\n                name=\"username\"\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '26%' }}>\n              <div className=\"labels\">\n                <span>E-mail:</span>\n                <span>*</span>\n              </div>\n              <Input className=\"input\" id=\"email\" type=\"email\" name=\"email\" />\n            </InputContainer>\n\n            <InputContainer style={{ width: '22%', marginLeft: 16 }}>\n              <div className=\"labels\">\n                <span>Senha:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '23%', marginLeft: 16 }}>\n              <div className=\"labels\">\n                <span>Confirmar Senha:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"confirmPassword\"\n                type=\"password\"\n                name=\"confirmPassword\"\n              />\n            </InputContainer>\n          </Inputs>\n          <div className=\"button\">\n            <Button type=\"submit\">Salvar</Button>\n          </div>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default RegsiterSellers;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)``;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Flex, Grid, Text } from '@chakra-ui/core';\n\nimport signInBackgroundImg from '../../assets/sign-in-background-3.jpg';\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Menu from '../../components/Menu';\nimport { useAuth } from '../../context/auth';\nimport api from '../../services/api';\nimport { Container, Content } from './styles';\n\nconst Services = () => {\n  const history = useHistory();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user?.profile.company_id) {\n      if (user?.role === 'MANAGER') {\n        let servicesAmount = 0;\n\n        api.get('/services').then(response => {\n          servicesAmount = response.data.length;\n        });\n\n        api.get('company-services/company').then(response => {\n          const companyservices = response.data;\n\n          if (\n            companyservices.length === 0 ||\n            companyservices.length < servicesAmount\n          ) {\n            history.push('set-prices');\n          }\n        });\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <Container>\n      <Menu />\n\n      <Breadcrumb text=\"Serviços\" />\n\n      <Content\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n      >\n        <Grid templateColumns=\"repeat(4, 1fr)\" gap={6} marginTop=\"26px\">\n          <Box\n            w=\"100%\"\n            h=\"60\"\n            bg=\"gray.700\"\n            borderRadius=\"md\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            paddingTop=\"15px\"\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n            border=\"2px solid #626262\"\n            onClick={() => history.push('/service/vitrificacao')}\n          >\n            <img\n              style={{ maxWidth: '100%', borderRadius: '8px' }}\n              className=\"images\"\n              src={signInBackgroundImg}\n              alt=\"img\"\n            />\n            <Flex\n              alignItems=\"center\"\n              paddingY=\"10px\"\n              marginTop=\"2px\"\n              width=\"100%\"\n              height=\"15px\"\n              margin=\"8px\"\n            >\n              <Text fontSize=\"16px\" color=\"#CCC\">\n                Vitrificação de Pintura\n              </Text>\n            </Flex>\n          </Box>\n          <Box\n            w=\"100%\"\n            h=\"60\"\n            bg=\"gray.700\"\n            borderRadius=\"md\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            paddingTop=\"15px\"\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n            border=\"2px solid #626262\"\n            onClick={() => history.push('/service/vitrificacao')}\n          >\n            <img\n              style={{ maxWidth: '100%', borderRadius: '8px' }}\n              className=\"images\"\n              src={signInBackgroundImg}\n              alt=\"img\"\n            />\n            <Flex\n              alignItems=\"center\"\n              paddingY=\"10px\"\n              marginTop=\"2px\"\n              width=\"100%\"\n              height=\"15px\"\n              margin=\"8px\"\n            >\n              <Text fontSize=\"16px\" color=\"#CCC\">\n                Vitrificação de Pintura\n              </Text>\n            </Flex>\n          </Box>\n          <Box\n            w=\"100%\"\n            h=\"60\"\n            bg=\"gray.700\"\n            borderRadius=\"md\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            paddingTop=\"15px\"\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n            border=\"2px solid #626262\"\n            onClick={() => history.push('/service/vitrificacao')}\n          >\n            {/* <iframe\n              style={{ width: '100%', height: '72%' }}\n              src=\"https://www.youtube.com/embed/DXAQTlfGIYM\"\n              title=\"YouTube video player\"\n              frameBorder=\"0\"\n              allow=\"accelerometer;\n              autoplay; clipboard-write;\n              encrypted-media;\n              gyroscope; picture-in-picture\"\n              allowFullScreen\n            /> */}\n            <img\n              style={{ maxWidth: '100%', borderRadius: '8px' }}\n              className=\"images\"\n              src={signInBackgroundImg}\n              alt=\"img\"\n            />\n            <Flex\n              alignItems=\"center\"\n              paddingY=\"10px\"\n              marginTop=\"2px\"\n              width=\"100%\"\n              height=\"15px\"\n              margin=\"8px\"\n            >\n              <Text fontSize=\"16px\" color=\"#CCC\">\n                Vitrificação de Pintura\n              </Text>\n            </Flex>\n          </Box>\n          <Box\n            w=\"100%\"\n            h=\"60\"\n            bg=\"gray.700\"\n            borderRadius=\"md\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            paddingTop=\"15px\"\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n            border=\"2px solid #626262\"\n            onClick={() => history.push('/service/vitrificacao')}\n          >\n            <img\n              style={{ maxWidth: '100%', borderRadius: '8px' }}\n              className=\"images\"\n              src={signInBackgroundImg}\n              alt=\"img\"\n            />\n            <Flex\n              alignItems=\"center\"\n              paddingY=\"10px\"\n              marginTop=\"2px\"\n              width=\"100%\"\n              height=\"15px\"\n              margin=\"8px\"\n            >\n              <Text fontSize=\"16px\" color=\"#CCC\">\n                Vitrificação de Pintura\n              </Text>\n            </Flex>\n          </Box>\n          <Box\n            w=\"100%\"\n            h=\"60\"\n            bg=\"gray.700\"\n            borderRadius=\"md\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            paddingTop=\"15px\"\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n            border=\"2px solid #626262\"\n            onClick={() => history.push('/service/vitrificacao')}\n          >\n            <img\n              style={{ maxWidth: '100%', borderRadius: '8px' }}\n              className=\"images\"\n              src={signInBackgroundImg}\n              alt=\"img\"\n            />\n            <Flex\n              alignItems=\"center\"\n              paddingY=\"10px\"\n              marginTop=\"2px\"\n              width=\"100%\"\n              height=\"15px\"\n              margin=\"8px\"\n            >\n              <Text fontSize=\"16px\" color=\"#CCC\">\n                Vitrificação de Pintura\n              </Text>\n            </Flex>\n          </Box>\n        </Grid>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Services;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n  height: 100%;\n\n  .body {\n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    flex-wrap: wrap;\n  }\n\n  .content {\n    margin-top: 15px;\n    width: 100%;\n    min-height: 560px;\n    background-color: #383838;\n    border: 2px solid #626262;\n    border-radius: 8px;\n    display: flex;\n    margin-bottom: 100px;\n\n    span {\n      width: 100%;\n      flex: 1;\n      font: 20px 'Roboto', sans-serif;\n      line-height: 28px;\n      text-align: justify;\n      color: #ccc;\n      margin-top: 10px;\n      padding: 0 15px;\n    }\n  }\n\n  .image {\n    margin-top: 15px;\n    margin-right: 15px;\n    max-height: 242px;\n    img {\n      max-width: 500px;\n      border: 1.5px solid #626262;\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","import React from 'react';\n\nimport signInBackgroundImg from '../../../assets/sign-in-background-3.jpg';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport Header from '../../../components/Header';\nimport Container from './styles';\n\nconst Service: React.FC = () => (\n  <Container>\n    <div className=\"header\">\n      <Header></Header>\n    </div>\n    <div className=\"body\">\n      <Breadcrumb text=\"Polimento técnico.\" />\n      <div className=\"content\">\n        <span>\n          O polimento automotivo é um procedimento que beneficia diretamente a\n          pintura do veículo. Com a utilização de uma politriz, boinas e massa\n          de polir (abrasivas), é feito um processo gradual de reparo de uma\n          camada da pintura com a finalidade de obter uma superfície mais lisa\n          possível. Esse reparo é milesimal, e tem o objetivo “trabalhar”\n          somente nas impurezas superficiais da pintura. Manutenção Ao contrário\n          do que muitos falam, recomenda-se passar cera uma vez ao mês para\n          manutenção e prolongamento dos serviços de Espelhamento ou polimento\n          automotivo. Periodicidade Recomendada – Mesmo o reparo sendo\n          milesimal, não é um serviço para ser feito com frequência. E lembrando\n          que esse reparo é diretamente proporcional a vários fatores, como o\n          tipo de boina, granulometria do abrasivo (massa), profissional\n          (polidor); qualidade e tipo da pintura. Lorem ipsum dolor sit amet,\n          consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n          exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\n          dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n          proident, sunt in culpa qui officia deserunt mollit anim id est\n          laborum.\n        </span>\n        <div className=\"image\">\n          <img className=\"images\" src={signInBackgroundImg} alt=\"\" />\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default Service;\n","import React, { useCallback, useRef } from 'react';\nimport { FiDollarSign } from 'react-icons/fi';\n\nimport {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport api from '../../../services/api';\nimport getValidationErrors from '../../../utils/getValidationError';\nimport { currencyMasker } from '../../../utils/masks';\nimport Input from '../../Input';\n\ninterface IFormData {\n  name: string;\n  price: number;\n}\n\ninterface IUpdateServicePriceModalProps {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void | undefined;\n  id?: string;\n}\n\nconst UpdateServicePriceModal: React.FC<IUpdateServicePriceModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  id,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const toast = useToast();\n\n  const handleKeyUp = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      currencyMasker(event);\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, event) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: !data.price\n            ? Yup.string().required('Nome obrigatório')\n            : Yup.string(),\n          price: !data.name\n            ? Yup.number().required('Preço obrigatório')\n            : Yup.string(),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        if (!data.price) {\n          await api.put(`services/${id}`, { name: data.name });\n        }\n\n        if (!data.name) {\n          await api.put(`services/${id}`, { price: data.price });\n        }\n\n        if (data.name && data.price) {\n          await api.put(`services/${id}`, data);\n        }\n\n        toast({\n          status: 'success',\n          title: 'Serviço alterado com sucesso',\n          position: 'top',\n          duration: 3000,\n        });\n\n        onClose(event);\n\n        onSave();\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        toast({\n          status: 'error',\n          title: 'Erro ao atualizar o serviço',\n          description:\n            'Ocorreu um erro ao atualizar dados do serviço, tente novamente.',\n          position: 'top',\n          duration: 5000,\n        });\n      }\n    },\n    [id, onClose, onSave, toast],\n  );\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent\n          backgroundColor=\"#383838\"\n          maxWidth={900}\n          borderRadius=\"md\"\n        >\n          <ModalHeader>Alterar dados do serviço</ModalHeader>\n          <ModalCloseButton />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <ModalBody paddingBottom={4}>\n              <Flex direction=\"column\">\n                <Input placeholder=\"Nome\" name=\"name\" />\n\n                <Input\n                  placeholder=\"Novo valor\"\n                  onKeyUp={handleKeyUp}\n                  name=\"price\"\n                  icon={FiDollarSign}\n                />\n              </Flex>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                variant=\"ghost\"\n                onClick={onClose}\n                _hover={{ background: '#323232' }}\n                marginRight={4}\n              >\n                Cancelar\n              </Button>\n\n              <Button\n                type=\"submit\"\n                backgroundColor=\"#355a9d\"\n                _hover={{\n                  backgroundColor: '#5580b9',\n                }}\n              >\n                Salvar\n              </Button>\n            </ModalFooter>\n          </Form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateServicePriceModal;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 30% 16% 19% 33%;\n    align-items: center;\n    justify-content: center;\n\n    margin-top: 25px;\n    margin-top: 25px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n  }\n\n  .button {\n    margin-top: 30px;\n    float: right;\n    width: 250px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  width: 100.5%;\n  height: 550px;\n  overflow: auto;\n  margin-top: 16px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n\n  .box {\n    display: grid;\n    grid-template-columns: 30% 16% 20% 2.5% 30%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 15px;\n\n    & + div {\n      margin-top: 16px;\n    }\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n\n      div.unabled {\n        margin-right: 8px;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background: #ff6f60;\n      }\n\n      div.enabled {\n        margin-right: 8px;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background: #94ec94;\n      }\n    }\n\n    span {\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { FiEdit } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Button as CharaButton,\n  Skeleton,\n  Stack,\n  Tooltip,\n} from '@chakra-ui/core';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Menu from '../../components/Menu';\nimport UpdateServicePrice from '../../components/Modals/UpdateService';\nimport api from '../../services/api';\nimport { Container, Content, Separator, List } from './styles';\n\ninterface IFormatRow {\n  id: string;\n  name: string;\n  price: number;\n  enabled: boolean;\n}\n\nconst AdminServices = () => {\n  const [rows, setRows] = useState<IFormatRow[]>([]);\n\n  const [openUpdateService, setOpenUpdateService] = useState<string>();\n\n  const history = useHistory();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    api.get('services').then(response => {\n      const services: IFormatRow[] = response.data;\n\n      setRows(services);\n      setLoading(false);\n    });\n  }, []);\n\n  const getService = useCallback(() => {\n    api.get('services').then(response => {\n      const services: IFormatRow[] = response.data;\n\n      setRows(services);\n    });\n  }, []);\n\n  const handleOpenUpdateServiceModal = useCallback((id: string) => {\n    setOpenUpdateService(id);\n  }, []);\n\n  const handleCloseUpdateServiceModal = useCallback(async () => {\n    setOpenUpdateService(undefined);\n  }, []);\n\n  const rowsFormatted = useMemo(\n    () =>\n      rows.map(row => ({\n        id: row.id,\n        name: row.name,\n        price: row.price.toLocaleString('pt-br', {\n          style: 'currency',\n          currency: 'BRL',\n        }),\n        enabled: row.enabled,\n        button: (\n          <Tooltip\n            aria-label=\"Alterar dados do serviço\"\n            label=\"Alterar dados do serviço\"\n          >\n            <CharaButton\n              onClick={() => handleOpenUpdateServiceModal(row.id)}\n              _hover={{ background: '#353535', border: 0 }}\n              _focusWithin={{ border: 0 }}\n              background=\"#282828\"\n            >\n              <FiEdit />\n            </CharaButton>\n          </Tooltip>\n        ),\n      })),\n    [rows, handleOpenUpdateServiceModal],\n  );\n\n  return (\n    <Container>\n      <Menu />\n\n      <Breadcrumb text=\"Serviços\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Serviços</span>\n          <div />\n        </Separator>\n\n        <div className=\"boxTitle\">\n          <h3>Nome</h3>\n          <h3>Preço</h3>\n          <h3>Situação</h3>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List height={{ lg: '40vh', xl: '55vh' }}>\n              {rowsFormatted.map(row => (\n                <div className=\"box\" key={row.id}>\n                  <span>{row.name}</span>\n                  <span>\n                    {Number(row.price).toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </span>\n                  <span>\n                    <div className={!row.enabled ? 'unabled' : 'enabled'} />\n                    {!row.enabled ? 'Inativo' : 'Ativo'}\n                  </span>\n                  {row.button}\n                </div>\n              ))}\n            </List>\n          </>\n        )}\n\n        <div className=\"button\">\n          <Button\n            onClick={() => {\n              history.push('services-register');\n            }}\n          >\n            Registrar novo serviço\n          </Button>\n        </div>\n\n        <UpdateServicePrice\n          isOpen={!!openUpdateService}\n          onClose={handleCloseUpdateServiceModal}\n          onSave={getService}\n          id={openUpdateService}\n        />\n      </Content>\n    </Container>\n  );\n};\n\nexport default AdminServices;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .inputs {\n    height: 650px;\n    display: flex;\n  }\n\n  button {\n    width: 300px;\n    float: right;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-top: 36px;\n\n  & + div {\n    margin-left: 46px;\n  }\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiDollarSign } from 'react-icons/fi';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { currencyMasker } from '../../utils/masks';\nimport { Container, Content, Separator, InputContainer } from './styles';\n\ninterface IFormData {\n  name: string;\n  price: number;\n}\n\nconst ServicesRegister = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const handleKeyUp = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      currencyMasker(event);\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    async (data, { reset }) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          serviceName: Yup.string().required('Nome do serviço obrigatório.'),\n          serviceValue: Yup.number().required(\n            'O valor do serviço é obrigatório.',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const formData: IFormData = {\n          name: data.serviceName,\n          price: data.serviceValue,\n        };\n\n        const response = await api.post('services', formData);\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Cadastro realizado com sucesso.',\n            type: 'success',\n            description: 'O serviço foi cadastrado com sucesso.',\n          });\n\n          reset();\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Não foi possível realizar o caadastro.',\n          description:\n            'Esse serviço já foi criado ou ocorreu um erro, tente novamente.',\n          type: 'error',\n        });\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Adicionar serviços\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Cadastro de serviços</span>\n          <div />\n        </Separator>\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <div className=\"inputs\">\n            <InputContainer style={{ maxWidth: '375px', width: '100%' }}>\n              <div className=\"labels\">\n                <span>Nome do serviço:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"serviceName\"\n                type=\"serviceName\"\n                name=\"serviceName\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ maxWidth: '250px', width: '100%' }}>\n              <div className=\"labels\">\n                <span>Valor do serviço:</span>\n                <span>*</span>\n              </div>\n              <Input\n                onKeyUp={handleKeyUp}\n                className=\"input\"\n                id=\"serviceValue\"\n                type=\"serviceValue\"\n                name=\"serviceValue\"\n                style={{ width: '30px' }}\n                icon={FiDollarSign}\n              />\n            </InputContainer>\n          </div>\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ServicesRegister;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\nexport const Content = styled(ChakraBox)`\n  form {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const ListBoxes = styled.div`\n  display: grid;\n  grid-template-columns: 285px 285px 285px 285px;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport const PriceBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 200px;\n\n  @media (min-width: 1224px) {\n    padding: 16px;\n  }\n  padding-top: 18px;\n  padding-bottom: 18px;\n\n  border-radius: 8px;\n  border: 2px solid #626262;\n  border-radius: 10px;\n\n  background: #282828;\n\n  .title-container {\n    height: 54px;\n    width: 100%;\n    text-align: center;\n\n    span {\n      font: 16px 'Ubuntu', sans-serif;\n      color: #f4ede8;\n    }\n  }\n\n  span {\n    font: 15px 'Ubuntu', sans-serif;\n    color: ${shade(0.2, '#F4EDE8')};\n\n    margin-left: 6px;\n    margin-top: 10px;\n\n    @media (min-width: 1224px) {\n      margin-left: 16px;\n      margin-top: 10px;\n    }\n  }\n\n  .inputs {\n    max-width: 250px;\n    margin-left: 16px;\n\n    div {\n      height: 34px;\n    }\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  width: 100%;\n\n  button {\n    max-width: 250px;\n    & + button {\n      margin-right: 16px;\n    }\n  }\n`;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { Grid } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport { useAuth } from '../../context/auth';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport { currencyMasker } from '../../utils/masks';\nimport { Container, Content, Buttons, PriceBox } from './styles';\n\ninterface IServices {\n  id: number;\n  name: string;\n  price: number;\n  enabled: boolean;\n}\n\nconst SetCompanyPrices = () => {\n  const { user } = useAuth();\n  const { addToast } = useToast();\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n\n  const [services, setServices] = useState<IServices[]>([]);\n\n  useEffect(() => {\n    let newServices: IServices[] = [] as IServices[];\n    let existingServices: IServices[] = [] as IServices[];\n\n    api.get('services').then(response => {\n      existingServices = response.data;\n    });\n\n    api.get('company-services/company').then(response => {\n      const companyservices = response.data;\n\n      const companyServicesIds = companyservices.map(\n        (companyService: { id: string; service_id: string }) =>\n          companyService.service_id,\n      );\n\n      newServices = existingServices.filter(\n        service => !companyServicesIds.includes(service.id),\n      );\n\n      setServices(newServices);\n    });\n  }, [history]);\n\n  const handleKeyUp = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      currencyMasker(event);\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    async (data: any) => {\n      try {\n        const ids = Object.keys(data);\n\n        const newServices = ids.map(id => ({\n          serviceId: String(id),\n          price: parseFloat(data[id]),\n        }));\n\n        // eslint-disable-next-line no-restricted-globals\n        const voidValues = newServices.filter(value => isNaN(value.price));\n\n        const voidInputsClassesNames = voidValues.map(value => value.serviceId);\n\n        if (voidInputsClassesNames.length > 0) {\n          addToast({\n            title: `${voidInputsClassesNames.length} campos vazios`,\n            type: 'error',\n            description: 'Por favor preencha todos os campos.',\n          });\n\n          return;\n        }\n\n        const response = await api.post('company-services', {\n          companyId: user?.profile.company_id,\n          services: newServices,\n        });\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Sucesso',\n            type: 'success',\n            description: 'Agora a sua concessionária ja pode registrar vendas.',\n          });\n          history.push('services');\n        }\n      } catch (err) {\n        addToast({\n          title: 'Não foi possivel salvar.',\n          type: 'error',\n          description: 'Ocorreu um erro, tente novamente.',\n        });\n      }\n    },\n    [addToast, history, user],\n  );\n\n  return (\n    <Container>\n      <Menu disableButton />\n      <Breadcrumb text=\"Configure o preço de cada serviço em seu estabelecimento.\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        marginTop=\"26px\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Form ref={formRef} style={{ width: '100%' }} onSubmit={handleSubmit}>\n          <Grid\n            width=\"100%\"\n            marginTop={4}\n            maxWidth=\"100%\"\n            gridTemplateColumns={{\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(3, 1fr)',\n              xl: 'repeat(5, 1fr)',\n            }}\n            gap={6}\n            justifyContent=\"space-between\"\n          >\n            {services.map(service => (\n              <PriceBox key={service.id}>\n                <div className=\"title-container\">\n                  <span id=\"service-name\">{service.name.toUpperCase()}</span>\n                </div>\n                <br />\n                <span id=\"price-totalclean\">\n                  Preço da Nanotech:{' '}\n                  {Number(service.price).toLocaleString('pt-br', {\n                    style: 'currency',\n                    currency: 'BRL',\n                  })}\n                </span>\n                <br />\n                <div className=\"inputs\">\n                  <Input\n                    className=\"input\"\n                    id={service.id.toString()}\n                    name={service.id.toString()}\n                    placeholder=\"Preço\"\n                    onKeyUp={handleKeyUp}\n                    style={{ width: '30px' }}\n                    icon={FiDollarSign}\n                  />\n                </div>\n              </PriceBox>\n            ))}\n          </Grid>\n          <Buttons>\n            <Button type=\"submit\">Salvar</Button>\n            {/* <Button skipButton>Pular</Button> */}\n          </Buttons>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SetCompanyPrices;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .inputs {\n    height: 650px;\n    display: flex;\n  }\n\n  button {\n    width: 300px;\n    float: right;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-top: 36px;\n\n  & + div {\n    margin-left: 46px;\n  }\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport queryString from 'query-string';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport FormattedInput from '../../components/FormattedInput';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport { Container, Content, Separator, InputContainer } from './styles';\n\ninterface ICompany {\n  id: number;\n  name: string;\n}\n\ninterface IFormData {\n  unitName: string;\n  unitTelephone: string;\n  unitIdentifier: string;\n}\n\nconst UnitiesRegister = () => {\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const [company, setCompany] = useState<ICompany | null>(null);\n\n  useEffect(() => {\n    const query = history.location.search;\n\n    const parsedQuery = queryString.parse(query, { parseNumbers: true });\n\n    if (!parsedQuery.company || typeof parsedQuery.company !== 'string') {\n      history.push('/services');\n      return;\n    }\n\n    api\n      .get(`companies/${parsedQuery.company}`)\n      .then(response => {\n        const newCompany = response.data;\n\n        setCompany({ id: newCompany.id, name: newCompany.name });\n      })\n      .catch(() => {\n        addToast({\n          title: 'Essa concessionária não existe.',\n          type: 'error',\n        });\n\n        history.push('/services');\n      });\n  }, [history, addToast]);\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, { reset }) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          unitName: Yup.string().required('Nome da unidade obrigatório'),\n          unitIdentifier: Yup.string()\n            .required('Identificador da unidade obrigatório')\n            .length(2, 'Identificador da concessionária deve ter 2 dígitos.'),\n          unitTelephone: Yup.string()\n            .required('Telefone da unidade obrigatório')\n            .min(9, 'O telefone deve ter no mínimo 9 dígitos')\n            .max(11, 'O telefone deve ter no máximo 11 dígitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const requestDataSubmit = {\n          name: data.unitName,\n          telephone: data.unitTelephone,\n          companyId: company?.id,\n          client_identifier: data?.unitIdentifier,\n        };\n\n        const response = await api.post('units', requestDataSubmit);\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Sucesso',\n            description: `Unidade adicionada a concessionária ${company?.name}, com sucesso`,\n            type: 'success',\n          });\n\n          reset();\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Não foi possível realizar o caadastro.',\n          description:\n            'Essa unidade já foi criada ou ocorreu um erro, tente novamente.',\n          type: 'error',\n        });\n      }\n    },\n    [addToast, company],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb\n        text={`Adicionar unidades a concessionária ${company?.name}`}\n      />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Cadastro de unidades</span>\n          <div />\n        </Separator>\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <div className=\"inputs\">\n            <InputContainer style={{ maxWidth: '375px', width: '100%' }}>\n              <div className=\"labels\">\n                <span>Nome da unidade:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"unitName\"\n                type=\"unitName\"\n                name=\"unitName\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ maxWidth: '375px', width: '100%' }}>\n              <div className=\"labels\">\n                <span>Telefone da unidade:</span>\n                <span>*</span>\n              </div>\n\n              <FormattedInput\n                className=\"input\"\n                id=\"unitTelephone\"\n                name=\"unitTelephone\"\n                format=\"## #####-####\"\n                mask=\"_\"\n              />\n            </InputContainer>\n\n            <InputContainer style={{ maxWidth: '375px', width: '100%' }}>\n              <div className=\"labels\">\n                <span>Identificador da unidade:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"unitIdentifier\"\n                type=\"unitIdentifier\"\n                name=\"unitIdentifier\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n          </div>\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default UnitiesRegister;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100vh;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n\n  .edition-mode-container {\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    background: rgba(0, 0, 0, 0.3);\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    section {\n      width: 100%;\n      max-width: 600px;\n      height: 450px;\n      background: #323232;\n      border-radius: 15px;\n      border: 1.5px solid #525252;\n      .header {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        padding: 15px;\n\n        h1 {\n          font: 30px 'Ubuntu', sans-serif;\n          font-weight: bold;\n          color: #ccc;\n        }\n\n        span.service-name {\n          margin-top: 16px;\n          font: 25px 'Ubuntu', sans-serif;\n          color: #ccc;\n        }\n\n        .company-service-data-header {\n          margin-top: 48px;\n          display: grid;\n          grid-template-columns: 50% 50%;\n          font: 18px 'Ubuntu', sans-serif;\n          font-weight: bold;\n          color: #ccc;\n\n          width: 80%;\n        }\n\n        .company-service-data {\n          margin-top: 18px;\n          display: grid;\n          grid-template-columns: 50% 50%;\n          font: 18px 'Ubuntu', sans-serif;\n          color: #ccc;\n\n          width: 80%;\n        }\n      }\n\n      .input {\n        font: 18px 'Ubuntu', sans-serif;\n        font-weight: bold;\n        color: #ccc;\n        margin-top: 26px;\n        margin-left: 66px;\n        max-width: 270px;\n        width: 80%;\n\n        label {\n          margin-left: 6px;\n        }\n\n        div {\n          margin-top: 10px;\n          height: 34px;\n        }\n      }\n\n      .buttons {\n        display: flex;\n        width: 300px;\n        float: right;\n        margin-top: 36px;\n\n        button {\n          height: 40px;\n          margin-right: 16px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 30% 26% 26% 18%;\n    align-items: center;\n    justify-content: center;\n    padding-left: 10px;\n    padding-right: 26px;\n\n    margin-top: 25px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n    color: #ccc;\n\n    span {\n      font: 16px 'Ubuntu', sans-serif;\n      font-weight: bold;\n    }\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  width: 100%;\n  height: 550px;\n  overflow: auto;\n  margin-top: 16px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: grid;\n  grid-template-columns: 30% 26% 26% 14% 4%;\n  padding-left: 10px;\n  padding-right: 26px;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n\n  background: #303030;\n  height: 60px;\n  border-radius: 15px;\n  color: #ccc;\n\n  & + div {\n    margin-top: 16px;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    font: 15px 'Ubuntu', sans-serif;\n    font-weight: 400;\n  }\n\n  svg {\n    cursor: pointer;\n    color: #ccc;\n  }\n\n  svg:hover {\n    color: ${shade(0.2, '#ccc')};\n  }\n`;\n","import React, { useRef, useCallback, useEffect, useState } from 'react';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { MdModeEdit } from 'react-icons/md';\n\nimport { Skeleton, Stack } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport { currencyMasker } from '../../utils/masks';\nimport { Container, Content, Separator, List, Box } from './styles';\n\ninterface ICompanyService {\n  id: number;\n  price: number;\n  service: {\n    id: number;\n    price: number;\n    name: string;\n  };\n}\n\nconst UpdateCompanyPrices = () => {\n  const { addToast } = useToast();\n  const formRef = useRef<FormHandles>(null);\n\n  const [companyServices, setCompanyServices] = useState<ICompanyService[]>([]);\n  const [editionMode, setEditionMode] = useState<boolean>(false);\n  const [\n    companyServiceSelected,\n    setCompanyServiceSelected,\n  ] = useState<ICompanyService>({} as ICompanyService);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const loadCompanyServices = useCallback(() => {\n    setLoading(true);\n\n    api.get('company-services/company').then(response => {\n      const { data } = response;\n\n      const services: ICompanyService[] = data.map(\n        (companyService: ICompanyService) => {\n          const { id, price, service } = companyService;\n\n          return {\n            id,\n            price,\n            service,\n          };\n        },\n      );\n\n      setCompanyServices(services);\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    loadCompanyServices();\n  }, [loadCompanyServices]);\n\n  const handleEditClick = useCallback((companyService: ICompanyService) => {\n    setCompanyServiceSelected(companyService);\n\n    setEditionMode(true);\n  }, []);\n\n  const handleKeyUp = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      currencyMasker(event);\n    },\n    [],\n  );\n\n  const handleCancelEdition = useCallback(() => {\n    setEditionMode(false);\n    setCompanyServiceSelected({} as ICompanyService);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async data => {\n      try {\n        if (!Number(data.newValue)) {\n          formRef.current?.setErrors({\n            newValue: 'O novo valor deve ser informado.',\n          });\n          return;\n        }\n\n        const dataToSubmit = {\n          companyServiceId: companyServiceSelected?.id,\n          price: Number(data.newValue),\n        };\n\n        const response = await api.put('company-services', [dataToSubmit]);\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Sucesso',\n            type: 'success',\n            description: 'Valor alterado com sucesso.',\n          });\n          setEditionMode(false);\n          loadCompanyServices();\n        }\n      } catch (err) {\n        addToast({\n          title: 'Erro.',\n          type: 'error',\n          description: 'Ocorreu um erro ao alterar o valor, tente novamente.',\n        });\n      }\n    },\n    [addToast, companyServiceSelected, loadCompanyServices],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb text=\"Preços dos serviços\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Preços</span>\n          <div />\n        </Separator>\n        <div className=\"boxTitle\">\n          <span>Serviço</span>\n          <span>Valor da Nanotech</span>\n          <span>Valor a ser cobrado</span>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List height={{ lg: '40vh', xl: '55vh' }}>\n              {companyServices?.map(companyService => (\n                <Box key={companyService.id}>\n                  <span>{companyService.service.name}</span>\n                  <span>\n                    {Number(companyService.service.price).toLocaleString(\n                      'pt-br',\n                      {\n                        style: 'currency',\n                        currency: 'BRL',\n                      },\n                    )}\n                  </span>\n                  <span>\n                    {Number(companyService.price).toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </span>\n                  <span></span>\n                  <MdModeEdit\n                    size={20}\n                    onClick={() => {\n                      handleEditClick(companyService);\n                    }}\n                  />\n                </Box>\n              ))}\n            </List>\n          </>\n        )}\n      </Content>\n\n      {editionMode === true && (\n        <div className=\"edition-mode-container\">\n          <section>\n            <div className=\"header\">\n              <h1>Altere o valor do serviço</h1>\n              <span className=\"service-name\">\n                {companyServiceSelected?.service.name}\n              </span>\n\n              <div className=\"company-service-data-header\">\n                <span>Valor a ser alterado</span>\n                <span>Valor da Nanotech</span>\n              </div>\n\n              <div className=\"company-service-data\">\n                <span>\n                  {Number(companyServiceSelected?.price).toLocaleString(\n                    'pt-br',\n                    {\n                      style: 'currency',\n                      currency: 'BRL',\n                    },\n                  )}\n                </span>\n                <span>\n                  {Number(companyServiceSelected?.service.price).toLocaleString(\n                    'pt-br',\n                    {\n                      style: 'currency',\n                      currency: 'BRL',\n                    },\n                  )}\n                </span>\n              </div>\n            </div>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n              <div className=\"input\">\n                <p>Novo valor:</p>\n                <Input\n                  onKeyUp={handleKeyUp}\n                  name=\"newValue\"\n                  icon={FiDollarSign}\n                />\n              </div>\n\n              <div className=\"buttons\">\n                <Button skipButton onClick={handleCancelEdition}>\n                  Cancelar\n                </Button>\n                <Button type=\"submit\">Salvar</Button>\n              </div>\n            </Form>\n          </section>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default UpdateCompanyPrices;\n","import React, { useCallback, useRef } from 'react';\nimport { FiPhone } from 'react-icons/fi';\n\nimport {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { IUser } from '../../../interfaces/users';\nimport api from '../../../services/api';\nimport getValidationErrors from '../../../utils/getValidationError';\nimport FormattedInput from '../../FormattedInput';\nimport Input from '../../Input';\n\ninterface IFormData {\n  name?: string;\n  telephone?: string;\n  role?: string;\n}\n\ninterface IUpdateUserDataModalProps {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void | undefined;\n  user: IUser | undefined;\n}\n\nconst UpdateUserDataModal: React.FC<IUpdateUserDataModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  user,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n  const toast = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, event) => {\n      try {\n        formRef.current?.setErrors({});\n\n        if (!data.name && !data.telephone && !data.role) {\n          formRef.current?.setErrors({\n            name: 'Pelo menos algum campo deve ser preenchido',\n            telephone: 'Pelo menos algum campo deve ser preenchido',\n            role: 'Pelo menos algum campo deve ser preenchido',\n          });\n\n          return;\n        }\n\n        const schema = Yup.object().shape({\n          name: Yup.string(),\n          telephone: data.telephone\n            ? Yup.string()\n                .max(\n                  13,\n                  'O número de telefone deve conter no máximo 11 dígitos.',\n                )\n                .min(8, 'O número de telefone deve conter no mínimo 8 dígitos.')\n            : Yup.string(),\n          role: Yup.string(),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        let submitData = {};\n\n        if (data.name) {\n          submitData = { ...submitData, name: data.name };\n        }\n\n        if (data.telephone) {\n          submitData = { ...submitData, telephone: data.telephone };\n        }\n\n        if (data.role) {\n          submitData = { ...submitData, role: data.role };\n        }\n\n        await api.put(`users/${user?.user?.id}`, submitData);\n\n        toast({\n          status: 'success',\n          title: 'Dados da concessionária alterados com sucesso',\n          position: 'top',\n          duration: 3000,\n        });\n\n        onClose(event);\n\n        onSave();\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        toast({\n          status: 'error',\n          title: 'Erro ao atualizar os dados da concessionária',\n          description:\n            'Ocorreu um erro ao atualizar os dados da concessionária, tente novamente.',\n          position: 'top',\n          duration: 5000,\n        });\n      }\n    },\n    [user, onClose, onSave, toast],\n  );\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent\n          backgroundColor=\"#383838\"\n          maxWidth={900}\n          borderRadius=\"md\"\n        >\n          <ModalHeader>{`Alterar dados de ${user?.name}`}</ModalHeader>\n          <ModalCloseButton />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <ModalBody paddingBottom={4}>\n              <Flex direction=\"column\">\n                <Input\n                  defaultValue={user?.name}\n                  placeholder=\"Nome\"\n                  name=\"name\"\n                />\n\n                <FormattedInput\n                  className=\"input\"\n                  id=\"telephone\"\n                  placeholder=\"Contato\"\n                  name=\"telephone\"\n                  format=\"## #####-####\"\n                  mask=\"_\"\n                  defaultValue={user?.user?.telephone}\n                  icon={FiPhone}\n                />\n              </Flex>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                variant=\"ghost\"\n                onClick={onClose}\n                _hover={{ background: '#323232' }}\n                marginRight={4}\n              >\n                Cancelar\n              </Button>\n\n              <Button\n                type=\"submit\"\n                backgroundColor=\"#355a9d\"\n                _hover={{\n                  backgroundColor: '#5580b9',\n                }}\n              >\n                Salvar\n              </Button>\n            </ModalFooter>\n          </Form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateUserDataModal;\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\n\nexport const Content = styled(ChakraBox)`\n  .boxTitle {\n    display: grid;\n    grid-template-columns: 22% 22% 54%;\n    align-items: center;\n    justify-content: center;\n\n    margin-top: 25px;\n    margin-top: 25px;\n    background: #282828;\n    height: 60px;\n    border-radius: 15px;\n  }\n\n  .button {\n    margin-top: 30px;\n    float: right;\n    width: 250px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const List = styled(ChakraBox)`\n  width: 100.5%;\n  height: 550px;\n  overflow: auto;\n  margin-top: 16px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background: #383838;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #525252;\n    border-radius: 20px;\n  }\n\n  .box {\n    display: grid;\n    grid-template-columns: 22% 22% 20% 30% 4%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 8px;\n\n    & + div {\n      margin-top: 16px;\n    }\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n\n      div.unabled {\n        margin-right: 8px;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background: #ff6f60;\n      }\n\n      div.enabled {\n        margin-right: 8px;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background: #94ec94;\n      }\n    }\n\n    span {\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  & + div {\n    margin-top: 16px;\n  }\n\n  div.header {\n    padding-left: 10px;\n    display: grid;\n    width: 100%;\n    grid-template-columns: 22% 22% 50% 4%;\n    align-items: center;\n    justify-content: center;\n\n    background: #303030;\n    height: 60px;\n    border-radius: 15px 15px 0 0;\n\n    span {\n      display: flex;\n      align-items: center;\n      font: 15px 'Ubuntu', sans-serif;\n      font-weight: 400;\n      div {\n        margin-right: 6px;\n        border-radius: 50%;\n        width: 12px;\n        height: 12px;\n      }\n    }\n\n    a {\n      display: flex;\n      align-items: center;\n      text-decoration: none;\n\n      font: 14px 'Ubuntu', sans-serif;\n      font-weight: 400;\n\n      color: #97bcff;\n      transition: color 0.2s;\n\n      &:hover {\n        color: #5580b9;\n      }\n    }\n  }\n\n  .dropDown {\n    background: #353535;\n    border-radius: 0 0 15px 15px;\n    padding: 10px 16px 20px 16px;\n    width: 100%;\n\n    div.separator {\n      margin-top: 5px;\n      span {\n        font: 16px 'Ubuntu', sans-serif;\n      }\n    }\n\n    div.title {\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 25% 25% 25% 5% 25%;\n      align-items: center;\n\n      & + div {\n        margin-top: 8px;\n      }\n\n      span {\n        font: 16px 'Ubuntu', sans-serif;\n        font-weight: bold;\n      }\n    }\n\n    div.person {\n      margin-top: 16px;\n      background: #424242;\n      min-height: 35px;\n      border-radius: 8px;\n      padding-left: 26px;\n\n      display: grid;\n      grid-template-columns: 25% 25% 25% 5% 5% 20%;\n      align-items: center;\n      & + div {\n        margin-top: 8px;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from 'react-icons/fa';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { RiAddFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\n\nimport { Button, Skeleton, Stack, Tooltip } from '@chakra-ui/core';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Menu from '../../components/Menu';\nimport UpdateUserModal from '../../components/Modals/UpdateUserData';\nimport { IUser } from '../../interfaces/users';\nimport api from '../../services/api';\nimport getUserRoleTranslated from '../../utils/getUserRoleTranslated';\nimport { Container, Content, Separator, List, Box } from './styles';\n\ninterface IFormatRow {\n  id: number;\n  name: string;\n  telephone: string;\n  profiles: [\n    {\n      id: number;\n      name: string;\n      telephone: string;\n      user: {\n        id: number;\n        role: string;\n        telephone: string;\n      };\n    },\n  ];\n}\n\ninterface IFormattedUser {\n  id: number;\n  name: string;\n  telephone: string;\n  role: string;\n  update_button: JSX.Element;\n}\n\ninterface IFormattedCompany {\n  id: number;\n  name: string;\n  telephone: string;\n  users: IFormattedUser[];\n}\n\nconst UsersByUnits = () => {\n  const [companies, setCompanies] = useState<IFormatRow[]>([]);\n  const [openedCompanies, setOpenedCommpanies] = useState<number[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [userToUpdate, setUserToUpdate] = useState<IUser | undefined>(\n    undefined,\n  );\n\n  const getCompaniesByUsers = useCallback(() => {\n    setLoading(true);\n\n    api.get('companies').then(response => {\n      const newCompanies: IFormatRow[] = response.data;\n\n      setCompanies(newCompanies);\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n\n    api.get('companies').then(response => {\n      const newCompanies: IFormatRow[] = response.data;\n\n      setCompanies(newCompanies);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleOpenUnities = useCallback(\n    (id: number) => {\n      setOpenedCommpanies([...openedCompanies, id]);\n    },\n    [openedCompanies],\n  );\n\n  const handleCloseUnities = useCallback(\n    (id: number) => {\n      const newOpenedUnities = openedCompanies.filter(unitId => unitId !== id);\n\n      setOpenedCommpanies(newOpenedUnities);\n    },\n    [openedCompanies],\n  );\n\n  const handleOpenUpdateUserData = useCallback((user: IUser) => {\n    setUserToUpdate(user);\n  }, []);\n\n  const handleCloseUpdateUserModal = useCallback(() => {\n    setUserToUpdate(undefined);\n  }, []);\n\n  const formattedUsersByCompanies: IFormattedCompany[] = useMemo(\n    () =>\n      companies.map(company => {\n        const users: IFormattedUser[] = [];\n\n        company.profiles.forEach(profile => {\n          users.push({\n            id: profile.id,\n            name: profile.name,\n            telephone: profile.user.telephone,\n            role: profile.user.role,\n            update_button: (\n              <Tooltip\n                aria-label=\"Alterar dados do usuário\"\n                label=\"Alterar dados do usuário\"\n              >\n                <Button\n                  onClick={() => handleOpenUpdateUserData(profile)}\n                  _hover={{\n                    backgroundColor: '#404040',\n                    color: '#ccc',\n                    border: 0,\n                  }}\n                  _focusWithin={{ border: 0 }}\n                  background=\"#424242\"\n                >\n                  <FiEdit2 />\n                </Button>\n              </Tooltip>\n            ),\n          });\n        });\n\n        return {\n          id: company.id,\n          name: company.name,\n          telephone: company.telephone,\n          users,\n        };\n      }),\n    [companies, handleOpenUpdateUserData],\n  );\n\n  return (\n    <Container>\n      <Menu />\n\n      <Breadcrumb text=\"Usuários por concessionária\" />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        marginTop=\"26px\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Separator>\n          <span>Concessionárias</span>\n          <div />\n        </Separator>\n        <div className=\"boxTitle\">\n          <h3>Concessionária</h3>\n          <h3>Telephone</h3>\n        </div>\n\n        {loading ? (\n          <Stack marginTop=\"16px\">\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n            <Skeleton\n              height=\"60px\"\n              borderRadius=\"md\"\n              colorStart=\"#505050\"\n              colorEnd=\"#404040\"\n              marginTop=\"8px\"\n            />\n          </Stack>\n        ) : (\n          <>\n            <List height={{ lg: '40vh', xl: '55vh' }}>\n              {formattedUsersByCompanies.map(company => (\n                <Box key={company.id}>\n                  <div\n                    className=\"header\"\n                    style={\n                      openedCompanies.includes(company.id)\n                        ? { borderRadius: '15px 15px 0 0' }\n                        : { borderRadius: 15 }\n                    }\n                  >\n                    <span>{company.name}</span>\n                    <span>{company.telephone}</span>\n                    <Link\n                      className=\"createNewCompanyLink\"\n                      to={`users-register/?company=${company.id}`}\n                    >\n                      <RiAddFill size={18} /> Adicionar novo usuário a essa\n                      concessionária\n                    </Link>\n                    {openedCompanies.includes(company.id) ? (\n                      <FaArrowAltCircleUp\n                        onClick={() => handleCloseUnities(company.id)}\n                        style={{ cursor: 'pointer' }}\n                        size={26}\n                      />\n                    ) : (\n                      <FaArrowAltCircleDown\n                        onClick={() => handleOpenUnities(company.id)}\n                        style={{ cursor: 'pointer' }}\n                        size={26}\n                      />\n                    )}\n                  </div>\n\n                  <div\n                    className=\"dropDown\"\n                    hidden={!openedCompanies.includes(company.id)}\n                  >\n                    <Separator className=\"separator\">\n                      <span>Usuários dessa concessionária</span>\n                      <div />\n                    </Separator>\n\n                    <div className=\"title\">\n                      <span>Nome</span>\n                      <span>Telefone</span>\n                      <span>Cargo</span>\n                    </div>\n\n                    {company.users.map(person => (\n                      <div className=\"person\" key={person.id}>\n                        <span>{person.name}</span>\n                        <span>{person.telephone}</span>\n                        <span>{getUserRoleTranslated(person.role)}</span>\n                        {person.update_button}\n                      </div>\n                    ))}\n                  </div>\n                </Box>\n              ))}\n            </List>\n          </>\n        )}\n      </Content>\n\n      <UpdateUserModal\n        isOpen={!!userToUpdate}\n        onClose={handleCloseUpdateUserModal}\n        onSave={getCompaniesByUsers}\n        user={userToUpdate}\n      />\n    </Container>\n  );\n};\n\nexport default UsersByUnits;\n","export default function getUserRoleTranslated(role: string): string {\n  switch (role) {\n    case 'SELLER':\n      return 'Vendedor';\n    case 'MANAGER':\n      return 'Gerente';\n    case 'ADMIN':\n      return 'Administrador';\n    default:\n      return 'Outracoisa';\n  }\n}\n","import { Box as ChakraBox } from '@chakra-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled(ChakraBox)`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n  height: 100%;\n\n  @media (min-width: 1224px) {\n    padding-left: 80px;\n    padding-top: 45px;\n  }\n`;\nexport const Content = styled(ChakraBox)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  .inputs {\n    height: 650px;\n    display: flex;\n  }\n\n  button {\n    width: 300px;\n    float: right;\n    margin-top: 400px;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  span {\n    font: 20px 'Ubuntu', sans-serif;\n    font-weight: bold;\n    color: #eee;\n  }\n\n  div {\n    height: 2px;\n    flex: 1;\n\n    background: #686868;\n    margin-left: 10px;\n    margin-top: 3px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-top: 30px;\n\n  & + div {\n    margin-left: 46px;\n  }\n\n  div.labels {\n    background: transparent;\n    border: 0;\n    display: flex;\n    justify-content: space-between;\n\n    span {\n      font: 18px 'Ubuntu', sans-serif;\n      margin-left: 4px;\n      font-weight: 400;\n      color: #eee;\n\n      & + span {\n        color: #ff6f60;\n      }\n    }\n  }\n\n  div {\n    margin-top: 6px;\n    height: 30px;\n    border-radius: 6px;\n    background: #424242;\n\n    div {\n      background: #424242;\n      border: 0;\n      height: 26px;\n    }\n  }\n`;\n\nexport const Inputs = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n\n  .SelectContainer {\n    div.labels {\n      background: transparent;\n      border: 0;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 39px;\n\n      span {\n        font: 18px 'Ubuntu', sans-serif;\n        margin-left: 4px;\n        font-weight: 400;\n        color: #eee;\n\n        & + span {\n          color: #ff6f60;\n        }\n      }\n    }\n\n    & + div {\n      margin-left: 46px;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport queryString from 'query-string';\nimport { isUuid } from 'uuidv4';\nimport * as Yup from 'yup';\n\nimport Breadcrumb from '../../components/Breadcrumb';\nimport Button from '../../components/Button';\nimport FormattedInput from '../../components/FormattedInput';\nimport Input from '../../components/Input';\nimport Menu from '../../components/Menu';\nimport Select from '../../components/Select';\nimport { useToast } from '../../context/toast';\nimport api from '../../services/api';\nimport getValidationsErrors from '../../utils/getValidationError';\nimport {\n  Container,\n  Content,\n  Separator,\n  InputContainer,\n  Inputs,\n} from './styles';\n\ninterface IFormData {\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  role: string;\n  unit: string;\n  name: string;\n  telephone: string;\n}\n\ninterface IDataSubmit {\n  username: string;\n  email: string;\n  password: string;\n  role: string;\n  name: string;\n  telephone: string;\n  companyId: string;\n  unitId?: string;\n  enabled: boolean;\n}\n\ninterface ICompany {\n  id: string;\n  name: string;\n  unities: [\n    {\n      id: string;\n      name: string;\n    },\n  ];\n}\n\nconst UsersRegister = () => {\n  const history = useHistory();\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const [company, setCompany] = useState<ICompany>({} as ICompany);\n  const [loading, setLoading] = useState(false);\n  const [role, setRole] = useState<string>('');\n  const [unitSelectOptions, setUnitSelectOptions] = useState<\n    Array<{ value: string; label: string }>\n  >([]);\n\n  const roleSelectOptions = [\n    { value: 'SELLER', label: 'Vendedor' },\n    { value: 'MANAGER', label: 'Gerente' },\n  ];\n\n  useEffect(() => {\n    const query = history.location.search;\n\n    const parsedQuery = queryString.parse(query, { parseNumbers: true });\n    if (\n      !parsedQuery.company ||\n      typeof parsedQuery.company !== 'string' ||\n      !isUuid(parsedQuery.company)\n    ) {\n      history.push('/services');\n      return;\n    }\n\n    api\n      .get(`companies/${parsedQuery.company}`)\n      .then(response => {\n        const newCompany: ICompany = response.data;\n\n        const unitiesOptions: Array<{\n          value: string;\n          label: string;\n        }> = newCompany.unities.map(unit => ({\n          value: unit.id,\n          label: unit.name,\n        }));\n\n        setUnitSelectOptions(unitiesOptions);\n        setCompany({\n          id: newCompany.id,\n          name: newCompany.name,\n          unities: newCompany.unities,\n        });\n      })\n      .catch(() => {\n        history.push('/services');\n      });\n  }, [history]);\n\n  const handleChangeRoleSelect = useCallback(\n    newValue => {\n      setRole(newValue.target.value);\n    },\n    [setRole],\n  );\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, { reset }) => {\n      setLoading(true);\n\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome do usuário obrigatório'),\n          telephone: Yup.string()\n            .min(9, 'O telefone deve ter no mínimo 9 dígitos')\n            .max(13, 'O telefone deve ter no máximo 11 dígitos'),\n          username: Yup.string().required('Nome de login obrigatório'),\n          email: Yup.string().required('E-mail obrigatório'),\n          role: Yup.string().required('Cargo do usuário obrigatório'),\n          unit:\n            role === 'SELLER'\n              ? Yup.string().required('Unidade do usuário obrigatório')\n              : Yup.string(),\n          password: Yup.string().required('Senha obrigatória'),\n          confirmPassword: Yup.string().required(\n            'Confirmação de senha obrigatória',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (data.password !== data.confirmPassword) {\n          formRef.current?.setErrors({\n            password: 'As senhas não batem.',\n            confirmPassword: 'As senhas não batem.',\n          });\n          return;\n        }\n\n        if (role === 'SELLER') {\n          const formDataToCreateSeller: IDataSubmit = {\n            username: data.username,\n            email: data.email,\n            password: data.password,\n            role: data.role,\n            name: data.name,\n            telephone: data.telephone,\n            companyId: company?.id,\n            unitId: String(data.unit),\n            enabled: true,\n          };\n\n          const response = await api.post(\n            'users/signup',\n            formDataToCreateSeller,\n          );\n\n          if (response.status === 200) {\n            addToast({\n              title: 'Cadastro realizado com sucesso.',\n              type: 'success',\n              description: `Agora o(a) usuário(a) ${data.username} já pode utilizar o sistema.`,\n            });\n\n            setRole('');\n\n            reset();\n          }\n          return;\n        }\n\n        const formDataToCreateManager: IDataSubmit = {\n          username: data.username,\n          email: data.email,\n          password: data.password,\n          role: data.role,\n          name: data.name,\n          telephone: data.telephone,\n          companyId: company.id,\n          enabled: true,\n        };\n\n        const response = await api.post(\n          'users/signup',\n          formDataToCreateManager,\n        );\n\n        if (response.status === 200) {\n          addToast({\n            title: 'Cadastro realizado com sucesso.',\n            type: 'success',\n            description: `Agora o usuário ${data.username} já pode utilizar o sistema.`,\n          });\n\n          reset();\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationsErrors(err);\n\n          formRef.current?.setErrors(errors);\n        } else {\n          addToast({\n            title: 'Não foi possível realizar o cadastro.',\n            description:\n              'Esse usuário já foi criado ou ocorreu um erro, tente novamente.',\n            type: 'error',\n          });\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast, company, role],\n  );\n\n  return (\n    <Container>\n      <Menu />\n      <Breadcrumb\n        text={`Registro de novos usuários a concessionária ${company.name}`}\n      />\n      <Content\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        width=\"100%\"\n        marginTop=\"26px\"\n        maxWidth={{\n          xs: '90vw',\n          sm: '90vw',\n          md: '80vw',\n          lg: '78vw',\n          xl: '90vw',\n        }}\n      >\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Separator>\n            <span>Dados do usário</span>\n            <div />\n          </Separator>\n\n          <Inputs>\n            <InputContainer style={{ width: '250px' }}>\n              <div className=\"labels\">\n                <span>Nome:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"name\"\n                type=\"name\"\n                name=\"name\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '250px' }}>\n              <div className=\"labels\">\n                <span>Telefone:</span>\n                <span>*</span>\n              </div>\n\n              <FormattedInput\n                className=\"input\"\n                id=\"telephone\"\n                name=\"telephone\"\n                format=\"## #####-####\"\n                mask=\"_\"\n              />\n            </InputContainer>\n\n            <div className=\"SelectContainer\" style={{ width: '265' }}>\n              <div className=\"labels\">\n                <span>Cargo:</span>\n                <span>*</span>\n              </div>\n              <Select\n                height=\"34px\"\n                backgroundColor=\"#424242\"\n                color=\"White\"\n                name=\"role\"\n                onChange={handleChangeRoleSelect}\n                placeholder=\"Selecione o cargo do usuário\"\n                containerProps={{\n                  marginTop: '16px',\n                  marginRight: 8,\n                  width: '100%',\n                  height: '37px',\n                  border: '2px solid',\n                  borderColor: '#585858',\n                  backgroundColor: '#424242',\n                }}\n              >\n                {roleSelectOptions.map(opt => (\n                  <option key={opt.value} value={opt.value}>\n                    {opt.label}\n                  </option>\n                ))}\n              </Select>\n            </div>\n\n            {role === 'SELLER' && (\n              <div className=\"SelectContainer\">\n                <div className=\"labels\">\n                  <span>Unidade do vendedor:</span>\n                  <span>*</span>\n                </div>\n                <Select\n                  height=\"34px\"\n                  backgroundColor=\"#424242\"\n                  color=\"White\"\n                  name=\"unit\"\n                  placeholder=\"Selecione a unidade do vendedor\"\n                  containerProps={{\n                    marginTop: '16px',\n                    marginRight: 8,\n                    width: '100%',\n                    height: '37px',\n                    border: '2px solid',\n                    borderColor: '#585858',\n                    backgroundColor: '#424242',\n                  }}\n                >\n                  {unitSelectOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>\n                      {opt.label}\n                    </option>\n                  ))}\n                </Select>\n              </div>\n            )}\n          </Inputs>\n\n          <Separator>\n            <span>Dados do conta</span>\n            <div />\n          </Separator>\n\n          <Inputs>\n            <InputContainer style={{ width: '275px' }}>\n              <div className=\"labels\">\n                <span>Nome de login:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"username\"\n                type=\"username\"\n                name=\"username\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '300px' }}>\n              <div className=\"labels\">\n                <span>E-mail:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '250px' }}>\n              <div className=\"labels\">\n                <span>Senha:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n\n            <InputContainer style={{ width: '250px' }}>\n              <div className=\"labels\">\n                <span>Confirmar senha:</span>\n                <span>*</span>\n              </div>\n              <Input\n                className=\"input\"\n                id=\"confirmPassword\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                style={{ width: '30px' }}\n              />\n            </InputContainer>\n          </Inputs>\n\n          <Button isDisabled={loading} type=\"submit\">\n            Salvar\n          </Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default UsersRegister;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../context/auth';\n\ninterface IRouteProps extends ReactDOMRouteProps {\n  permissions?: string[];\n  component: React.ComponentType;\n}\n\nconst Permission: React.FC<IRouteProps> = ({\n  permissions = ['MANAGER', 'SELLER', 'ADMIN'],\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={() =>\n        !user ? (\n          <Component />\n        ) : permissions.includes(user.role) ? (\n          <Component />\n        ) : (\n          <Redirect to=\"/services\" />\n        )\n      }\n    />\n  );\n};\n\nexport default Permission;\n","import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../context/auth';\nimport Permission from './Permission';\n\ninterface IRouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n  permissions?: string[];\n}\n\nconst Route: React.FC<IRouteProps> = ({\n  permissions,\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) =>\n        isPrivate === !!user ? (\n          <Permission permissions={permissions} component={Component} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : 'services',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default Route;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Companies from '../pages/Companies';\nimport CompaniesRegister from '../pages/CompaniesRegister';\nimport FirstLogin from '../pages/FirstLogin';\nimport Login from '../pages/Login';\nimport NotFound from '../pages/NotFound';\nimport Reports from '../pages/Reports';\nimport Sales from '../pages/Sales';\nimport SalesRegister from '../pages/SalesRegister';\nimport Sellers from '../pages/Sellers';\nimport SellersRegister from '../pages/SellersRegister';\nimport Services from '../pages/Services';\nimport Service from '../pages/Services/Vitrificação';\nimport ServicesAdmin from '../pages/ServicesAdmin';\nimport ServicesRegister from '../pages/ServicesRegister';\nimport SetCompanyFirstPrices from '../pages/SetCompanyFirstPrices';\nimport UnitiesRegister from '../pages/UnitiesRegister';\nimport UpdateCompanyPrices from '../pages/UpdateCompanyPrices';\nimport Users from '../pages/UsersByCompanies';\nimport UsersRegister from '../pages/UsersRegister';\nimport Route from './Route';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Login} />\n    <Route path=\"/first-login\" component={FirstLogin} isPrivate />\n    <Route path=\"/services\" component={Services} isPrivate />\n    <Route path=\"/service/vitrificacao\" component={Service} isPrivate />\n    <Route\n      path=\"/administration-services\"\n      component={ServicesAdmin}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n    <Route\n      path=\"/services-register\"\n      component={ServicesRegister}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n    <Route\n      path=\"/set-prices\"\n      component={SetCompanyFirstPrices}\n      isPrivate\n      permissions={['MANAGER']}\n    />\n    <Route\n      path=\"/sales-register\"\n      component={SalesRegister}\n      isPrivate\n      permissions={['MANAGER', 'SELLER']}\n    />\n    <Route\n      path=\"/sellers\"\n      component={Sellers}\n      isPrivate\n      permissions={['MANAGER']}\n    />\n    <Route\n      path=\"/sellers-register\"\n      component={SellersRegister}\n      isPrivate\n      permissions={['MANAGER']}\n    />\n    <Route\n      path=\"/sales\"\n      component={Sales}\n      isPrivate\n      permissions={['MANAGER', 'SELLER', 'ADMIN']}\n    />\n    <Route\n      path=\"/prices\"\n      component={UpdateCompanyPrices}\n      isPrivate\n      permissions={['MANAGER']}\n    />\n    <Route\n      path=\"/companies\"\n      component={Companies}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n    <Route\n      path=\"/companies-register\"\n      component={CompaniesRegister}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n    <Route\n      path=\"/unities-register\"\n      component={UnitiesRegister}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n    <Route path=\"/users\" component={Users} isPrivate permissions={['ADMIN']} />\n    <Route\n      path=\"/users-register\"\n      component={UsersRegister}\n      isPrivate\n      permissions={['ADMIN']}\n    />\n\n    <Route\n      path=\"/reports\"\n      component={Reports}\n      isPrivate\n      permissions={['MANAGER', 'ADMIN']}\n    />\n\n    <Route path=\"*\" component={NotFound} exact />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');\n\n* {\nmargin: 0;\npadding: 0;\noutline: 0;\nbox-sizing: border-box;\n}\n\nhtml, body, #root{\nheight: 100%;\n}\n\nbody {\nfont: 14px 'Roboto', sans-serif;\nbackground: #383838;\ncolor: #EEE;\ntext-rendering: optimizeLegibility;\n-webkit-font-smoothing: antialiased;\n}\n\ninput, button {\n  font: 16px 'Roboto', sans-serif;\n}\n\nbutton{\n  cursor: pointer;\n}\n\nul{\nlist-style: none;\n}\n`;\nexport default GlobalStyle;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './components/DatePicker/module.css';\nimport AppProvider from './context/index';\nimport ThemeContainer from './context/theme/ThemeContainer';\nimport Routes from './routes';\nimport GlobaStyle from './styles/global';\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeContainer>\n        <AppProvider>\n          <Routes />\n        </AppProvider>\n      </ThemeContainer>\n      <GlobaStyle />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/sign-in-background-3.4fccbeac.jpg\";"],"sourceRoot":""}